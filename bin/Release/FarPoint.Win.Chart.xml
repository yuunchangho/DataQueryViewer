<?xml version="1.0"?>
<doc>
    <assembly>
        <name>FarPoint.Win.Chart</name>
    </assembly>
    <members>
        <member name="T:FarPoint.Win.Chart.AreaSeries">
            <summary>
            Represents an area series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Area borders and area fills
            can be assigned for the series or for a point in the series
            with null (Nothing in VB) indicating unassigned.  Area depth is
            measured relative to the floor grid cell (with a range of 0 to 1).
            Area origin can be automatically generated or manually assigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.#ctor(FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.AreaBorders">
            <summary>
            Gets the collection of area borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.AreaFills">
            <summary>
            Gets the collection of area fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.AreaBorder">
            <summary>
            Gets or sets the area border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.AreaFill">
            <summary>
            Gets or sets the area fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.DropLinesLine">
            <summary>
            Gets or sets the line used to draw the drop lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.SmoothedLine">
            <summary>
            Gets or sets whether the line is smoothed (not jagged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.DropLinesVisible">
            <summary>
            Gets or sets whether drop lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.AutoOrigin">
            <summary>
            Gets or sets whether the area origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false, then the area origin is manually assigned via the
            Origin property.  If true, then area origin is automatically
            calculated as the minimum value in the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.Origin">
            <summary>
            Gets or sets the area origin.
            </summary>
            <remarks>
            This property is only used when AutoOrigin is false.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.values_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.areaBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.areaFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.AreaSeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.#ctor(FarPoint.Win.Chart.AreaSeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets value indiciating whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#AreaSeries}#IsReadOnly">
            <summary>
            Gets value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets value indicating wheter access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.Add(FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.AddRange(FarPoint.Win.Chart.AreaSeries[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.AreaSeries[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.Remove(FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#IEnumerable{FarPoint#Win#Chart#Series}#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.Contains(FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.IndexOf(FarPoint.Win.Chart.AreaSeries)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.CopyTo(FarPoint.Win.Chart.AreaSeries[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.AreaSeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.AreaSeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpDescriptionAttribute.#cctor">
            <summary>
            Initializes the <see cref="T:FarPoint.Win.Chart.FpDescriptionAttribute"/> class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpDescriptionAttribute.#ctor(System.String)">
            <summary>
            Creates a new FarPoint description attribute.
            </summary>
            <param name="key">Unique identifier</param>
        </member>
        <member name="P:FarPoint.Win.Chart.FpDescriptionAttribute.Description">
            <summary>
            Gets the description.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.FpCategoryAttribute">
            <summary>
            Represents the FarPoint category attribute.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpCategoryAttribute.#cctor">
            <summary>
            Initializes the <see cref="T:FarPoint.Win.Chart.FpCategoryAttribute"/> class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpCategoryAttribute.#ctor(System.String)">
            <summary>
            Creates a new FarPoint category attribute.
            </summary>
            <param name="key">Unique identifier</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpCategoryAttribute.GetLocalizedString(System.String)">
            <summary>
            Gets the localized string.
            </summary>
            <param name="value">Value of string</param>
            <returns></returns>
        </member>
        <member name="T:FarPoint.Win.Chart.PlotAreaAttribute">
            <summary>
            This atttribute is used to associate the plot area type of the a series to the series's definition class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaAttribute.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.PlotAreaAttribute"/> class.
            </summary>
            <param name="plotAreaType">Type of the plot area which can contain the series.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaAttribute.PlotAreaType">
            <summary>
            Gets the type of the plot area which can contain the series.
            </summary>
            <value>The type of the plot area.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.Axis">
            <summary>
            Represents the Base class for axes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Axis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Axis._titleOverlay">
            <summary>
            Specifies whether the axis title overlaps the axis label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Axis.TitleOverlay">
            <summary>
            Gets whether the axis title overlaps the axis label.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Axis._titleManualLayout">
            <summary>
            Specifies whether the axis title items are placed manually.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Axis.TitleManualLayout">
            <summary>
             Gets or sets whether the axis title items are placed manually.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Axis.#ctor(FarPoint.Win.Chart.Axis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.Axis.Changed">
            <summary>
            Occurs when the axis is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Axis.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.Axis.PropertyChanging">
            <summary>
            Occurs when the series is changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Axis.OnPropertyChanging(System.EventArgs)">
            <summary>
            Raises the Validating event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.Axis.LabelFormatter">
            <summary>
            Gets or sets the label formatter object for the axis labels.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.PropertyChangingEventArgs">
            <summary>
            Represents the event data for the PropertyChanging event of the object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PropertyChangingEventArgs.#ctor(System.String,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.PropertyChangingEventArgs"/> class.
            </summary>
            <param name="propName">The property name</param>
            <param name="newValue">The new value</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PropertyChangingEventArgs.PropertyName">
            <summary>
            The name of the property whose value is changing.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PropertyChangingEventArgs.NewValue">
            <summary>
            Gets the new value to be set by the property.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PropertyChangingEventArgs.Cancel">
            <summary>
            Gets or sets whether to cancel changing the property value.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.AxisLocation">
            <summary>
            Specifies the location of the axis relative to the plot area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Near">
            <summary>
            Displays axis on the near side of the plot area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Far">
            <summary>
            Displays axis on the far side of the plot area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Origin">
            <summary>
            Displays axis on the origin value on other axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Value">
            <summary>
            Display axis on a specified value on other axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Minimum">
            <summary>
            Display axis on the minimum value on other axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisLocation.Maximum">
            <summary>
            Display axis on the maximum value on other axis.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.AxisPosition">
            <summary>
            Specifies the position of the axis relative to other axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisPosition.OnTicks">
            <summary>
            Displays axis on the tick marks of other axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisPosition.BetweenTicks">
            <summary>
            Display axis between tick marks of other axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.AxisLocationTypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports a standard set of values that can be picked from a list, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetStandardValues"/> should be called to find a common set of values the object supports; otherwise, false.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AxisLocationTypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns a collection of standard values for the data type this type converter is designed for when provided with a format context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context that can be used to extract additional information about the environment from which this converter is invoked. This parameter or properties of this parameter can be null.</param>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter.StandardValuesCollection"/> that holds a standard set of valid values, or null if the data type does not support a standard set of values.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.AxisLocationTypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
            <summary>
            Returns whether the given value object is valid for this type and for the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">The <see cref="T:System.Object"/> to test for validity.</param>
            <returns>
            true if the specified value is valid for this object; otherwise, false.
            </returns>
        </member>
        <member name="T:FarPoint.Win.Chart.BarSeries">
            <summary>
            Represents a bar series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Bar borders and bar fills
            can be assigned for the series or for a point in the series with null
            (Nothing in VB) indicating unassigned.  Bar width and bar depth are
            measured relative to the floor grid cell (with a range of 0 to 1).
            Bar origin can be automatically generated or manually assigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.#ctor(FarPoint.Win.Chart.BarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BarBorders">
            <summary>
            Gets the collection of bar borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BarFills">
            <summary>
            Gets the collection of bar fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BottomBevels">
            <summary>
            Gets the collection of bottom bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.TopBevels">
            <summary>
            Gets the collection of top bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BarBorder">
            <summary>
            Gets or sets the bar border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BarFill">
            <summary>
            Gets or sets the bar fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BarShape">
            <summary>
            Gets or sets the shape of bars.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.BottomBevel">
            <summary>
            Gets or sets the bottom bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.TopBevel">
            <summary>
            Gets or sets the top bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have same dapth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false, then all data points are displayed with the same color.
            If true, then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.AutoOrigin">
            <summary>
            Gets or sets whether the bar origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false, then the bar origin is manually assigned via the
            Origin property.  If true, then bar origin is automatically
            calculated as the minimum value in the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.Origin">
            <summary>
            Gets or sets the bar origin.
            </summary>
            <remarks>
            This property is only used when AutoOrigin is false.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.barBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.barFills_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.bottomBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.topBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new BarSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.HistogramBar">
            <summary>
            The histogram bar
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.#ctor(FarPoint.Win.Chart.HistogramBar)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.LegendAreaId">
            <summary>
            do not support API
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false, then all data points are displayed with the same color.
            If true, then each data point is displayed with a different color.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.AutoOrigin">
            <summary>
            Gets or sets whether the bar origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false, then the bar origin is manually assigned via the
            Origin property.  If true, then bar origin is automatically
            calculated as the minimum value in the series.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.Origin">
            <summary>
            Gets or sets the bar origin.
            </summary>
            <remarks>
            This property is only used when AutoOrigin is false. 
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.Visible">
            <summary>
            Gets or sets the visible setting.
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.CategoryNames">
            <summary>
            Gets the category names.
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.Values">
            <summary>
            Gets the values.
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.SeriesNameDataSource">
            <summary>
            Gets the data source for the series name.
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.SeriesNameDataField">
            <summary>
            Gets or sets the field in the data source that stores the series name.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.Clone">
            <summary>
            Clone the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new HistogramBar from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramBar.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramBar.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have same width).
            </remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.BarSeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.#ctor(FarPoint.Win.Chart.BarSeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#BarSeries}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.Add(FarPoint.Win.Chart.BarSeries)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.AddRange(FarPoint.Win.Chart.BarSeries[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.BarSeries)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.BarSeries[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.Remove(FarPoint.Win.Chart.BarSeries)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#IEnumerable{FarPoint#Win#Chart#Series}#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.Contains(FarPoint.Win.Chart.BarSeries)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.IndexOf(FarPoint.Win.Chart.BarSeries)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.CopyTo(FarPoint.Win.Chart.BarSeries[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.BarSeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BarSeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.BarShape">
            <summary>
            Specifies the shape of a bar in a bar series chart.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.Box">
            <summary>
            Displays a rectangular solid (box) bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.FullPyramid">
            <summary>
            Displays a pyramidal bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.PartialPyramid">
            <summary>
            Displays a partial pyramidal bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.Cylinder">
            <summary>
            Displays a cylindrical bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.FullCone">
            <summary>
            Displays a conic bar
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BarShape.PartialCone">
            <summary>
            Displays a partial conic bar
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Bevel">
            <summary>
            Represents a base class for bevels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Bevel.Width">
            <summary>
            Gets the width of the bevel.
            </summary>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Bevel.Height">
            <summary>
            Gets the height of the bevel.
            </summary>
            <remarks>Height is measured in points.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.NoBevel">
            <summary>
            Represents a none bevel.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.NoBevel.#ctor">
            <summary>
            Creates a none bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.NoBevel.Width">
            <summary>
            Gets the width of the bevel.
            </summary>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.NoBevel.Height">
            <summary>
            Gets the height of the bevel.
            </summary>
            <remarks>Height is measured in points.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.CircleBevel">
            <summary>
            Represents a circular bevel.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.CircleBevel.#ctor">
            <summary>
            Creates a circular bevel with width of 6 points and a height
            of 6 points.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.CircleBevel.#ctor(System.Single,System.Single)">
            <summary>
            Creates a circular bevel.
            </summary>
            <param name="width">Width of the bevel.</param>
            <param name="height">Height of the bevel.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            width is less than zero or greater than 1584.
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            height is less than zero or greater than 1584.
            </exception>
            <remarks>Width is measured in points.</remarks>
            <remarls>Height is measured in points.</remarls>
        </member>
        <member name="P:FarPoint.Win.Chart.CircleBevel.Width">
            <summary>
            Gets the width of the bevel.
            </summary>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CircleBevel.Height">
            <summary>
            Gets the height of the bevel.
            </summary>
            <remarks>Height is measured in points.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.BevelConverter">
            <summary>
            Represents a type converter for the bevel.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Destination type for the conversion</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.BevelDialog">
            <summary>
            The dialog for bevel settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelDialog.#ctor">
            <summary>
            Initializes the new <see cref="T:FarPoint.Win.Chart.Design.BevelDialog"/> instance.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelDialog.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BevelDialog.Bevel">
            <summary>
            Gets or sets the bevel effect property in the dialog.
            </summary>
            <value>
            A <see cref="P:FarPoint.Win.Chart.Design.BevelDialog.Bevel"/> object that indicates the bevel effect.
            </value>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.BevelDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.AxisLabelControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.AxisLabelControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AxisLabelControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.AxisLabelControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AxisLabelControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AxisLabelControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.AxisOptions.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AxisOptions.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AxisOptions.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatAxis">
            <summary>
            Dialog for setting properties of an Axis in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Axis)">
            <summary>
            Constructor of FormatAxis dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="axis">Axis in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Axis,FarPoint.Win.Chart.AxisInfo.AxisType)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Axis,FarPoint.Win.Chart.AxisInfo.AxisType,FarPoint.Win.Chart.PlotArea)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.InstallEventListeners">
            <summary>
            Attaches event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes when Chart Model changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatAxis.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.GridLineControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.GridLineControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GridLineControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.GridLineControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GridLineControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GridLineControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.LabelScaleControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.LabelScaleControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelScaleControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.LabelScaleControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelScaleControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelScaleControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.RulerControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.RulerControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.RulerControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.RulerControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.RulerControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.RulerControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.TextFontControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TextFontControl.Font">
            <summary>
            Get or set Font
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextFontControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.TextFontControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextFontControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextFontControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.TicksControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TicksControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TicksControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.TicksControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TicksControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TicksControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.TitleControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TitleControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TitleControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.TitleControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TitleControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TitleControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatChartArea">
            <summary>
            Dialog for setting properties of ChartArea in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatChartArea.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType)">
            <summary>
            Constructor of FormatChartArea dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatChartArea.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes when chart model changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatChartArea.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatDataLabel">
            <summary>
            Dialog for setting properties of DataLabel in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataLabel.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Series)">
            <summary>
            Constructor of FormatDataLabel dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="series">Series in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataLabel.InstallEventListeners">
            <summary>
            Attaches event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataLabel.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataLabel.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes when Chart Model changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataLabel.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.GeneralLabelControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.GeneralLabelControl.Series">
            <summary>
            Get or Set series of chartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralLabelControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralLabelControl.#ctor">
            <summary>
            Constructor of GeneralSeriesControl
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.GeneralLabelControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralLabelControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralLabelControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatDataPoint">
            <summary>
            Dialog for setting properties of DataPoint in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Series,System.Int32)">
            <summary>
            Constructor of FormatDataPoint dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="series">Series in ChartModel to format</param>
            <param name="indexPoint">Index of point in the Series</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.InitializeFormatDialog">
            <summary>
            Initializes form elements
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.InstallEventListeners">
            <summary>
            Attaches event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatDataPoint.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes when Chart Model changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.GeneralDataPointControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.GeneralDataPointControl.Series">
            <summary>
            Get or Set series of chartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralDataPointControl.#ctor">
            <summary>
            Constructor of GeneralSeriesControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralDataPointControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.GeneralDataPointControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralDataPointControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralDataPointControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.PieDetachmentControl.Changed">
            <summary>
            Event for PieDetachmentControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.PieDetachmentControl.IndexPoint">
            <summary>
            Get and set index of dataPoint
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.PieDetachmentControl.Series">
            <summary>
            Get and set PieSeries that contains dataPoint
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PieDetachmentControl.#ctor">
            <summary>
            constructor of PieDetachmentControls
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PieDetachmentControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.PieDetachmentControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PieDetachmentControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PieDetachmentControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AlignmentControl.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.Design.AlignmentControl"/> class.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.AlignmentControl.Axis">
            <summary>
            Get or set Axis
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AlignmentControl.txtTextLayoutHeader_Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Handles the Paint event of the txtTextLayoutHeader control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Forms.PaintEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.AlignmentControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AlignmentControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AlignmentControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatLabelArea">
            <summary>
            Dialog for setting properties of LabelArea in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLabelArea.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.LabelArea)">
            <summary>
            Constructor of FormatLabelArea dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="labelArea">LabelArea in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLabelArea.InstallEventListeners">
            <summary>
            Attaches event listeners to its container object
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLabelArea.UninstallEventListeners">
            <summary>
            Removes event listener
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLabelArea.InitializeFormatDialog">
            <summary>
            Initializes form elements
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLabelArea.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Proccesses the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.PositionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PositionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PositionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.TextControl.Changed">
            <summary>
            Event when LabelAppearanceControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TextControl.TextFont">
            <summary>
            Get Text Font of Label Area 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TextControl.LabelText">
            <summary>
            Get Text of Label Area
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.TextControl.TextFill">
            <summary>
            Get Text Fill of Label Area
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextControl.#ctor">
            <summary>
            Constructor of TextControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextControl.Init(FarPoint.Win.Chart.Series)">
            <summary>
            Initialize the formatting properties
            </summary>
            <param name="series"></param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.TextControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.TextControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.AppearanceControl">
            <summary>
            
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.AppearanceControl.Changed">
            <summary>
            Event when AppearanceControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.AppearanceControl.LegendArea">
            <summary>
            Get or set LegendArea 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AppearanceControl.#ctor">
            <summary>
            Constructor of AppearanceControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AppearanceControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.AppearanceControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AppearanceControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.AppearanceControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatLegendArea">
            <summary>
            Dialog for setting properties of LegendArea in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLegendArea.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.LegendArea)">
            <summary>
            Constructor of FormatLegendArea dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="legendArea">LegendArea in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLegendArea.InstallEventListeners">
            <summary>
            Attaches event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLegendArea.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatLegendArea.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatPlotArea">
            <summary>
            Dialog for setting properties of PlotArea in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatPlotArea.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.PlotArea)">
            <summary>
            Constructor of FormatPlotArea dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="plotArea">PlotArea in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatPlotArea.InstallEventListeners">
            <summary>
            Attaches event listerns on collectin changed and object changed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatPlotArea.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatPlotArea.InitializeFormatDialog">
            <summary>
            Initalizes form elements
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatPlotArea.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpTabControl.DistanceOut">
            <summary>
            Return the Distance of X condition when redraw.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpTabControl.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.FpTabUserControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpTabUserControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpTabUserControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.SettingControl.Changed">
            <summary>
            event when SettingControl changed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SettingControl.#ctor">
            <summary>
            Constructor of SettingControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SettingControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.SettingControl.HeaderText">
            <summary>
            Get or set headerText of SettingControl
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.SettingControl.PlotArea">
            <summary>
            Get or set PlotArea
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.SettingControl.ChartViewType">
            <summary>
            Get or set Chartviewtype
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.SettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.ThreeDSettingControl.Changed">
            <summary>
            Event when ThreeSettingControl changed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.#ctor">
            <summary>
            Constructor of ThreeDSettingControl
            </summary>        
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.ThreeDSettingControl.PlotArea">
            <summary>
            Get or set PlotArea 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.InitValue">
            <summary>
            Set value for all control from current plotArea.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.UpdateVisibility">
            <summary>
            Set visible for Projection
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ThreeDSettingControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ThreeDSettingControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.WallControl.Changed">
            <summary>
            Event when WallControl changed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.WallControl.#ctor">
            <summary>
            Constructor of WallControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.WallControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.WallControl.Wall">
            <summary>
            Get or Set Wall
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.WallControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.WallControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.WallControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.BarShapeControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BarShapeControl.Series">
            <summary>
            Get or Set series of chartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BarShapeControl.#ctor">
            <summary>
            Constructor of GeneralSeriesControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BarShapeControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.BarShapeControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BarShapeControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BarShapeControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.BoxWhiskerControl">
            <summary>
            
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BoxWhiskerControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BoxWhiskerControl.Series">
            <summary>
            
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.BoxWhiskerControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BoxWhiskerControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BoxWhiskerControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.CompositeSeriesControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.CompositeSeriesControl.ViewType">
            <summary>
            Get or set ChartViewType or chartControl
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.CompositeSeriesControl.Series">
            <summary>
            Get or Set series of chartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CompositeSeriesControl.#ctor">
            <summary>
            Constructor of CompositeSeriesControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CompositeSeriesControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.CompositeSeriesControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CompositeSeriesControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CompositeSeriesControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.DropLinesControl.Changed">
            <summary>
            Event when BevelControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.DropLinesControl.Series">
            <summary>
            Get or set DropLines
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.DropLinesControl.#ctor">
            <summary>
            Constructor of DropLinesControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.DropLinesControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.DropLinesControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.DropLinesControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.DropLinesControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FormatSeries">
            <summary>
            Dialog for setting properties of series in ChartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.Series)">
            <summary>
            Constructor of FormatSeries dialog
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="series">Series in ChartModel to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.ICompositeSeries,FarPoint.Win.Chart.Series)">
            <summary>
            Constructor of FormatSeries dialog with compositeSeries
            </summary>
            <param name="chartModel">ChartModel to format</param>
            <param name="viewType">ViewType of ChartModel</param>
            <param name="compositeSeries">CompositeSeries in ChartModel to format</param>
            <param name="series">Series in CompositeSeries to format</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.InitializeFormatDialog">
            <summary>
            Initializes form elements
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.InstallEventListeners">
            <summary>
            Attaches event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.UninstallEventListeners">
            <summary>
            Removes event listeners
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FormatSeries.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes when Chart Model changed
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.GeneralSeriesControl.Changed">
            <summary>
            Event when GeneralSeriesControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.GeneralSeriesControl.Series">
            <summary>
            Get or Set series of chartControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralSeriesControl.#ctor">
            <summary>
            Constructor of GeneralSeriesControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralSeriesControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.GeneralSeriesControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralSeriesControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.GeneralSeriesControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpListView.HeaderTextFont">
            <summary>
            Gets or sets the font of the header text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpListView.HeaderTextColor">
            <summary>
            Gets or sets the color of the header text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpListView.HeaderBackColor">
            <summary>
            Gets or sets the color of the header backColor
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpListView.Images">
            <summary>
            Get or set the imageList for listview
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.OnMouseHover(System.EventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.PreProcessMessage(System.Windows.Forms.Message@)">
            <summary>
            Preprocesses keyboard or input messages within the message loop before they are dispatched.
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpListView.DrawGroupHeader">
            <summary>
            Drawing group header
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.InsertChart">
            <summary>
            Dialog for inserting the predefined ChartType in ChartControl
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.InsertChart.Model">
            <summary>
            ChartModel is read-only property, returned by the InsertChart dialog.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.#ctor">
            <summary>
            InsertChart constructor
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.InsertChart.Configuration">
            <summary>
            Get or set name of config file xml
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.InsertChart.SelectedModel">
            <summary>
            get or set the selected model name
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.InsertChart.ViewType">
            <summary>
            Get the chartviewtype of chart
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.PreFilterMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes MouseWheel outside the area of ListViewChartType
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.ResetPreviousSelectedItem">
            <summary>
            Set the previous Selected item for listview on right side
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.GetModelName(FarPoint.Win.Chart.ChartViewType,FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series)">
            <summary>
            Return the model name defined in the xml
            </summary>
            <param name="viewType">the ChartViewType of FpChart</param>
            <param name="plotArea">the PlotArea of FpChart</param>
            <param name="series">the series of FpChart</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.GetChartModel(FarPoint.Win.Chart.Design.ChartType,FarPoint.Win.Chart.ChartModel@,FarPoint.Win.Chart.ChartViewType@)">
            <summary>
            Get ChartModel from default configuration file according to specified chart type.
            </summary>
            <param name="chartType">Specified ChartType by which to find Chart</param>
            <param name="chartModel">ChartModel found</param>
            <param name="viewType">ChartViewType of ChartModel found</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.InsertChart.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.InsertChart.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.ChartType">
            <summary>
            There're all predefined ChartType
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredColumnChart">
            <summary>
            predefined ClusteredColumnChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedColumnChart">
            <summary>
            predefined StackedColumnChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100ColumnChart">
            <summary>
            predefined Stacked100ColumnChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowColumnChart">
            <summary>
            predefined HighLowColumnChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredColumnIn3DChart">
            <summary>
            predefined ClusteredColumnIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedColumnIn3DChart">
            <summary>
            predefined StackedColumnIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100ColumnIn3DChart">
            <summary>
            predefined Stacked100ColumnIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ColumnIn3DChart">
            <summary>
            predefined ColumnIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowBarIn3DChart">
            <summary>
            predefined HighLowBarIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowColumnIn3DChart">
            <summary>
            predefined HighLowColumnIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredCylinderChart">
            <summary>
            predefined ClusteredCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedCylinderChart">
            <summary>
            predefined StackedCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100CylinderChart">
            <summary>
            predefined Stacked100CylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.CylinderIn3DChart">
            <summary>
            predefined CylinderIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowCylinderChart">
            <summary>
            predefined HighLowCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredFullConeChart">
            <summary>
            predefined ClusteredFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedFullConeChart">
            <summary>
            predefined StackedFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100FullConeChart">
            <summary>
            predefined Stacked100FullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.FullConeIn3DChart">
            <summary> 
            predefined FullConeIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowFullConeChart">
            <summary>
            predefined HighLowFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredFullPyramidChart">
            <summary>
            predefined ClusteredFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedFullPyramidChart">
            <summary>
            predefined StackedFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100FullPyramidChart">
            <summary>
            predefined Stacked100FullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.FullPyramidIn3DChart">
            <summary>
            predefined FullPyramidIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowFullPyramidChart">
            <summary>
            predefined HighLowFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.LineIn2DChart">
            <summary>
            predefined LineIn2DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedLineChart">
            <summary>
            predefined StackedLineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100LineChart">
            <summary>
            predefined Stacked100LineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.LineWithMarkersChart">
            <summary>
            predefined LineWithMarkersChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedLineWithMarkersChart">
            <summary>
            predefined StackedLineWithMarkersChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100LineWithMarkersChart">
            <summary>
            predefined Stacked100LineWithMarkersChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.LineIn3DChart">
            <summary>
            predefined LineIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PieIn2DChart">
            <summary>
            predefined PieIn2DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PieIn3DChart">
            <summary>
            predefined PieIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ExplodedPieIn2DChart">
            <summary>
            predefined ExplodedPieIn2DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ExplodedPieIn3DChart">
            <summary>
            predefined ExplodedPieIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredBarChart">
            <summary>
            predefined ClusteredBarChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedBarChart">
            <summary>
            predefined StackedBarChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100BarChart">
            <summary>
            predefined Stacked100BarChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowBarChart">
            <summary>
            predefined HighLowBarChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredBarIn3DChart">
            <summary>
            predefined ClusteredBarIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedBarIn3DChart">
            <summary>
            predefined StackedBarIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100BarIn3DChart">
            <summary>
            predefined Stacked100BarIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredHorizontalCylinderChart">
            <summary>
            predefined ClusteredHorizontalCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedHorizontalCylinderChart">
            <summary>
            predefined StackedHorizontalCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100HorizontalCylinderChart">
            <summary>
            predefined Stacked100HorizontalCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowBarCylinderChart">
            <summary>
            predefined HighLowBarCylinderChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredHorizontalFullConeChart">
            <summary>
            predefined ClusteredHorizontalFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedHorizontalFullConeChart">
            <summary>
            predefined StackedHorizontalFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100HorizontalFullConeChart">
            <summary>
            predefined Stacked100HorizontalFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowBarFullConeChart">
            <summary>
            predefined HighLowBarFullConeChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ClusteredHorizontalFullPyramidChart">
            <summary>
            predefined ClusteredHorizontalFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedHorizontalFullPyramidChart">
            <summary>
            predefined StackedHorizontalFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100HorizontalFullPyramidChart">
            <summary>
            predefined Stacked100HorizontalFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowBarFullPyramidChart">
            <summary>
            predefined HighLowBarFullPyramidChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.AreaIn2DChart">
            <summary>
            predefined AreaIn2DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedAreaChart">
            <summary>
            predefined StackedAreaChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100AreaChart">
            <summary>
            predefined Stacked100AreaChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowAreaChart">
            <summary>
            predefined HighLowAreaChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.AreaIn3DChart">
            <summary>
            predefined AreaIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.StackedAreaIn3DChart">
            <summary>
            predefined StackedAreaIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.Stacked100AreaIn3DChart">
            <summary>
            predefined Stacked100AreaIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowAreaIn3DChart">
            <summary>
            predefined HighLowAreaIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYPointChart">
            <summary>
            predefined XYPointChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYLineChart">
            <summary>
            predefined XYLineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYLineWithMarkerChart">
            <summary>
            predefined XYLineWithMarkerChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYBubbleIn2DChart">
            <summary>
            predefined XYBubbleIn2DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYBubbleIn3DChart">
            <summary>
            predefined XYBubbleIn3DChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HighLowCloseChart">
            <summary>
            predefined HighLowCloseChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.OpenHighLowCloseChart">
            <summary>
            predefined OpenHighLowCloseChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.CandlestickChart">
            <summary>
            predefined CandlestickChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYZLineChart">
            <summary>
            predefined XYZLineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYZPointChart">
            <summary>
            predefined XYZPointChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYZLineWithMarkerChart">
            <summary>
            predefined XYZLineWithMarkerChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.XYZSurfaceChart">
            <summary>
            predefined XYZSurfaceChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.DoughnutChart">
            <summary>
            predefined DoughnutChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ExplodedDoughnutChart">
            <summary>
            predefined ExplodedDoughnutChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.RadarLineChart">
            <summary>
            predefined RadarLineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.RadarPointChart">
            <summary>
            predefined RadarPointChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.RadarLineWithMarkerChart">
            <summary>
            predefined RadarLineWithMarkerChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.RadarAreaChart">
            <summary>
            predefined RadarAreaChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PolarLineChart">
            <summary>
            predefined PolarLineChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PolarPointChart">
            <summary>
            predefined PolarPointChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PolarLineWithMarkerChart">
            <summary>
            predefined PolarLineWithMarkerChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.PolarAreaChart">
            <summary>
            predefined PolarAreaChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.TreemapChart">
            <summary>
            predefined TreemapChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.SunburstChart">
            <summary>
            predefined SunburstChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.HistogramChart">
            <summary>
            predefined HistogramChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.ParetoChart">
            <summary>
            predefined ParetoChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.BoxWhiskerChart">
            <summary>
            predefined BoxWhiskerChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.WaterfallChart">
            <summary>
            predefined WaterfallChart
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ChartType.FunnelChart">
            <summary>
            predefined FunnelChart
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.TextFont">
            <summary>
            Gets or sets the font of the text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.TextColor">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.GradientColor1">
            <summary>
            Gets or sets the gradientcolor1 of the backColor
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.GradientColor2">
            <summary>
            Gets or sets the gradientcolor2 of the backColor
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.Showing">
            <summary>
            get the showing value
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.Width">
            <summary>
            Get or set the width of tooltip
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.Height">
            <summary>
            Get or set the height of tooltip
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.LifeTime">
            <summary>
            Get or set the life time of tooltip
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgToolTip.Text">
            <summary>
            Get or set the text of tooltip
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.HideAfter(System.Int32)">
            <summary>
            set HideAfter time.
            </summary>
            <param name="miliseconds"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.Hide">
            <summary>
            Hiding tooltip
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.Show">
            <summary>
            show tooltip
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.Show(System.Int32,System.Int32)">
            <summary>
            show tooltip at (x,y)
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgToolTip.System#IDisposable#Dispose">
            <summary>
            dispose tooltip
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.BevelControl.Changed">
            <summary>
            Event when BevelControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BevelControl.Bevel">
            <summary>
            Get or set Bevel
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelControl.#ctor">
            <summary>
            Constructor of BevelControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.BevelControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BevelControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.BorderControl.Changed">
            <summary>
            Event when BorderControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BorderControl.LineBorder">
            <summary>
            Get or set LineBorder
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.BorderControl.HeaderText">
            <summary>
            Get or set HeaderText
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BorderControl.#ctor">
            <summary>
            Constructor of BorderControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BorderControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.BorderControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BorderControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.BorderControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.EnhancedBorderControl.Changed">
            <summary>
            Event when BorderControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.EnhancedBorderControl.LineBorder">
            <summary>
            Get or set LineBorder
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.EnhancedBorderControl.HeaderText">
            <summary>
            Get or set HeaderText
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.EnhancedBorderControl.#ctor">
            <summary>
            Constructor of BorderControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.EnhancedBorderControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.EnhancedBorderControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.EnhancedBorderControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.EnhancedBorderControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.FillControl.Changed">
            <summary>
            Event when FillControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FillControl.FontHeaderText">
            <summary>
            Get or set font of HeaderText
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FillControl.HeaderText">
            <summary>
            Get or set HeaderText
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FillControl.Fill">
            <summary>
            Get or set Fill of this control
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillControl.#ctor">
            <summary>
            Constructor of FillControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.FillControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FpChartBaseDialog">
            <summary>
            This is the template Form for all other setting forms
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpChartBaseDialog.ChartModel">
            <summary>
            Chart Model to be edited
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpChartBaseDialog.ViewType">
            <summary>
            View Type of Chart Model, 2D or 3D
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.#ctor">
            <summary>
            Constructor of FpChart Base dialog
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.#ctor(FarPoint.Win.Chart.ChartModel,FarPoint.Win.Chart.ChartViewType)">
            <summary>
            Constructor of FpChart Base dialog
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.UninstallEventListeners">
            <summary>
            Removes the event listeners attached to ChartModel object
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.InstallEventListeners">
            <summary>
            Attaches the event listeners to ChartModel object
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.InitializeFormatDialog">
            <summary>
            Initializes form elements
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.ProcessChartModelChanged(System.EventArgs)">
            <summary>
            Processes changes according to ChartModel changes
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.OnPropertySelectedChanged(System.EventArgs)">
            <summary>
            Processes the property selected changed event
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.OnLoad(System.EventArgs)">
            <summary>
            Installs event listeners when the form first loaded
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.OnClosed(System.EventArgs)">
            <summary>
            Removes event listeners when the form closed
            </summary>
            <param name="e"></param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.FpChartBaseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpChartBaseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FpColorButton.Color">
            <summary>
            Get the Color of Button
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpColorButton.#ctor">
            <summary>
            ColorButton constructor
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpColorButton.OnClick(System.EventArgs)">
            <summary>
            OnClick override
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FpPanel.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.NumericUpDownEx.UnitSymbol">
            <summary>
            Gets or sets the unit symbol.
            </summary>
            <value>The unit symbol.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.NumericUpDownEx.OnTextBoxTextChanged(System.Object,System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.TextChanged"/> event.
            </summary>
            <param name="source">The source of the event.</param>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.HgListBox.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.HasImage">
            <summary>
            Check all listView items have to drawing icon or not
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.ImageList">
            <summary>
            Get or set the imagelist for lisbox
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.TextFont">
            <summary>
            Gets or sets the font of the text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.TextColor">
            <summary>
            Gets or sets the color of the text
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.DrawMode">
            <summary>
            Get or set drawing mode for the control
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.SelectionMode">
            <summary>
            Get or set method in which items are selected in ListBox
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.HgListBox.SelectedIndex">
            <summary>
            Get or set the zero-base index of currently selected item in listbox
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the LostFocus event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnGotFocus(System.EventArgs)">
            <summary>
            Raises the GotFocus event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the SelectedIndexChanged event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the MouseLeave event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the MouseMove event
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the OnPaint event
            </summary>
            <param name="pe"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.ProcessKeyMessage(System.Windows.Forms.Message@)">
            <summary>
            Processes a key message.
            </summary>
            <param name="m"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the KeyDown event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.HgListBox_DrawItem(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            Drawing items for listBox
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.HgListBox_MeasureItem(System.Object,System.Windows.Forms.MeasureItemEventArgs)">
            <summary>
            set height for item
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.HgListBox.FromBaseColorWithAlpha(System.Single,System.Drawing.Color)">
            <summary>
            set color from base color with alpha
            </summary>
            <param name="alpha"></param>
            <param name="baseColor"></param>
            <returns></returns>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.LabelOptionControl.Changed">
            <summary>
            Event when LabelOptionControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.LabelOptionControl.LabelOption">
            <summary>
            Get or set LabelOption
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.LabelOptionControl.HeaderText">
            <summary>
            Get or set HeaderText
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelOptionControl.#ctor">
            <summary>
            Constructor of LabelOption
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelOptionControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.LabelOptionControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelOptionControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelOptionControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.MarkerControl.Changed">
            <summary>
            Event when MarkerControl changed
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.MarkerControl.Marker">
            <summary>
            Get or set Marker
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerControl.InitFormValue">
            <summary>
            Constructor of MarkerControl
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerControl.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.MarkerControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.Office2010ColorPickerUtils.ColorEquals(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Compare 2 colors by their RGB properties.
            </summary>
            <param name="color1"></param>
            <param name="color2"></param>
            <returns>True when R,G and B properties of both colors are equals</returns>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.SpreadWinSplitButton.DropDownShowing">
            <summary>
            Occurs before the showing of DropDownWindows. 
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.SpreadWinSplitButton.SelectedItemChanged">
            <summary>
            Occurs when user selects item in DropDownWindow.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.SpreadWinDropDownIconControl.SelectedIconChanged">
            <summary>
            Occurs when the value of the Icon property changes. 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SpreadWinDropDownIconControl.#ctor">
            <summary>
            Initialized a new instance of the OfficeColorPicker in order to provide 
            color picker control that could be used in a model or non-model form.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SpreadWinDropDownIconControl.#ctor(System.Drawing.Icon)">
            <summary>
            Initialized a new instance of the OfficeColorPicker in order to provide 
            color picker control that could be used in a model or non-model form.   
            </summary>
            <param name="startingColor">Starting color to the OfficeColorPicker control</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.SpreadWinDropDownIconControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides, when click on, handles color selection.
            </summary>
            <param name="e"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.CustomDropDownItemControl.IsHighLight">
            <summary>
            Gets or sets item is high light
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CustomDropDownItemControl.SetHighLight(System.Boolean)">
            <summary>
            Sets or move setting item as high light
            </summary>
            <param name="highLight"></param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.CustomDropDownControl.components">
            <summary> 
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CustomDropDownControl.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Handle key (UP, DOWN, PGUP, PGDOWN) event for this custom control.
            </summary>
            <param name="keyData"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CustomDropDownControl.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.CustomDropDownControl.InitializeComponent">
            <summary> 
            Required method for Designer support - do not modify 
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.CustomDropDownControl.ClickedItem">
            <summary>
            Occurs when the value of the Icon property changes. 
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.CustomDropDownControl.SelectedIndexChanged">
            <summary>
            Occurs when the value of the Icon property changes. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.CustomDropDownControl.HighLightItem">
            <summary>
            Gets the high light item
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FillConverter">
            <summary>
            Represents a type converter for the fill.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.#ctor">
            <summary>
            Creates a new fill converter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Destination type for the conversion</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.FillDialog">
            <summary>
            The dialog for fill settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillDialog.#ctor">
            <summary>
            Initializes the new <see cref="T:FarPoint.Win.Chart.Design.FillDialog"/> instance.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillDialog.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.FillDialog.Fill">
            <summary>
            Gets or sets the fill effect property in the dialog.
            </summary>
            <value>
            A <see cref="P:FarPoint.Win.Chart.Design.FillDialog.Fill"/> object that indicates the fill effect.
            </value>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.FillDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.FillDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.Utility.InitChartSampleData(FarPoint.Win.Chart.ChartModel)">
            <summary>
            Initialize data for chart model.
            </summary>
            <param name="chartModel"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.ImageEditor">
            <summary>
            Represents a user-interface type editor for an image.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value.
            </summary>
            <param name="context"></param>
            <param name="provider"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the edit style of the editor dialog.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether to draw the selected image.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
            <summary>
            Draws the selected image.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ImageEditor.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.LabelNumberFormatDialog">
            <summary>
            Dialog to format label number data
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.#ctor">
            <summary>
            Represents the LabelNumberFormat dialog.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.NumberFormat">
            <summary>
            Gets or sets the label number format code to be formatted.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.Init(System.String)">
            <summary>
            Initializes the form value with the existing format code.
            </summary>
            <param name="numberFormat"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.OnLoad(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Form.Load"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.ILabelFormatterPlugin">
            <summary>
            Indicates a plugin which can be added to the Label Format dialog to support the new format.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.FormatterName">
            <summary>
            Gets the name of the formatter.
            </summary>
            <value>The name of the formatter.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.EditingControl">
            <summary>
            Gets the editing control.
            </summary>
            <value>The editing control.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.GetUIFormatCode">
            <summary>
            Gets the UI format code directly from UI controls.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.GetFormatCode">
            <summary>
            Gets the format code.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.SetFormatCode(System.String)">
            <summary>
            Sets the format code.
            </summary>
            <param name="fCode">The f code.</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.Clone">
            <summary>
            Clones this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="E:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.FormatCodeChanged">
            <summary>
            Occurs when the formatted code is changed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.Formatter">
            <summary>
            Gets the formatter.
            </summary>
            <value>The formatter.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.Init(FarPoint.Win.ILabelFormatter)">
            <summary>
            Initializes the specified formatter. This function is called when the plug-in is loaded successfully.
            </summary>
            <param name="formatter">The formatter.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ILabelFormatterPlugin.CanEdit(FarPoint.Win.ILabelFormatter)">
            <summary>
            Determines whether this instance can edit the specified formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <returns>
            	<c>true</c> if this instance can edit the specified formatter; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LabelNumberFormatEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the edit style.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Edit style of the user-interface type editor</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.LineConverter">
            <summary>
            Represents a type converter for a line.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.#ctor">
            <summary>
            Creates a new line converter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Type</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.LineConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.MarkerConverter">
             <summary>
             Represents a type converter for a marker.
             </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.#ctor">
            <summary>
            Creates a new type converter for a marker.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Destination type for the conversion</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.MarkerDialog">
            <summary>
            The dialor for marker settings.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerDialog.#ctor">
            <summary>
            Initializes the new <see cref="T:FarPoint.Win.Chart.Design.MarkerDialog"/> instance.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerDialog.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Design.MarkerDialog.Marker">
            <summary>
            Gets or sets the marker effect property in the dialog.
            </summary>
            <value>
            A <see cref="P:FarPoint.Win.Chart.Design.MarkerDialog.Marker"/> object indicates the marker effect.
            </value>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.MarkerDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.MarkerDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.PaddingFConverter">
            <summary>
            Represents a type converter for padding.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.#ctor">
            <summary>
            Creates a new padding converter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Type</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PaddingFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.PointFConverter">
            <summary>
            Represents a type converter for a point.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.#ctor">
            <summary>
            Creates a new point converter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Type</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.PointFConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.ProjectionConverter">
            <summary>
            Represents a type converter for a projection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.#ctor">
            <summary>
            Creates a new projection converter.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Type</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
            <summary>
            Creates an instance.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="propertyValues">Property values</param>
            <returns>Instance object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether the ability to create an instance is supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: true if the ability to create an instance is supported; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets the properties.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="value">Value</param>
            <param name="attributes">Array of properties</param>
            <returns>Collection of property descriptors</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets whether properties are supported.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Boolean: this implementation always returns true</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert from the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="sourceType">Source type</param>
            <returns>Boolean: true if the control can convert from the specified type; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>
            Converts from the specified culture.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <returns>Object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionDialog.LocalizeGUIStrings">
            <summary>
            Localize GUI strings of this instance
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Design.ProjectionDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Design.ProjectionEditor">
            <summary>
            Represents a user-interface type editor for a projection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionEditor.#ctor">
            <summary>
            Creates a new projection editor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
            <summary>
            Edits the value.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="provider">Service provider</param>
            <param name="value">Value</param>
            <returns>Object containing the value</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Design.ProjectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Gets the edit style.
            </summary>
            <param name="context">Type descriptor context</param>
            <returns>Edit style of the user-interface type editor</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.QuartileCalculationType">
            <summary>
            Specifies the quartile calculation type.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.QuartileCalculationType.ExcluseveMedian">
            <summary>
            The median is excluded from the calculation if N (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.QuartileCalculationType.InclusiveMedian">
            <summary>
             The median is included in the calculation if N (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.BoxWhiskerSeries">
            <summary>
             Represents a box and whisker area series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.#ctor(FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Creates a new box whisker series.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.Border">
            <summary>
            Gets or sets the line for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the surface.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.Fill">
            <summary>
            Gets or sets the fill for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the fill
            is unset for the surface.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.GapWidth">
            <summary>
            Gets or sets the gap width.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.ShowInnerPoints">
            <summary>
            Gets or sets whether to show the inner points.
            </summary>
            <remarks>
            Displays the data points that lie between the lower whisker line and the upper whisker line.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.ShowOutlierPoints">
            <summary>
            Gets or sets whether to show the outlier points.
            </summary>
            <remarks>
            Displays the outlier points that lie either below the lower whisker line or above the upper whisker line.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.ShowMeanMarkers">
            <summary>
            Gets or sets whether to show the mean makers.
            </summary>
            <remarks>
            Displays the mean marker of the selected series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.ShowMeanLine">
            <summary>
            Gets or sets whether to display the line connecting the means of the boxes in the selected series.
            </summary>
            <remarks>
            Displays the line connecting the means of the boxes in the selected series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeries.QuartileMethod">
            <summary>
            Gets or sets the calculation type.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.BoxWhiskerSeries.BoxWhiskerData.Changed">
            <summary>
            Occurs when the data is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.BoxWhiskerData.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.isSpecialValue">
            <summary>
            special policy of excel
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.GetElementValue(System.Int32,System.Int32)">
            <summary>
            Get the point value with a specified element index
            </summary>
            <param name="pointIndex"></param>
            <param name="elementIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
            <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new BoxWhiskerSeries from serialization.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.QuartileMethodType">
            <summary>
            Specifies the quartile calculation type.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.QuartileMethodType.Exclusive">
            <summary>
            The median is excluded from the calculation if N (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.QuartileMethodType.Inclusive">
            <summary>
             The median is included in the calculation if N (the number of values in the data) is odd.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.BoxWhiskerSeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.#ctor(FarPoint.Win.Chart.BoxWhiskerSeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#BoxWhiskerSeries}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Add(FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.AddRange(FarPoint.Win.Chart.BoxWhiskerSeries[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.BoxWhiskerSeries[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Remove(FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#IEnumerable{FarPoint#Win#Chart#Series}#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Contains(FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.IndexOf(FarPoint.Win.Chart.BoxWhiskerSeries)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.CopyTo(FarPoint.Win.Chart.BoxWhiskerSeries[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.Validating">
            <summary>
            Occurs when the series is changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.OnValidating(System.EventArgs)">
            <summary>
            Raises the Validating event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BoxWhiskerSeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.CandlestickSeries">
            <summary>
            Represents a stock series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.#ctor(FarPoint.Win.Chart.CandlestickSeries)">
            <summary>
            Creates a new series that is a deep clone of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of thsi series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.OpenValues">
            <summary>
            Gets the collection of open values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.HighValues">
            <summary>
            Gets the collection of high values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.LowValues">
            <summary>
            Gets the collection of low values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.CloseValues">
            <summary>
            Gets the collection of close values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.UpBorders">
            <summary>
            Gets the collection of up borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.DownBorders">
            <summary>
            Gets the collection of down borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.UpFills">
            <summary>
            Gets the collection of up fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.DownFills">
            <summary>
            Gets the collection of down fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.UpBorder">
            <summary>
            Gets or sets the up border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the up border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.DownBorder">
            <summary>
            Gets or sets the down border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the down border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.UpFill">
            <summary>
            Gets or sets the up fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the up fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.DownFill">
            <summary>
            Gets or sets the down fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the down fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.LabelContainsOpenValue">
            <summary>
            Gets or sets whether the open value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.LabelContainsHighValue">
            <summary>
            Gets or sets whether the high value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.LabelContainsLowValue">
            <summary>
            Gets or sets whether the low value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.CandlestickSeries.LabelContainsCloseValue">
            <summary>
            Gets or sets whether the close value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.openValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.highValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.lowValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.closeValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.upBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.downBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.upFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.downFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.CandlestickSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Chart2DRenderer">
            <summary>
            Renders a 2D view of a chart model using GDI+ rendering.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.#ctor">
            <summary>
            Creates a new renderer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.HitTest(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Single,System.Single)">
            <summary>
            Gets hit test information.
            </summary>
            <param name="g">Graphics context</param>
            <param name="rectangle">Area where to get the hit test information</param>
            <param name="model">Chart model</param>
            <param name="x">X-coordinate</param>
            <param name="y">Y-coordinate</param>
            <returns>A <see cref="M:FarPoint.Win.Chart.Chart2DRenderer.HitTest(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Single,System.Single)"/> object that contains hit test information</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.Paint(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel)">
            <summary>
            Renders a 2D view of a chart model using GDI+ rendering.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="rectangle">Rectangle to paint in.</param>
            <param name="model">Chart model to paint.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.GetSeriesVisible(FarPoint.Win.Chart.Series)">
            <summary>
            Gets whether series should be visible for displaying.
            </summary>
            <param name="series">Series that need to be checked</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.GetLabelAreaRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Int32)">
            <summary>
            Gets the rectangle of the label area.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="chartRectangle">Rectangle of the chart.</param>
            <param name="chartModel">Chart model.</param>
            <param name="labelAreaIndex">Index of label area in chart model.</param>
            <returns>Rectangle of label area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.GetAxisTitleSize(System.Drawing.Graphics,FarPoint.Win.Chart.PlotArea,System.String,System.Drawing.Font,FarPoint.Win.Chart.TextDirection,System.Int32)">
            <summary>
            Returns the size of the axis title.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="plotArea">A <see cref="T:FarPoint.Win.Chart.PlotArea"/></param>
            <param name="title">The title</param>
            <param name="titleTextFont">Title font</param>
            <param name="titleTextDirection">Title direction</param>
            <param name="titleRotationAngle">Title rotaion angle</param>
            <returns>A <see cref="T:System.Drawing.SizeF"/> value that specifies the size of the axis title</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart2DRenderer.GetLegendAreaRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Int32)">
            <summary>
            Gets the rectangle of the legend area.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="chartRectangle">Rectangle of chart.</param>
            <param name="chartModel">Chart model.</param>
            <param name="legendAreaIndex">Index of legend area in model.</param>
            <returns>Rectangle of legend area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPointLayout.HasBanner(System.Drawing.Graphics,System.Boolean,System.Single)">
            <summary>
            Get wheter this point has banner.
            </summary>
            <param name="g"></param>
            <param name="isPrint"></param>
            <param name="bannerHeigh"></param>
            <returns></returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RenderArgument.SelectedObject">
            <summary>
            to set selected object before rendering
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RenderArgument.#ctor(System.Object)">
            <summary>
            to construct new render argument with selected object
            </summary>
            <param name="selectedObject"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Chart3DRenderer">
            <summary>
            Renderers a 3D view of a chart model using OpenGL rendering.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.#ctor">
            <summary>
            Creates a new renderer.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.GetSeriesVisible(FarPoint.Win.Chart.Series)">
            <summary>
            Gets whether the series should be visible for display.
            </summary>
            <param name="series">Series to check</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.Paint(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel)">
            <summary>
            Renderers a 3D view of a chart model using OpenGL rendering.
            </summary>
            <param name="g">Graphics context</param>
            <param name="rectangle">Rectangle to paint in.</param>
            <param name="model">Chart model to paint.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.Paint(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Drawing.Color,System.Drawing.Image,System.Windows.Forms.ImageLayout)">
            <summary>
            Renderers a 3D view of a chart model using OpenGL rendering.
            </summary>
            <param name="g">Graphics context</param>
            <param name="rectangle">Rectangle to paint in.</param>
            <param name="model">Chart model to paint.</param>
            <param name="backColor">The back color.</param>
            <param name="backgroundImg">The background image.</param>
            <param name="backgroundImgLayout">The background image layout.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.CreateContext(System.IntPtr)">
            <summary>
            Creates an <see cref="T:System.IntPtr"/> context.
            </summary>
            <param name="hdc">An <see cref="T:System.IntPtr"/> hdc</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.DeleteContext(System.IntPtr)">
            <summary>
            Deletes a context.
            </summary>
            <param name="hglrc">An <see cref="T:System.IntPtr"/> context to delete</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.GetLegendAreaRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Int32)">
            <summary>
            Gets the rectangle of the legend area.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="chartRectangle">Rectangle of chart.</param>
            <param name="chartModel">Chart model.</param>
            <param name="legendAreaIndex">Index of legend area in chart model.</param>
            <returns>Rectangle of legend area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.GetLabelAreaRectangle(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Int32)">
            <summary>
            Gets the rectangle of the label area.
            </summary>
            <param name="g">Graphics context.</param>
            <param name="chartRectangle">Rectangle of chart.</param>
            <param name="chartModel">Chart model.</param>
            <param name="labelAreaIndex">Index of label area in chart model.</param>
            <returns>Rectangle of label area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.HitTest(System.Drawing.Graphics,System.Drawing.RectangleF,FarPoint.Win.Chart.ChartModel,System.Single,System.Single)">
            <summary>
            Returns information about the given location.
            </summary>
            <param name="g">The graphics object.</param>
            <param name="rectangle">The rectangle.</param>
            <param name="model">The model.</param>
            <param name="x">The x value.</param>
            <param name="y">The y value.</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.DrawControlBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)">
            <summary>
            Draws the bitmap of the control. This bitmap contains a full, complete image of the control, no any drawing is
            needed after drawing this bitmap.
            </summary>
            <param name="bm">The bitmap.</param>
            <param name="clientRect">The client rect.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Chart3DRenderer.DrawBackgroundImage(System.Drawing.Color,System.Drawing.Image,System.Drawing.RectangleF,System.Windows.Forms.ImageLayout)">
            <summary>
            Draws the control's background image. This method should be called before
            painting the chart model.
            </summary>
            <param name="backColor">Back color of the control.</param>
            <param name="img">The image.</param>
            <param name="clientRect">The client rect.</param>
            <param name="imgLayout">The image layout.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartModel">
            <summary>
            Represents a model of a chart.  The model contains a collection of
            labels, a collection of legends, and a collection of plot areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.#ctor">
            <summary>
            Creates a new chart model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.#ctor(FarPoint.Win.Chart.ChartModel)">
            <summary>
            Creates a new chart model that is a deep copy of the specified
            chart model.
            </summary>
            <param name="model">Chart model to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.Clone">
            <summary>
            Creates a deep copy of this chart model.
            </summary>
            <returns>A deep copy of this chart model.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartModel.Fill">
            <summary>
            Gets or sets the background fill of the chart.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the background fill
            is unset for the chart.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartModel.LabelAreas">
            <summary>
            Gets the collection of label areas in the chart.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartModel.LegendAreas">
            <summary>
            Gets the collection of legend areas in the chart.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartModel.PlotAreas">
            <summary>
            Gets the colleciton of plot areas in the chart.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.ChartModel.Changed">
            <summary>
            Occurs when the chart model is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.labelAreas_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.legendAreas_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.plotAreas_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.AddLabelNumberFormatPlugin(FarPoint.Win.Chart.Design.ILabelFormatterPlugin)">
            <summary>
            Adds a plugin which can be added to the Label Format dialog to support new formats.
            </summary>
            <param name="plugin">A <see cref="T:FarPoint.Win.Chart.Design.ILabelFormatterPlugin"/> plugin</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartModel.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.ClusteredBarSeries">
            <summary>
            Represents a clustered group of bar series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.#ctor(FarPoint.Win.Chart.ClusteredBarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.Overlap">
            <summary>
            Gets or sets the amount of overlap of data points within a category.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than -1 or is greater than 1.
            </exception>
            <remarks>
            Overlap is measured relative to the data point width
            (-1 = separated by width of data point, 0 = no overlap
            or separation, 1 = overlapped by width of data point).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.AutoOrigin">
            <summary>
            Gets or sets whether the bar origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false then the bar origin is manually assigned via the
            Origin property.  If true then bar origin is automatically
            calculated as the minimum value in the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.Origin">
            <summary>
            Gets or sets the bar origin.
            </summary>
            <remarks>
            This property is only used when AutOrigin is false.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBarSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries">
            <summary>
            Represents a clustered group of bar series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.#ctor(FarPoint.Win.Chart.ClusteredBoxWhiskerSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.Overlap">
            <summary>
            Gets or sets the amount of overlap of data points within a category.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than -1 or is greater than 1.
            </exception>
            <remarks>
            Overlap is measured relative to the data point width
            (-1 = separated by width of data point, 0 = no overlap
            or separation, 1 = overlapped by width of data point).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.AutoOrigin">
            <summary>
            Gets or sets whether the bar origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false then the bar origin is manually assigned via the
            Origin property.  If true then bar origin is automatically
            calculated as the minimum value in the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.Origin">
            <summary>
            Gets or sets the bar origin.
            </summary>
            <remarks>
            This property is only used when AutoOrigin is false.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.GetSchema">
            <summary>
            This method is reserved and should not be used. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClusteredBoxWhiskerSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.DefaultResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ActionList_LoadXML">
            <summary>
              Looks up a localized string similar to Load from XML.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_Caption">
            <summary>
              Looks up a localized string similar to  Label Number Format Dialog.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StringCollectionForm_InstructionText">
            <summary>
              Looks up a localized string similar to &amp;Enter the strings in the collection (one per line):.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StringCollectionForm_CancelText">
            <summary>
              Looks up a localized string similar to &amp;Enter the strings in the collection (one per line):.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StringCollectionForm_Caption">
            <summary>
              Looks up a localized string similar to String Collection Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ActionList_SaveXML">
            <summary>
              Looks up a localized string similar to Save to XML.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ActionList_ShowDesigner">
            <summary>
              Looks up a localized string similar to Designer....
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ActionList_ViewType">
            <summary>
              Looks up a localized string similar to Chart View Type.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AlignmentX">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal alignment of the label area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AlignmentY">
            <summary>
              Looks up a localized string similar to Gets the vertical alignment of the label area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AllowUndo">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether to allow undo and redo. If not enabled, no action will be added to undo list..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AmbientColor">
            <summary>
              Looks up a localized string similar to Gets or sets the ambient color of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Area">
            <summary>
              Looks up a localized string similar to Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaBorder">
            <summary>
              Looks up a localized string similar to Area Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the area border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaFill">
            <summary>
              Looks up a localized string similar to Area Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the area fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaIn3D">
            <summary>
              Looks up a localized string similar to Area in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AreaStacked">
            <summary>
              Looks up a localized string similar to Area Stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoLabelUnit">
            <summary>
              Looks up a localized string similar to Gets or sets whether the interval for tick mark labels is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoMajorUnit">
            <summary>
              Looks up a localized string similar to Gets or sets whether the interval for major tick marks and major grid lines is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoMaximum">
            <summary>
              Looks up a localized string similar to Gets or sets whether the ruler maximum is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoMinimum">
            <summary>
              Looks up a localized string similar to Gets or sets whether the ruler minimum is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoMinorUnit">
            <summary>
              Looks up a localized string similar to Gets or sets whether the interval for minor tick marks and minor grid lines is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AutoOrigin">
            <summary>
              Looks up a localized string similar to Gets or sets whether the area origin is automatically calculated or manually assigned..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Axis_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the axis relative to the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.AxisId">
            <summary>
              Looks up a localized string similar to Gets or sets the ID of the axis..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BackgroundFill">
            <summary>
              Looks up a localized string similar to Gets or sets the background fill of the chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BackgroundImage">
            <summary>
              Looks up a localized string similar to The background image used for this control. The control supports only .bmp, .jpg, and .png images..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BackWall">
            <summary>
              Looks up a localized string similar to Back Wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BackWallTip">
            <summary>
              Looks up a localized string similar to Gets or sets the back wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Bar">
            <summary>
              Looks up a localized string similar to Bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarBorder">
            <summary>
              Looks up a localized string similar to Bar Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the bar border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarClustered">
            <summary>
              Looks up a localized string similar to Bar Clustered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BoxWhiskerClustered">
            <summary>
              Looks up a localized string similar to Box WhiskerClustered.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BoxWhisker">
            <summary>
              Looks up a localized string similar to BoxWhisker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatBoxWhiskerSeries">
            <summary>
              Looks up a localized string similar to FormatBoxWhiskerSeries.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarFill">
            <summary>
              Looks up a localized string similar to Bar Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the bar fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarSeries_AutoOrigin">
            <summary>
              Looks up a localized string similar to Gets or sets whether the bar origin is automatically calculated or manually assigned..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarSeries_Origin">
            <summary>
              Looks up a localized string similar to Gets or sets the bar origin..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarShape">
            <summary>
              Looks up a localized string similar to Gets or sets the shape of bars..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BarStacked">
            <summary>
              Looks up a localized string similar to Bar Stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Border">
            <summary>
              Looks up a localized string similar to Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelOption">
            <summary>
              Looks up a localized string similar to LabelOption.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the border around the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BottomBevel">
            <summary>
              Looks up a localized string similar to Bottom Bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BottomBevelTip">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom bevel..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BottomWall">
            <summary>
              Looks up a localized string similar to Bottom Wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BottomWallTip">
            <summary>
              Looks up a localized string similar to Gets or sets the bottom wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Bubble">
            <summary>
              Looks up a localized string similar to Bubble.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BubbleIn2D">
            <summary>
              Looks up a localized string similar to Bubble in 2D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BubbleIn3D">
            <summary>
              Looks up a localized string similar to Bubble in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BubbleSize">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the largest bubble..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CandleStick">
            <summary>
              Looks up a localized string similar to CandleStick.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Candlestick_GapWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between categories..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Accessibility">
            <summary>
              Looks up a localized string similar to Accessibility.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Action">
            <summary>
              Looks up a localized string similar to Action.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Appearance">
            <summary>
              Looks up a localized string similar to Appearance.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Behavior">
            <summary>
              Looks up a localized string similar to Behavior.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Data">
            <summary>
              Looks up a localized string similar to Data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Gridlines">
            <summary>
              Looks up a localized string similar to Gridlines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Labels">
            <summary>
              Looks up a localized string similar to Labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Layout">
            <summary>
              Looks up a localized string similar to Layout.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Ruler">
            <summary>
              Looks up a localized string similar to Ruler.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Scale">
            <summary>
              Looks up a localized string similar to Scale.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Stripes">
            <summary>
              Looks up a localized string similar to Stripes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Ticks">
            <summary>
              Looks up a localized string similar to Ticks.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Category_Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Clockwise">
            <summary>
              Looks up a localized string similar to Gets or sets whether pie slices are layed out clockwise or counter clockwise..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CloseContour">
            <summary>
              Looks up a localized string similar to Gets or sets whether the last point is connected to the first point..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredBar">
            <summary>
              Looks up a localized string similar to Clustered Bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredBar_AutoOrigin">
            <summary>
              Looks up a localized string similar to Gets or sets whether the bar origin is automatically calculated or manually assigned..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredBar_Origin">
            <summary>
              Looks up a localized string similar to Gets or sets the bar origin..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredBarIn3D">
            <summary>
              Looks up a localized string similar to Clustered Bar in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredColumn">
            <summary>
              Looks up a localized string similar to Clustered Column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredColumnIn3D">
            <summary>
              Looks up a localized string similar to Clustered Column in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredCylinder">
            <summary>
              Looks up a localized string similar to Clustered Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredFullCone">
            <summary>
              Looks up a localized string similar to Clustered FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredFullPyramid">
            <summary>
              Looks up a localized string similar to Clustered FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredHorizontalCylinder">
            <summary>
              Looks up a localized string similar to Clustered Horizontal Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredHorizontalFullCone">
            <summary>
              Looks up a localized string similar to Clustered Horizontal FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ClusteredHorizontalFullPyramid">
            <summary>
              Looks up a localized string similar to Clustered Horizontal FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Color">
            <summary>
              Looks up a localized string similar to Gets the color of the line..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Column">
            <summary>
              Looks up a localized string similar to Column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ColumnIn3D">
            <summary>
              Looks up a localized string similar to Column in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Count">
            <summary>
              Looks up a localized string similar to Gets the number of points in the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CountX">
            <summary>
              Looks up a localized string similar to Gets the number of points along the x-axis..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CountZ">
            <summary>
              Looks up a localized string similar to Gets the number of points along the z-axis..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CylinderIn3D">
            <summary>
              Looks up a localized string similar to Cylinder in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataField">
            <summary>
              Looks up a localized string similar to Gets or set the field in the data source that contains the data point values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldCategoryName">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains category names..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldClose">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point close values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldHigh">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point high values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldLow">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point low values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldOpen">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point open values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldSize">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that stores the data point size values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldX">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point x values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldY">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point y values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataFieldZ">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that contains data point z values..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataPointIndexOutOfRange">
            <summary>
              Looks up a localized string similar to Data Point index is out of range..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DefaultFont">
            <summary>
              Looks up a localized string similar to Tahoma, 11pt, style=Bold.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DiffuseColor">
            <summary>
              Looks up a localized string similar to Gets or sets the diffuse color of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DirectionX">
            <summary>
              Looks up a localized string similar to Gets or sets the x coordinate of the direction of the light..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DirectionY">
            <summary>
              Looks up a localized string similar to Gets or sets the y coordinate of the direction of the light..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DirectionZ">
            <summary>
              Looks up a localized string similar to Gets or sets the z coordinate of the direction of the light..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DisplayUnits">
            <summary>
              Looks up a localized string similar to Gets or sets the units in which labels are displayed..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Doughnut">
            <summary>
              Looks up a localized string similar to Doughnut.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownBorder">
            <summary>
              Looks up a localized string similar to Down Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the down border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownFill">
            <summary>
              Looks up a localized string similar to Down Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the down fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownLine">
            <summary>
              Looks up a localized string similar to Down Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DownLineTip">
            <summary>
              Looks up a localized string similar to Gets or sets the down line for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DropLinesLine">
            <summary>
              Looks up a localized string similar to Drop Lines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DropLinesLineTip">
            <summary>
              Looks up a localized string similar to Gets or sets the line used to draw the drop lines..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DropLinesVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether drop lines are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Elevation">
            <summary>
              Looks up a localized string similar to Gets of sets the counterclockwise rotation around the horizontal axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ExNoDoubleBufferedIn3D">
            <summary>
              Looks up a localized string similar to The control cannot use double buffer in 3D view..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ExplodedDoughnut">
            <summary>
              Looks up a localized string similar to Exploded Doughnut.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ExplodedPie">
            <summary>
              Looks up a localized string similar to Exploded Pie.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ExplodedPiein3D">
            <summary>
              Looks up a localized string similar to Exploded Pie in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ExTransparentBackColor">
            <summary>
              Looks up a localized string similar to Control does not support transparent background colors..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FileNotExists">
            <summary>
              Looks up a localized string similar to File not exists..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Fill">
            <summary>
              Looks up a localized string similar to Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillConverterException">
            <summary>
              Looks up a localized string similar to Failed to parse {0}.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Font">
            <summary>
              Looks up a localized string similar to Font.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatAreaDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Area Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatAreaSeries">
            <summary>
              Looks up a localized string similar to Format Area Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatAxis">
            <summary>
              Looks up a localized string similar to Format Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatBarDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Bar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatBarSeries">
            <summary>
              Looks up a localized string similar to Format Bar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatWaterSeries">
            <summary>
              Looks up a localized string similar to Format Waterfall Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatWaterDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Waterfall Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatCandleStickDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Candlestick Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatCandlestickSeries">
            <summary>
              Looks up a localized string similar to Format Candlestick Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatChartArea">
            <summary>
              Looks up a localized string similar to Format Chart Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatClusteredBarsSeries">
            <summary>
              Looks up a localized string similar to Format ClusteredBars Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatDataLabels">
            <summary>
              Looks up a localized string similar to Format Data Labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowAreaDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of HighLowArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowAreaSeries">
            <summary>
              Looks up a localized string similar to Format HighLowArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowBarDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of HighLowBar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatBoxWhiskerDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of HighLowBar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowBarSeries">
            <summary>
              Looks up a localized string similar to Format HighLowBar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowCloseDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of HighLowClose Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatHighLowCloseSeries">
            <summary>
              Looks up a localized string similar to Format HighLowClose Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatIndexAxis">
            <summary>
              Looks up a localized string similar to Format Index Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatLabelArea">
            <summary>
              Looks up a localized string similar to Format Label Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatLegendArea">
            <summary>
              Looks up a localized string similar to Format Legend Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatLineDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Line Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatLineSeries">
            <summary>
              Looks up a localized string similar to Format Line Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatObjectNotSupported">
            <summary>
              Looks up a localized string similar to Formatting is not supported by this series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatOpenHighLowCloseDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of OpenHighLowClose Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatOpenHighLowCloseSeries">
            <summary>
              Looks up a localized string similar to Format OpenHighLowClose Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPieDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Pie Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatSunburstDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Sunburst Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatTreemapDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Treemap Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatTreemapSeries">
            <summary>
              Looks up a localized string similar to Format Treemap Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPieSeries">
            <summary>
              Looks up a localized string similar to Format Pie Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatSunburstSeries">
            <summary>
              Looks up a localized string similar to Format Sunburst Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendDefaultText">
            <summary>
              Looks up a localized string similar to "Branch".
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPlotArea">
            <summary>
              Looks up a localized string similar to Format Plot Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPointDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of Point Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPointSeries">
            <summary>
              Looks up a localized string similar to Format Point Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarAngleAxis">
            <summary>
              Looks up a localized string similar to Format Polar Angle Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarAreaDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of PolarArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarAreaSeries">
            <summary>
              Looks up a localized string similar to Format PolarArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarLineDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of PolarLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarLineSeries">
            <summary>
              Looks up a localized string similar to Format PolarLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarPointDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of PolarPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarPointSeries">
            <summary>
              Looks up a localized string similar to Format PolarPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatPolarRadiusAxis">
            <summary>
              Looks up a localized string similar to Format Polar Radius Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarAreaDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of RadarArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarAreaSeries">
            <summary>
              Looks up a localized string similar to Format RadarArea Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarIndexAxis">
            <summary>
              Looks up a localized string similar to Format Radar Index Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarLineDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of RadarLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarLineSeries">
            <summary>
              Looks up a localized string similar to Format RadarLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarPointDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of RadarPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarPointSeries">
            <summary>
              Looks up a localized string similar to Format RadarPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatRadarValueAxis">
            <summary>
              Looks up a localized string similar to Format Radar Value Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatStackedBarsSeries">
            <summary>
              Looks up a localized string similar to Format StackedBar Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatStackedLinesSeries">
            <summary>
              Looks up a localized string similar to Format StackedLines Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatStackedPointSeries">
            <summary>
              Looks up a localized string similar to Format StackedPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatValueAxis">
            <summary>
              Looks up a localized string similar to Format Value Axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYBubbleDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYBubble Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYBubbleSeries">
            <summary>
              Looks up a localized string similar to Format XYBubble Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYLineDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYLineSeries">
            <summary>
              Looks up a localized string similar to Format XYLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYPointDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYPointSeries">
            <summary>
              Looks up a localized string similar to Format XYPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZLineDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYZLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZLineSeries">
            <summary>
              Looks up a localized string similar to Format XYZLine Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZPointDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYZPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZPointSeries">
            <summary>
              Looks up a localized string similar to Format XYZPoint Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZSurfaceDataPoint">
            <summary>
              Looks up a localized string similar to Format Data Point Of XYZSurface Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FormatXYZSurfaceSeries">
            <summary>
              Looks up a localized string similar to Format XYZSurface Series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FpChart_About">
            <summary>
              Looks up a localized string similar to Gets the version information about the component..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.From">
            <summary>
              Looks up a localized string similar to Gets or sets the start value of the stripe..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FullConeIn3D">
            <summary>
              Looks up a localized string similar to FullCone in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FullPyramidin3D">
            <summary>
              Looks up a localized string similar to FullPyramid in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GapDepth">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GapWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of space between categories..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.General">
            <summary>
              Looks up a localized string similar to General.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GlobalAmbientLight">
            <summary>
              Looks up a localized string similar to Gets or sets the color of the global ambient light..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GradientFill_Color0">
            <summary>
              Looks up a localized string similar to Gets the start color of the gradient..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GradientFill_Color1">
            <summary>
              Looks up a localized string similar to Gets the end color of the gradient..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GradientFill_Style">
            <summary>
              Looks up a localized string similar to Gets the direction of the gradient..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GridLines">
            <summary>
              Looks up a localized string similar to GridLines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GripActionDoing">
            <summary>
              Looks up a localized string similar to Occurs when on performing actions such as move, resize, delete, cut and paste..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GripActionDone">
            <summary>
              Looks up a localized string similar to Occurs when on actions done such as move, resize, delete, cut and paste..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GripFlatStyle">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether the grip has 3D style or flat style..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HeaderTextColor">
            <summary>
              Looks up a localized string similar to Text Color.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowArea">
            <summary>
              Looks up a localized string similar to High Low Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowAreaIn3D">
            <summary>
              Looks up a localized string similar to High Low Area in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowBar">
            <summary>
              Looks up a localized string similar to High Low Bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowBarCylinder">
            <summary>
              Looks up a localized string similar to High Low Bar Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowBarFullCone">
            <summary>
              Looks up a localized string similar to High Low Bar FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowBarFullPyramid">
            <summary>
              Looks up a localized string similar to High Low Bar FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowBarIn3D">
            <summary>
              Looks up a localized string similar to High Low Bar in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowClose">
            <summary>
              Looks up a localized string similar to High Low Close.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowColumn">
            <summary>
              Looks up a localized string similar to High Low Column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowColumnCylinder">
            <summary>
              Looks up a localized string similar to High Low Column Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowColumnFullCone">
            <summary>
              Looks up a localized string similar to High Low Column FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowColumnFullPyramid">
            <summary>
              Looks up a localized string similar to High Low Column FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HighLowColumnIn3D">
            <summary>
              Looks up a localized string similar to High Low Column in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HoleSize">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the hole in the middle of the pie..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageFill_Image">
            <summary>
              Looks up a localized string similar to Gets the image of this fill..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageFillFileFilter">
            <summary>
              Looks up a localized string similar to All image files(*.bmp,*.gif,*.jpg,*.jpeg,*.png,*.ico,*.emf,*.wmf)|*.bmp;*.gif;*.jpg;*.jpeg;*.png;*.ico;*.emf;*.wmf|Bitmap files(*.bmp,*.gif,*.jpg,*.jpeg,*.png,*.ico)|*.bmp;*.gif;*.jpg;*.jpeg;*.png;*.ico|Metafiles(*.emf,*.wmf)|*.emf;*.wmf.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.IndexAxisLabels_Count">
            <summary>
              Looks up a localized string similar to Gets the number of labels in the collection..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.IndexAxisLabels_DataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that stores the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.IndexAxisLabels_DataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the collection..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.IndexAxisLabels_Name">
            <summary>
              Looks up a localized string similar to IndexAxisLabels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.IndexAxisLabelsEditor_Ex">
            <summary>
              Looks up a localized string similar to Cannot edit values if data bound.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Interactive">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether to enable the selection of plot area, legend area, label area or series. Users can perform actions such as move, resize, copy, cut, paste, delete the selected object..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Label">
            <summary>
              Looks up a localized string similar to Label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelArea_AutoLayout">
            <summary>
              Looks up a localized string similar to Gets or sets whether the layout of the label area is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelArea_Fill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill of the background behind the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelArea_Overlay">
            <summary>
              Looks up a localized string similar to Gets or sets whether the label area overlaps the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelArea_TextDataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that stores the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelArea_TextDataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelAreas">
            <summary>
              Looks up a localized string similar to Gets the collection of label areas in the chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormat">
            <summary>
              Looks up a localized string similar to Gets or sets the number format for labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatHelpText">
            <summary>
              Looks up a localized string similar to Please choose one of the Format Code templates below:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatNoneDescription">
            <summary>
              Looks up a localized string similar to Please type number format in the ‘Format CodeEtext box below..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelOffset">
            <summary>
              Looks up a localized string similar to Gets or sets the distance the tick mark labels are offset..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Labels">
            <summary>
              Looks up a localized string similar to Gets the collection of custom labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainCategoryName">
            <summary>
              Looks up a localized string similar to Labels Contain C&amp;ategory Name.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValue">
            <summary>
              Looks up a localized string similar to Labels Contain Val&amp;ue.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueClose">
            <summary>
              Looks up a localized string similar to Labels Contain Value &amp;Close.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueHigh">
            <summary>
              Looks up a localized string similar to Labels Contain Value &amp;High.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueLow">
            <summary>
              Looks up a localized string similar to Labels Contain Value &amp;Low.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueOpen">
            <summary>
              Looks up a localized string similar to Labels Contain Value &amp;Open.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueSize">
            <summary>
              Looks up a localized string similar to LabelsContainValueSi&amp;ze.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueX">
            <summary>
              Looks up a localized string similar to LabelsContainValue&amp;X.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueY">
            <summary>
              Looks up a localized string similar to LabelsContainValue&amp;Y.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelsContainValueZ">
            <summary>
              Looks up a localized string similar to LabelsContainValue&amp;Z.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelTextFill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill used to draw the tick mark labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelTextFont">
            <summary>
              Looks up a localized string similar to Gets or sets the font of tick mark labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelUnit">
            <summary>
              Looks up a localized string similar to Gets or sets the interval for tick mark labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the tick mark labels are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_AlignmentX">
            <summary>
              Looks up a localized string similar to Gets or sets the horizontal alignment of the legend area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_AlignmentY">
            <summary>
              Looks up a localized string similar to Gets or sets the vertical alignment of the legend area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_AutoLayout">
            <summary>
              Looks up a localized string similar to Gets or sets whether the layout of the legend area is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_Border">
            <summary>
              Looks up a localized string similar to Gets or sets the border around the legend area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_Fill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill for the background of the legend area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the legend area in the control canvas space..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendArea_Overlay">
            <summary>
              Looks up a localized string similar to Gets or sets whether the legend area overlaps the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendAreaId">
            <summary>
              Looks up a localized string similar to Gets or sets the ID of the legend area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LegendAreas">
            <summary>
              Looks up a localized string similar to Gets the collection of legend areas in the chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Lights">
            <summary>
              Looks up a localized string similar to Gets the collection of lights for the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Line">
            <summary>
              Looks up a localized string similar to Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Line3D">
            <summary>
              Looks up a localized string similar to 3-D Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineBorder">
            <summary>
              Looks up a localized string similar to Line Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the line border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineFill">
            <summary>
              Looks up a localized string similar to Line Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the line fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineStacked">
            <summary>
              Looks up a localized string similar to Line Stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineTip">
            <summary>
              Looks up a localized string similar to Gets or sets the line for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineWithMarkers">
            <summary>
              Looks up a localized string similar to Line With Markers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the label area with in the control..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Logarithmic">
            <summary>
              Looks up a localized string similar to Gets or sets whether the axis uses a linear or logarithmic scale..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LogarithmicBase">
            <summary>
              Looks up a localized string similar to Gets or sets the logarithmic base..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorGridLine">
            <summary>
              Looks up a localized string similar to Gets or sets the line used to draw the major grid lines..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorGridLines">
            <summary>
              Looks up a localized string similar to Major GridLines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorGridLineTitle">
            <summary>
              Looks up a localized string similar to Major Grid Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorGridVisible">
            <summary>
              Looks up a localized string similar to Gets or set whether the major grid lines are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorTickLength">
            <summary>
              Looks up a localized string similar to Gets or sets the length of major tick marks..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorTickVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the major tick marks are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MajorUnit">
            <summary>
              Looks up a localized string similar to Gets or sets the interval for major tick marks and major grid lines..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Maximum">
            <summary>
              Looks up a localized string similar to Gets or sets the ruler maximum..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Minimum">
            <summary>
              Looks up a localized string similar to Gets or sets the ruler minimum..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorGridLine">
            <summary>
              Looks up a localized string similar to Gets or sets the line used to draw the minor grid lines..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorGridLines">
            <summary>
              Looks up a localized string similar to Minor GridLines.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorGridLineTitle">
            <summary>
              Looks up a localized string similar to Minor Grid Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorGridVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the minor grid lines are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorTickLength">
            <summary>
              Looks up a localized string similar to Gets or sets the length of minor tick marks..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorTickVisible">
            <summary>
              Looks up a localized string similar to Gets or setse whether the minor tick marks are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MinorUnit">
            <summary>
              Looks up a localized string similar to Gets or sets the interval for minor tick marks and minor grid lines..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.NegativeBorder">
            <summary>
              Looks up a localized string similar to Negative Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.NegativeBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the negative border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.NegativeFill">
            <summary>
              Looks up a localized string similar to Negative Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.NegativeFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the negative fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.NegativeVisibleTip">
            <summary>
              Looks up a localized string similar to Gets or sets whether bubbles with negative size are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.OpenFileErrorMessage">
            <summary>
              Looks up a localized string similar to There was an error opening the file..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.OpenFileTitle">
            <summary>
              Looks up a localized string similar to Open File.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.OpenHighLowClose">
            <summary>
              Looks up a localized string similar to Open High Low Close.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Orientation">
            <summary>
              Looks up a localized string similar to Orientation.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Origin">
            <summary>
              Looks up a localized string similar to Gets or sets the area origin..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Overlap">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of overlap of data points within a category..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Padding">
            <summary>
              Looks up a localized string similar to Gets or sets the amount of extra space around the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Percent">
            <summary>
              Looks up a localized string similar to Gets or sets whether the areas are stacked or 100% stacked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PerspectiveAngle">
            <summary>
              Looks up a localized string similar to Gets the field of view angle..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Pie">
            <summary>
              Looks up a localized string similar to Pie.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PieBorder">
            <summary>
              Looks up a localized string similar to Pie Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PieBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the pie border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PieDetachment">
            <summary>
              Looks up a localized string similar to Pie Detachment.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PieFill">
            <summary>
              Looks up a localized string similar to Pie Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PieFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the pie fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Piein2D">
            <summary>
              Looks up a localized string similar to Pie in 2D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Piein3D">
            <summary>
              Looks up a localized string similar to Pie in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotArea_AutoLayout">
            <summary>
              Looks up a localized string similar to Gets or sets whether the layout of the plot area is automatically generated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotArea_Depth">
            <summary>
              Looks up a localized string similar to Gets or sets the depth of the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotArea_Location">
            <summary>
              Looks up a localized string similar to Gets or sets the location of the plot area in control canvas space..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotArea_Series">
            <summary>
              Looks up a localized string similar to Gets the series collection for the plot area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotArea_Size">
            <summary>
              Looks up a localized string similar to Gets or sets the size of the plot area in control canvas space..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PlotAreas">
            <summary>
              Looks up a localized string similar to Gets the colleciton of plot areas in the chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointBorder">
            <summary>
              Looks up a localized string similar to Point Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the point border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointConverterException1">
            <summary>
              Looks up a localized string similar to Failed to parse Text({0}) expected text in the format \&quot;X,Y.\&quot;.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointFConverterException">
            <summary>
              Looks up a localized string similar to Failed to parse Text({0}) expected text in the format \&quot;X,Y.\&quot;.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointFill">
            <summary>
              Looks up a localized string similar to Point Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the point fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointMarker">
            <summary>
              Looks up a localized string similar to Point Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointMarkerTip">
            <summary>
              Looks up a localized string similar to Gets or sets the point marker for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PointStacked">
            <summary>
              Looks up a localized string similar to Point Stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Polar">
            <summary>
              Looks up a localized string similar to Polar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PolarArea">
            <summary>
              Looks up a localized string similar to Polar Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PolarLine">
            <summary>
              Looks up a localized string similar to Polar Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PolarLineWithMarker">
            <summary>
              Looks up a localized string similar to Polar Line With Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PolarPlotArea_StartAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle at which the origin is displayed..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PolarPoint">
            <summary>
              Looks up a localized string similar to Polar Point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositionX">
            <summary>
              Looks up a localized string similar to Gets or sets the x coordinate of the position of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositionY">
            <summary>
              Looks up a localized string similar to Gets or sets the y coordinate of the position of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositionZ">
            <summary>
              Looks up a localized string similar to Gets or sets the z coordinate of the position of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositiveBorder">
            <summary>
              Looks up a localized string similar to Positive Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositiveBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the positive border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositiveFill">
            <summary>
              Looks up a localized string similar to Positive Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.PositiveFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the positive fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Projection">
            <summary>
              Looks up a localized string similar to Gets or sets the projection from 3D model space to 2D control canvas space..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionTitle">
            <summary>
              Looks up a localized string similar to Gets or sets the projection from 3D model space to 2D control canvas space..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Radar">
            <summary>
              Looks up a localized string similar to Radar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RadarArea">
            <summary>
              Looks up a localized string similar to Radar Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RadarLine">
            <summary>
              Looks up a localized string similar to Radar Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RadarLineWithMarker">
            <summary>
              Looks up a localized string similar to Radar Line With Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RadarPoint">
            <summary>
              Looks up a localized string similar to Radar Point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Reverse">
            <summary>
              Looks up a localized string similar to Gets or sets whether the direction of the axis is inverted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Rotation">
            <summary>
              Looks up a localized string similar to Gets of sets the counterclockwise rotation around the vertical axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Ruler">
            <summary>
              Looks up a localized string similar to Ruler.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RulerLine">
            <summary>
              Looks up a localized string similar to Gets or sets the line used to draw the ruler..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RulerOffset">
            <summary>
              Looks up a localized string similar to Gets or sets the distance the ruler is offset..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.RulerVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the ruler is visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SampleData">
            <summary>
              Looks up a localized string similar to SampleData.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Scale">
            <summary>
              Looks up a localized string similar to Scale.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SelectedObject">
            <summary>
              Looks up a localized string similar to Gets or sets the selected object. Could be a plot area, legend area, label area or series info..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SelectionChanged">
            <summary>
              Looks up a localized string similar to Occurs when selection changed..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series">
            <summary>
              Looks up a localized string similar to Gets the collection of bar series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_AreaBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of area borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_AreaFills">
            <summary>
              Looks up a localized string similar to Gets the collection of area fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_BarBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of bar borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_BarFills">
            <summary>
              Looks up a localized string similar to Gets the collection of bar fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_BottomBevels">
            <summary>
              Looks up a localized string similar to Gets the collection of bottom bevels for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_CategoryNames">
            <summary>
              Looks up a localized string similar to Gets the collection of category names for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_CloseValues">
            <summary>
              Looks up a localized string similar to Gets the collection of close values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_DownBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of down borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_DownFills">
            <summary>
              Looks up a localized string similar to Gets the collection of down fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_DownLines">
            <summary>
              Looks up a localized string similar to Gets the collection of down lines for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_HighValues">
            <summary>
              Looks up a localized string similar to Gets the collection of high values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelBorder">
            <summary>
              Looks up a localized string similar to Gets or sets the border around the data labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsCategoryName">
            <summary>
              Looks up a localized string similar to Gets or sets whether the category name in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsCloseValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the close value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsHighValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the high value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsLowValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the low value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsOpenValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the open value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsSeriesName">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series name in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsSizeValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the size value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsXValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the x value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsYValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the y value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelContainsZValue">
            <summary>
              Looks up a localized string similar to Gets or sets whether the z value in displayed in the labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelFill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill of the background of the data labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelNumberFormat">
            <summary>
              Looks up a localized string similar to Gets or sets the number format for labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelSeparator">
            <summary>
              Looks up a localized string similar to Gets or sets the text used to separate the contents of a label..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelTextFill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill of the text of the data labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelTextFont">
            <summary>
              Looks up a localized string similar to Gets or sets the font of the text of the data labels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LabelVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the data labels are visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LineBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of line borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LineFills">
            <summary>
              Looks up a localized string similar to Gets the collection of line fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_Lines">
            <summary>
              Looks up a localized string similar to Gets the collection of lines for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_LowValues">
            <summary>
              Looks up a localized string similar to Gets the collection of low values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_Negativeborders">
            <summary>
              Looks up a localized string similar to Gets the collection of negative borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_NegativeFills">
            <summary>
              Looks up a localized string similar to Gets the collection of negative fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_OpenValues">
            <summary>
              Looks up a localized string similar to Gets the collection of open values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PieBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of pie borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PieDetachments">
            <summary>
              Looks up a localized string similar to Gets the collection of pie detachments for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PieFills">
            <summary>
              Looks up a localized string similar to Gets the collection of pie fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PointBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of point borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PointFills">
            <summary>
              Looks up a localized string similar to Gets the collection of point fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PointMarkers">
            <summary>
              Looks up a localized string similar to Gets the collection of point markers for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PositiveBorders">
            <summary>
              Looks up a localized string similar to Gets the collection of positve borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_PositiveFills">
            <summary>
              Looks up a localized string similar to Gets the collection of positive fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_SeriesName">
            <summary>
              Looks up a localized string similar to Gets or sets the name of the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_SeriesNameDataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that stores the series name..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_SeriesNameDataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the series name..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_SizeValues">
            <summary>
              Looks up a localized string similar to Gets the collection of size values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_TopBevels">
            <summary>
              Looks up a localized string similar to Gets the collection of top bevels for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_Upborders">
            <summary>
              Looks up a localized string similar to Gets the collection of up borders for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_UpFills">
            <summary>
              Looks up a localized string similar to Gets the collection of up fills for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_UpLines">
            <summary>
              Looks up a localized string similar to Gets the collection of up lines for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_Values">
            <summary>
              Looks up a localized string similar to Gets the collection of values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_Visible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the series is visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_XValues">
            <summary>
              Looks up a localized string similar to Gets the collection of x values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_YValues">
            <summary>
              Looks up a localized string similar to Gets the collection of y values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Series_ZValues">
            <summary>
              Looks up a localized string similar to Gets the collection of z values for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Setting">
            <summary>
              Looks up a localized string similar to Setting.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Shape">
            <summary>
              Looks up a localized string similar to Shape.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ShapeTip">
            <summary>
              Looks up a localized string similar to Gets the shape of the marker..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SideWall">
            <summary>
              Looks up a localized string similar to Side Wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SideWallTip">
            <summary>
              Looks up a localized string similar to Gets or sets the left wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SizeRepresentsArea">
            <summary>
              Looks up a localized string similar to Gets or sets whether data point size values represent area of bubble or width of bubble..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SmoothedLine">
            <summary>
              Looks up a localized string similar to Gets or sets whether the line is smoothed (not jagged)..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SolidFill_Color">
            <summary>
              Looks up a localized string similar to Gets the color of this fill..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SpecularColor">
            <summary>
              Looks up a localized string similar to Gets or sets the specular color of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100Area">
            <summary>
              Looks up a localized string similar to 100% Stacked Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100AreaIn3D">
            <summary>
              Looks up a localized string similar to 100% Stacked Area in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100Bar">
            <summary>
              Looks up a localized string similar to 100% Stacked bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100BarIn3D">
            <summary>
              Looks up a localized string similar to 100% Stacked Bar in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100Column">
            <summary>
              Looks up a localized string similar to 100% Stacked Column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100ColumnIn3D">
            <summary>
              Looks up a localized string similar to 100% Stacked Column in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100Cylinder">
            <summary>
              Looks up a localized string similar to 100% Stacked Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100FullCone">
            <summary>
              Looks up a localized string similar to 100% Stacked FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100FullPyramid">
            <summary>
              Looks up a localized string similar to 100% Stacked FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100HorizontalCylinder">
            <summary>
              Looks up a localized string similar to 100% Stacked Horizontal Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100HorizontalFullCone">
            <summary>
              Looks up a localized string similar to 100% Stacked Horizontal FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100horizontalFullPyramid">
            <summary>
              Looks up a localized string similar to 100% Stacked Horizontal FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stacked100Line">
            <summary>
              Looks up a localized string similar to 100% Stacked Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedArea">
            <summary>
              Looks up a localized string similar to Stacked Area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedArea_Series">
            <summary>
              Looks up a localized string similar to Gets the collection area series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedAreaIn3D">
            <summary>
              Looks up a localized string similar to Stacked Area in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedBar">
            <summary>
              Looks up a localized string similar to Stacked Bar.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedBar_Percent">
            <summary>
              Looks up a localized string similar to Gets or sets whether bars are stacked or 100% stacked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedBar_Series">
            <summary>
              Looks up a localized string similar to Gets the collection of bar series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedBarIn3D">
            <summary>
              Looks up a localized string similar to Stacked Bar in 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedColumn">
            <summary>
              Looks up a localized string similar to Stacked Column.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedColumnIn3D">
            <summary>
              Looks up a localized string similar to Stacked Column In 3D.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedCylinder">
            <summary>
              Looks up a localized string similar to Stacked Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedFullCone">
            <summary>
              Looks up a localized string similar to Stacked FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedFullPyramid">
            <summary>
              Looks up a localized string similar to Stacked Full.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedHorizontalCylinder">
            <summary>
              Looks up a localized string similar to Stacked Horizontal Cylinder.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedHorizontalFullCone">
            <summary>
              Looks up a localized string similar to Stacked Horizontal FullCone.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedHorizontalFullPyramid">
            <summary>
              Looks up a localized string similar to Stacked Horizontal FullPyramid.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedLine">
            <summary>
              Looks up a localized string similar to Stacked Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedLine_Percent">
            <summary>
              Looks up a localized string similar to Gets or sets whether the lines are stacked or 100% stacked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedLine_Series">
            <summary>
              Looks up a localized string similar to Gets the collection of line series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedLine100WithMarkers">
            <summary>
              Looks up a localized string similar to 100% Stacked Line With Markers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedLineWithMarkers">
            <summary>
              Looks up a localized string similar to Stacked Line With Markers.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedPoint_Percent">
            <summary>
              Looks up a localized string similar to Gets or sets whether the points are stacked or 100% stacked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StackedPoint_Series">
            <summary>
              Looks up a localized string similar to Gets the collection of point series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StartAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the angle at which the first pie slice is displayed..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stock">
            <summary>
              Looks up a localized string similar to Stock.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.DetachmentCollectionEditor_Text">
            <summary>
              Looks up a localized string similar to Detachment Collection Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.CollectionEditorText">
            <summary>
              Looks up a localized string similar to  Collection Editor.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stripe_Fill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill of the stripe..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Stripes">
            <summary>
              Looks up a localized string similar to Gets the collection of stripes..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Surface">
            <summary>
              Looks up a localized string similar to Surface.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SurfaceBorder">
            <summary>
              Looks up a localized string similar to Surface Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SurfaceFill">
            <summary>
              Looks up a localized string similar to Surface Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SurfaceFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the fill for the surface..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SurfaceLineTip">
            <summary>
              Looks up a localized string similar to Gets or sets the line for the surface..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.SweepAngle">
            <summary>
              Looks up a localized string similar to Gets or sets the total angle of all the pie slices..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Text">
            <summary>
              Looks up a localized string similar to Text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TextFill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill of the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TextFont">
            <summary>
              Looks up a localized string similar to Text Font.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TextFontTip">
            <summary>
              Looks up a localized string similar to Gets or sets the font of the text..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TextTip">
            <summary>
              Looks up a localized string similar to Gets or sets the text displayed in the label area..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ThreeDSetting">
            <summary>
              Looks up a localized string similar to 3D - Setting.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TickBetween">
            <summary>
              Looks up a localized string similar to Gets or sets the position of tick marks relative to data points..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Ticks">
            <summary>
              Looks up a localized string similar to Ticks.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Title">
            <summary>
              Looks up a localized string similar to Title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleDataField">
            <summary>
              Looks up a localized string similar to Gets or sets the field in the data source that stores the title..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleDataSource">
            <summary>
              Looks up a localized string similar to Gets or sets the data source for the title..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleOffset">
            <summary>
              Looks up a localized string similar to Gets or sets the distance the title is offset..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleTextFill">
            <summary>
              Looks up a localized string similar to Gets or sets the fill used to draw the axis title..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleTextFont">
            <summary>
              Looks up a localized string similar to Gets or sets the font of the axis title..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TitleVisible">
            <summary>
              Looks up a localized string similar to Gets or sets whether the axis title is visible..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.To">
            <summary>
              Looks up a localized string similar to Gets or sets the end value of the stripe..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ToolTip">
            <summary>
              Looks up a localized string similar to ToolTip.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TopBevel">
            <summary>
              Looks up a localized string similar to Top Bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.TopBevelTip">
            <summary>
              Looks up a localized string similar to Gets or sets the top bevel..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UndoManager">
            <summary>
              Looks up a localized string similar to Gets the undo manager..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpBorder">
            <summary>
              Looks up a localized string similar to Up Border.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpBorderTip">
            <summary>
              Looks up a localized string similar to Gets or sets the up border for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpFill">
            <summary>
              Looks up a localized string similar to Up Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpFillTip">
            <summary>
              Looks up a localized string similar to Gets or sets the up fill for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpLine">
            <summary>
              Looks up a localized string similar to Up Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.UpLineTip">
            <summary>
              Looks up a localized string similar to Gets or sets the up line for the series..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.VaryColors">
            <summary>
              Looks up a localized string similar to Gets or sets whether each data point is displayed with a different color..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Vertical">
            <summary>
              Looks up a localized string similar to Gets or sets whether the legend items are layed out vertically.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ViewType">
            <summary>
              Looks up a localized string similar to Gets or sets whether the chart is rendered in 2D or 3D..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Wall_Border">
            <summary>
              Looks up a localized string similar to Gets the border of the wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Wall_Fill">
            <summary>
              Looks up a localized string similar to Gets the fill of the wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Wall_Visible">
            <summary>
              Looks up a localized string similar to Gets the visibility of the wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Wall_Width">
            <summary>
              Looks up a localized string similar to Gets the width of the wall..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebAfterPaint">
            <summary>
              Looks up a localized string similar to The event is raised after chart is painted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebAlternateText">
            <summary>
              Looks up a localized string similar to Gets or sets the alternate text displayed when the image fails to load..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebArgumentExceptionChartView">
            <summary>
              Looks up a localized string similar to Invalid ChartViewType!.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebArgumentExceptionImageType">
            <summary>
              Looks up a localized string similar to Invalid ImageType!.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebArgumentExceptionImageData">
            <summary>
              Looks up a localized string similar to Could not get image from image data in Base64 string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebBeforePaint">
            <summary>
              Looks up a localized string similar to The event is raised before chart is painted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebBeforeRenderMapAreas">
            <summary>
              Looks up a localized string similar to The event is raised before the control renders the map area to HTML..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebChartHeight">
            <summary>
              Looks up a localized string similar to Gets or sets the height of the Web Chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebChartImageType">
            <summary>
              Looks up a localized string similar to Gets or sets the format of the output image.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebChartWidth">
            <summary>
              Looks up a localized string similar to Gets or sets the width of the Web Chart..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebClick">
            <summary>
              Looks up a localized string similar to The event raised when the chart image is clicked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebConfirmHttpHandlerRegisterCaption">
            <summary>
              Looks up a localized string similar to HttpHandler.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebConfirmHttpHandlerRegisterContent">
            <summary>
              Looks up a localized string similar to Do you want to add HttpHandler to web.config?.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebDescriptionUrl">
            <summary>
              Looks up a localized string similar to Gets or sets control DescriptionUrl property..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebErrorHttpHandlerRegisterContent">
            <summary>
              Looks up a localized string similar to Failed to modify the web.config file. Please modify your web.config file manually to contain the following element in the \&quot;system.web/httpHandlers\&quot; section: &lt;add verb=\&quot;*\&quot; path=\&quot;{0}\&quot; type=\&quot;{1}\&quot; validate=\&quot;false\&quot;/&gt;.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebErrorImageRenderParse">
            <summary>
              Looks up a localized string similar to Failed to parse {0}.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebErrorSerialize">
            <summary>
              Looks up a localized string similar to Can not serialize this type {0}.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebExceptionHeightUnitIsNotPixcel">
            <summary>
              Looks up a localized string similar to Chart height must be set in pixels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebExceptionWidthUnitIsNotPixcel">
            <summary>
              Looks up a localized string similar to Chart width must be set in pixels..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebGenerateEmptyAlternateText">
            <summary>
              Looks up a localized string similar to Gets or sets a value indicating whether the control generates an alternate text attribute for an empty string value..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebImageAlign">
            <summary>
              Looks up a localized string similar to Gets or sets the alignment of the image within the text flow..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebImageRender">
            <summary>
              Looks up a localized string similar to Gets or sets the image render of the chart control.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebInstanceGuid">
            <summary>
              Looks up a localized string similar to Gets a guid that uniquely identifies the chart component..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebInvalidHeight">
            <summary>
              Looks up a localized string similar to Height must be large than zero..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebInvalidWidth">
            <summary>
              Looks up a localized string similar to Width must be large than zero..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebHitTestException">
            <summary>
              Looks up a localized string similar to Failed to get HitTest..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebRenderImageException">
            <summary>
              Looks up a localized string similar to Failed to rander chart image..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebJpegQuality">
            <summary>
              Looks up a localized string similar to Gets or sets control JpegQuality property when the chart image created is Jpeg format..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebMapAreaClick">
            <summary>
              Looks up a localized string similar to The event raised when a hotspot is clicked..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.WebRenderMapArea">
            <summary>
              Looks up a localized string similar to Gets or sets control RenderMapArea property. If the property is false, map area HTML will not be genernated..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.Width">
            <summary>
              Looks up a localized string similar to Gets the width of the line..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XAxes">
            <summary>
              Looks up a localized string similar to Gets the collection of x axes..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XAxis">
            <summary>
              Looks up a localized string similar to Gets the x-axis..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XAxisId">
            <summary>
              Looks up a localized string similar to Gets or sets the ID of the x-axis on which the series is plotted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XY">
            <summary>
              Looks up a localized string similar to XY.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYLine">
            <summary>
              Looks up a localized string similar to XY Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYLineWithMarker">
            <summary>
              Looks up a localized string similar to XY Line With Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYPoint">
            <summary>
              Looks up a localized string similar to XY Point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYZ">
            <summary>
              Looks up a localized string similar to XYZ.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYZLine">
            <summary>
              Looks up a localized string similar to XYZ Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYZLineWithMarker">
            <summary>
              Looks up a localized string similar to XYZ Line With Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.XYZPoint">
            <summary>
              Looks up a localized string similar to XYZ Point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.YAxes">
            <summary>
              Looks up a localized string similar to Gets the collection of y axes..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.YAxisId">
            <summary>
              Looks up a localized string similar to Gets or sets the ID of the y-axis on which the series is plotted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.YPlotArea_Vertical">
            <summary>
              Looks up a localized string similar to Gets of sets whether the plot is vertical or horizontal..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ZAxes">
            <summary>
              Looks up a localized string similar to Gets the collection of z axies..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ZAxis">
            <summary>
              Looks up a localized string similar to Gets the z-axis..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ZAxisId">
            <summary>
              Looks up a localized string similar to Gets or sets the ID of the z-axis on which the series is plotted..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_AutomaticRadioButton_Text">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_CancelButton_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_CircleBevelRadioButton_Text">
            <summary>
              Looks up a localized string similar to &#x26;Circle Bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_HeightLabel_Text">
            <summary>
              Looks up a localized string similar to Height.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_NoBevelRadioButton_Text">
            <summary>
              Looks up a localized string similar to No Bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_OkButton_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelDialog_WidthLabel_Text">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_BtnOpenImageFileDialog_Text">
            <summary>
              Looks up a localized string similar to File....
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_ButtonCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_ButtonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelColor_Text">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelColor0_Text">
            <summary>
              Looks up a localized string similar to Color 0:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelColor1_Text">
            <summary>
              Looks up a localized string similar to Color 1:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelStyle_Text">
            <summary>
              Looks up a localized string similar to Style:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelGradientTransparancy0_Text">
            <summary>
              Looks up a localized string similar to Transparency:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelGradientTransparency1_Text">
            <summary>
              Looks up a localized string similar to Transparency:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_LabelSolidTransparence_Text">
            <summary>
              Looks up a localized string similar to Transparency:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_RadioButtonAutomatic_Text">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_RadioButtonGradientFill_Text">
            <summary>
              Looks up a localized string similar to Gradient Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillTitle">
            <summary>
              Looks up a localized Fill string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.GradientTitle">
            <summary>
              Looks up a localized Gradient string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerTitle">
            <summary>
              Looks up a localized Gradient string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.StripeTitle">
            <summary>
              Looks up a localized Gradient string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineTitle">
            <summary>
              Looks up a localized Line string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.BevelTitle">
            <summary>
              Looks up a localized Bevel string.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_RadioButtonImageFill_Text">
            <summary>
              Looks up a localized string similar to Image Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_RadioButtonNoFill_Text">
            <summary>
              Looks up a localized string similar to No Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FillEffectDialog_RadioButtonSolidFill_Text">
            <summary>
              Looks up a localized string similar to Solid Fill.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_ButtonCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_ButtonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_CbThousandSeparator_Text">
            <summary>
              Looks up a localized string similar to Use 1000 Separator .
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_CmbCurrencySymbol_Text">
            <summary>
              Looks up a localized string similar to $.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_Label1_Text">
            <summary>
              Looks up a localized string similar to Decimal Places:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_Label2_Text">
            <summary>
              Looks up a localized string similar to Category:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_Label3_Text">
            <summary>
              Looks up a localized string similar to Format Code:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LabelNumberFormatDialog_LbCurrencySymbol_Text">
            <summary>
              Looks up a localized string similar to Currency Symbol:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_ButtonCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_ButtonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_LabelColor_Text">
            <summary>
              Looks up a localized string similar to Color:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_LabelWidth_Text">
            <summary>
              Looks up a localized string similar to Width:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_LabelWidthRange_Text">
            <summary>
              Looks up a localized string similar to (0-3).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_LabelTransparency_Text">
            <summary>
              Looks up a localized string similar to Transparency:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_RadioButtonAutomatic_Text">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_RadioButtonNoLine_Text">
            <summary>
              Looks up a localized string similar to No Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.LineDialog_RadioButtonSolidLine_Text">
            <summary>
              Looks up a localized string similar to Solid Line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_AutomaticRadioButton_Text">
            <summary>
              Looks up a localized string similar to Automatic.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_BuiltinMarkerRadioButton_Text">
            <summary>
              Looks up a localized string similar to Builtin Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_CancelButton_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_NoMarkerRadioButton_Text">
            <summary>
              Looks up a localized string similar to No Marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_OkButton_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_ShapeLabel_Text">
            <summary>
              Looks up a localized string similar to Shape.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.MarkerDialog_SizeLabel_Text">
            <summary>
              Looks up a localized string similar to Size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_ButtonCancel_Text">
            <summary>
              Looks up a localized string similar to Orthogonal.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_ButtonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_LabelAngle_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_RadioButtonOblique_Text">
            <summary>
              Looks up a localized string similar to Perspective.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_RadioButtonOrthogonal_Text">
            <summary>
              Looks up a localized string similar to Oblique.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ProjectionDialog_RadioButtonPerspective_Text">
            <summary>
              Looks up a localized string similar to Angle:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HttpHandlerImageRender_ImageTransferStorage">
            <summary>
              Looks up a localized string similar to Gets or sets the storage mode of saving chart image in memory..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HttpHandlerImageRender_TransferId">
            <summary>
              Looks up a localized string similar to Gets or sets a key to access session or cache to get chart image stored..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.HttpHandlerImageRender_KeepTransferStorage">
            <summary>
              Looks up a localized string similar to Gets or sets the value whether to keep the chart image in session or cache..
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.FileImageRender_ImageUrl">
            <summary>
              Looks up a localized string similar to Gets or sets the path and filename of the image file to be generated. .
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_Form_Text">
            <summary>
              Looks up a localized string similar to ImageRender Form Title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_radioButtonHttpHandlerImageRender_Text">
            <summary>
              Looks up a localized string similar to HttpHandlerImageRender.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_radioButtonFileImageRender_Text">
            <summary>
              Looks up a localized string similar to FileImageRender.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_groupBoxImagePath_Text">
            <summary>
              Looks up a localized string similar to Image Url.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_labelPath_Text">
            <summary>
              Looks up a localized string similar to URL:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_labelTranferId_Text">
            <summary>
              Looks up a localized string similar to TranferId:.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_checkBoxKeepTransferStorage_Text">
            <summary>
              Looks up a localized string similar to Keep Transfer Storage.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_buttonOK_Text">
            <summary>
              Looks up a localized string similar to OK.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_buttonCancel_Text">
            <summary>
              Looks up a localized string similar to Cancel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_groupBoxImageTransferStorage_Text">
            <summary>
              Looks up a localized string similar to Image Transfer Storage.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_radioButtonCache_Text">
            <summary>
              Looks up a localized string similar to Cache.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DefaultResources.ImageRenderDialog_radioButtonSession_Text">
            <summary>
              Looks up a localized string similar to Session.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.Fill">
            <summary>
            Represents the fill base.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.NoFill">
            <summary>
            Represents a fill that is transparent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.NoFill.#ctor">
            <summary>
            Creates a new fill that is transparent.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SolidFill">
            <summary>
            Represents a fill that uses a single color.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SolidFill.#ctor(System.Drawing.Color)">
            <summary>
            Creates a new solid fill with the specified color.
            </summary>
            <param name="color">Color of the fill</param>
        </member>
        <member name="P:FarPoint.Win.Chart.SolidFill.Color">
            <summary>
            Gets the color of this fill.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.GradientFill">
            <summary>
            Represents a fill that uses a two color linear gradient.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.GradientFill.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Creates a new gradient fill with the specified colors.
            </summary>
            <param name="color0">Start color of the gradient</param>
            <param name="color1">End color of the gradient</param>
        </member>
        <member name="M:FarPoint.Win.Chart.GradientFill.#ctor(System.Drawing.Color,System.Drawing.Color,FarPoint.Win.Chart.GradientStyle)">
            <summary>
            Creates a new gradient fill with the specified colors
            and the specified style of gradient.
            </summary>
            <param name="color0">Start color of the gradient</param>
            <param name="color1">End color of the gradient</param>
            <param name="style">Style of gradient</param>
        </member>
        <member name="P:FarPoint.Win.Chart.GradientFill.Color0">
            <summary>
            Gets the start color of the gradient.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.GradientFill.Color1">
            <summary>
            Gets the end color of the gradient.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.GradientFill.Style">
            <summary>
            Gets the direction of the gradient.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ImageFill">
            <summary>
            Represents a fill that is an image.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ImageFill.#ctor(System.Drawing.Image)">
            <summary>
            Creates a new image fill with the specified image.
            </summary>
            <param name="image">Image of the fill</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ImageFill.Image">
            <summary>
            Gets the image of this fill.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.GradientStyle">
            <summary>
            Specifies the direction of a linear gradient.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GradientStyle.Horizontal">
            <summary>
            Gradient is from left to right
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GradientStyle.Vertical">
            <summary>
            Gradient is from top to bottom
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GradientStyle.ForwardDiagonal">
            <summary>
            Gradient is from top left to bottom right
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GradientStyle.BackwardDiagonal">
            <summary>
            Gradient is from top right to bottom left
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.FpChart">
            <summary>
            Represents a view of a chart model using either GDI (2D) or OpenGL (3D) rendering.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.FpChart"/> class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.SetStyles">
            <summary>
            Sets control styles settings for respective ViewType 2D and 3D
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.About">
            <summary>
            Gets the version information about the component. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.Model">
            <summary>
            Gets or sets the chart model.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is null.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.ViewType">
            <summary>
            Gets or sets whether the chart is rendered in 2D or 3D.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.model_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event of the model control.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle
            is created.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.DefaultSize">
            <summary>
             Gets the default size of the component.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.DestroyHandle">
            <summary>
            Destroys the handle associated with the control.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows <see cref="T:System.Windows.Forms.Message"/> to process.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseMove"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.MouseDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.MouseEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnSizeChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.SizeChanged"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnLostFocus(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.LostFocus"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessDialogKey(System.Windows.Forms.Keys)">
            <summary>
            Processes a dialog key.
            </summary>
            <param name="keyData">One of the <see cref="T:System.Windows.Forms.Keys"/> values that represents the key to process.</param>
            <returns>
            true if the key was processed by the control; otherwise, false.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyDown"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.KeyUp"/> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.KeyEventArgs"/> that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.DoubleBuffered">
            <summary>
            Gets or sets a value indicating whether this control should redraw its surface using a secondary buffer to reduce or prevent flicker.
            </summary>
            <value></value>
            <returns>true if the surface of the control should be drawn using double buffering; otherwise, false.</returns>
            <remarks>The FpChart control cannot use double buffer in 3D view. So user should not set this property to true
            when using 3D view.</remarks> 
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.Dispose(System.Boolean)">
            <summary>
            Releases referencing resources before being destroyed
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.GripFlatStyle">
            <summary>
            Gets or sets a value indicating whether the grip has 3D style or flat style
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.Interactive">
            <summary>
            Gets or sets a value indicating whether to enable the selection of
            plot area, legend area, label area or series. Users can perform actions such as 
            move, resize, copy, cut, paste, delete with the selected object.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.SelectedObject">
            <summary>
            Gets or sets the selected object. Could be a plot area,
            legend area, label area or series info.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.HitTest(System.Int32,System.Int32)">
            <summary>
            Returns the object at the specified location.
            </summary>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>Returns hit test objects, could be a plot area, label area, legend area, series or grip hit test.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.RepositionPastedObject(System.Object,System.Drawing.RectangleF)">
            <summary>
            Sets position of newly pasted object according to its original object
            </summary>
            <param name="obj"></param>
            <param name="objRect"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessGripKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Routes the appropriated key up: Shift or Ctrl key up
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessKeyCombinedMove(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Processes moving and dragging while holding SHIFT or CTRL key
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessGripKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Routes the appropriated key down: Esc or Del or Ctrl+C or Ctrl+V or Ctrl+X or Shift|Ctrl key down
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessCutSelectedObject">
            <summary>
            Cuts the current selected object and saves it to ClipBoard
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessPasteSelectedObject">
            <summary>
            Gets the object from ClipBoard and construct the object into chart
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.GetLayoutRectangle(System.Object,System.Boolean@)">
            <summary>
            Gets layout rectangle of the input object relative to control rectangle area
            </summary>
            <param name="obj">object to get layout</param>
            <param name="saveNewOBJ">notify if layout found</param>
            <returns>layout rectangle</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessCopySelectedObject(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Saves the selected object into ClipBoard
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessMoveSelectedObject(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Moves the selected object using arrow keys
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessActionRoutes(System.Object,System.ComponentModel.CancelEventArgs,FarPoint.Win.Chart.UndoAction,FarPoint.Win.Chart.FpChart.Predicate)">
            <summary>
            Processes the same skeleton for every action which supports undo/redo
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessDeleteSelectedObject">
            <summary>
            Removes the selected object from chart
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.FpChart.EnhancedCursor">
            <summary>
            The enhance cursor.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.EnhancedCursor.LoadImage(System.IntPtr,System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Load an image
            </summary>
            <param name="hInst"></param>
            <param name="path"></param>
            <param name="type"></param>
            <param name="width"></param>
            <param name="height"></param>
            <param name="flags"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.EnhancedCursor.FromFile(System.String)">
            <summary>
            Load a cursor from an input file.
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.EnhancedCursor.FromStream(System.IO.Stream)">
            <summary>
            Load a cursor from a stream.
            </summary>
            <param name="stream"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessGripMoving(System.Single,System.Single,System.Drawing.RectangleF@)">
            <summary>
            Calculates the bounds rectangle while moving
            </summary>
            <param name="deltaX"></param>
            <param name="deltaY"></param>
            <param name="tempRect"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.ProcessGripResizing(System.Drawing.RectangleF,FarPoint.Win.Chart.DragDirection,System.Single,System.Single,System.Single,System.Drawing.RectangleF@)">
            <summary>
            Calculate the bounds rectangle while resizing
            </summary>
            <param name="gripRectangle"></param>
            <param name="dragDirection"></param>
            <param name="deltaX"></param>
            <param name="deltaY"></param>
            <param name="handleSize"></param>
            <param name="tempRect"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.SelectObjectOnHitTest(System.Windows.Forms.MouseEventArgs,FarPoint.Win.Chart.HitTest,FarPoint.Win.Chart.DragDirection)">
            <summary>
            Determines the selected object arcording to hit test result
            </summary>
            <param name="e">Mouse Event Args</param>
            <param name="hitTest">Hit Test Result</param>
            <param name="dragDirection">Drag Direction</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.IsNewSupportedChart(FarPoint.Win.Chart.ChartModel)">
            <summary>
            Indicate the model contains new Excel 2016 chart type
            </summary>
            <param name="model"></param>
            <returns></returns>
        </member>
        <member name="E:FarPoint.Win.Chart.FpChart.SelectionChanged">
            <summary>
            Occurs when the selection changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.FpChart.ActionDoing">
            <summary>
            Occurs when on performing actions such as move, resize, delete, cut
            and paste.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.FpChart.ActionDone">
            <summary>
            Occurs when on actions done such as move, resize, delete, cut
            and paste.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnSelectionChanged(System.EventArgs)">
            <summary>
            Called when selection changed.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.RaiseActionDoing(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the performing action events, such as move, resize, delete, cut
            and paste.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.CancelEventArgs"/> instance containing the event data. 
            The actual types of the event could be <see cref="T:FarPoint.Win.Chart.MoveResizeCancelEventArgs"/>, <see cref="T:FarPoint.Win.Chart.MoveResizeCancelEventArgs"/>,
            <see cref="T:FarPoint.Win.Chart.DeleteCancelEventArgs"/>, <see cref="T:FarPoint.Win.Chart.ClipboardPasteCancelEventArgs"/>, <see cref="T:FarPoint.Win.Chart.ClipboardCutCancelEventArgs"/>.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.RaiseActionDone(System.EventArgs)">
            <summary>
            Raises the action done events, such as move, resize, delete, cut
            and paste.
            </summary>
            <param name="e">The <see cref="T:System.EventArgs"/> instance containing the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.AllowUndo">
            <summary>
            Gets or sets a value indicating whether to allow undo and redo.
            If not enabled, no action will be added to undo list of the undo manager.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FpChart.UndoManager">
            <summary>
            Gets the undo manager which can be used to manage
            undo and redo actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.SaveToTemplate(System.IO.Stream)">
            <summary>
            Saves to a template which contain a chart model and chart view type in the specified stream.
            </summary>
            <param name="stream">The stream to save the template.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.LoadFromTemplate(System.IO.Stream)">
            <summary>
            Loads from a template which contain a chart model and chart view type in the specified stream..
            </summary>
            <param name="stream">The stream which contain the template.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.System#Xml#Serialization#IXmlSerializable#GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, 
            you should return null (Nothing in Visual Basic) from this method, and instead, 
            if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of 
            the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> 
            method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Raises the Paint event.
            </summary>
            <param name="e">Contains event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.RenderImage">
            <summary>
            Renders the chart's image to a bitmap and return this bitmap.
            </summary>
            <returns>The bitmap of the control.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.Render(System.Drawing.Graphics,FarPoint.Win.Chart.ChartModel,System.Drawing.Rectangle,System.Boolean)">
            <summary>
            Renders the chart to a graphic.
            </summary>
            <param name="g">A Graphics object that is associated with a specific device context.</param>
            <param name="model">A ChartModel object.</param>
            <param name="r">Specifies the location and size.</param>
            <param name="drawSelection">Specifies whether selection is rendered or not.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            The constructor for binary deserialization.
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Serializes appropriated properties
            </summary>
            <param name="info">SerializationInfo object</param>
            <param name="context">StreamingContext object</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.FarPoint#Win#IInternalCommunication#PassString(System.String,System.String@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FpChart.FarPoint#Win#IInternalCommunication#PassStringBytes(System.String,System.Byte[]@)">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartViewType">
            <summary>
            Indicates whether view rendered is 2D or 3D.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartViewType.View2D">
            <summary>
            View is rendered in 2D.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartViewType.View3D">
            <summary>
            View is rendered in 3D.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.MoveResizeCancelEventArgs">
            <summary>
            Event argument for move or resize action.Users can cancel this actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MoveResizeCancelEventArgs.#ctor(System.Drawing.RectangleF)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.MoveResizeCancelEventArgs"/> class.
            </summary>
            <param name="rect">The rectangle which specifies the new location.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.MoveResizeCancelEventArgs.Rectangle">
            <summary>
            Gets the rectangle which specifies the new location.
            </summary>
            <value>The rectangle which specifies the new location.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.DeleteCancelEventArgs">
            <summary>
            Event argument for delete action. Users can cancel this actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DeleteCancelEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.DeleteCancelEventArgs"/> class.
            </summary>
            <param name="obj">The object to be deleted.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.DeleteCancelEventArgs.Object">
            <summary>
            Gets the object which to be deleted, can be a plot area, legend area,
            label area or a series info.
            </summary>
            <value>The object to be deleted.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.ClipboardPasteCancelEventArgs">
            <summary>
            Event argument for clip board paste action. Users can cancel this action.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardPasteCancelEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.ClipboardPasteCancelEventArgs"/> class.
            </summary>
            <param name="obj">The object to be pasted.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ClipboardPasteCancelEventArgs.Object">
            <summary>
            Gets the object to be pasted, can be a plot area, legend area,
            label area or a series info.
            </summary>
            <value>The object to be pasted.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.ClipboardCutCancelEventArgs">
            <summary>
            Event argument for cut action. Users can cancel this action.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardCutCancelEventArgs.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.ClipboardCutCancelEventArgs"/> class.
            </summary>
            <param name="obj">The object to be cut.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ClipboardCutCancelEventArgs.Object">
            <summary>
            Gets the object to be cut, can be a plot area, legend area,
            label area or a series info.
            </summary>
            <value>The object to be cut.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.FunnelSeries">
            <summary>
            Represents a funnel series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.#ctor(FarPoint.Win.Chart.FunnelSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.categoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.Count">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.Clone">
            <summary>
            Clone the object
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new FunnelSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FunnelSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
            <exception cref="T:System.Security.SecurityException">Caller does not have the required permission</exception>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.LabelVisible">
            <summary>
            Gets or sets whether the data labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false, then all data points are displayed with the same color.
            If true, then each data point is displayed with a different color.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.AutoOrigin">
            <summary>
            Gets or sets whether the bar origin is automatically calculated
            or manually assigned.
            </summary>
            <remarks>
            If false, then the bar origin is manually assigned via the
            Origin property.  If true, then bar origin is automatically
            calculated as the minimum value in the series.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.Origin">
            <summary>
            Gets or sets the bar origin.
            </summary>
            <remarks>
            This property is only used when AutoOrigin is false.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.FunnelSeries.GapWidth">
            <summary>
            
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.DRIVERVERSION">
            <summary>
            Device driver version
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.TECHNOLOGY">
            <summary>
            Device classification
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.HORZSIZE">
            <summary>
            Horizontal size in millimeters
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.VERTSIZE">
            <summary>
            Vertical size in millimeters
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.HORZRES">
            <summary>
            Horizontal width in pixels
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.VERTRES">
            <summary>
            Vertical height in pixels
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.BITSPIXEL">
            <summary>
            Number of bits per pixel
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PLANES">
            <summary>
            Number of planes
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMBRUSHES">
            <summary>
            Number of brushes the device has
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMPENS">
            <summary>
            Number of pens the device has
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMMARKERS">
            <summary>
            Number of markers the device has
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMFONTS">
            <summary>
            Number of fonts the device has
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMCOLORS">
            <summary>
            Number of colors the device supports
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PDEVICESIZE">
            <summary>
            Size required for device descriptor
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.CURVECAPS">
            <summary>
            Curve capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.LINECAPS">
            <summary>
            Line capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.POLYGONALCAPS">
            <summary>
            Polygonal capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.TEXTCAPS">
            <summary>
            Text capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.CLIPCAPS">
            <summary>
            Clipping capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.RASTERCAPS">
            <summary>
            Bitblt capabilities
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.ASPECTX">
            <summary>
            Length of the X leg
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.ASPECTY">
            <summary>
            Length of the Y leg
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.ASPECTXY">
            <summary>
            Length of the hypotenuse
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.SHADEBLENDCAPS">
            <summary>
            Shading and Blending caps
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.SIZEPALETTE">
            <summary>
            Number of entries in physical palette
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.NUMRESERVED">
            <summary>
            Number of reserved entries in palette
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.COLORRES">
            <summary>
            Actual color resolution
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PHYSICALWIDTH">
            <summary>
            Physical Width in device units
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PHYSICALHEIGHT">
            <summary>
            Physical Height in device units
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PHYSICALOFFSETX">
            <summary>
            Physical Printable Area x margin
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.PHYSICALOFFSETY">
            <summary>
            Physical Printable Area y margin
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.SCALINGFACTORX">
            <summary>
            Scaling factor x
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.SCALINGFACTORY">
            <summary>
            Scaling factor y
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.VREFRESH">
            <summary>
            Current vertical refresh rate of the display device (for displays only) in Hz
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.DESKTOPVERTRES">
            <summary>
            Horizontal width of entire desktop in pixels
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.DESKTOPHORZRES">
            <summary>
            Vertical height of entire desktop in pixels
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.GDI.DeviceCap.BLTALIGNMENT">
            <summary>
            Preferred blt alignment
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.GenericTypeConverter`1">
            <summary>
            A generic type converter which inherited from <see cref="T:System.ComponentModel.ExpandableObjectConverter"/> and can be used for 
            various type of objects in FpChart.
            </summary>
            <typeparam name="T">Type of the object.</typeparam>
        </member>
        <member name="M:FarPoint.Win.Chart.GenericTypeConverter`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.GenericTypeConverter`1"/> class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.GenericTypeConverter`1.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>
            Determines whether the control can convert the context to the specified type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="destinationType">Type</param>
            <returns>Boolean: true if the control can convert the context; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.GenericTypeConverter`1.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>
            Converts the context to the specified culture and type.
            </summary>
            <param name="context">Type descriptor context</param>
            <param name="culture">Culture</param>
            <param name="value">Value</param>
            <param name="destinationType">Type</param>
            <returns>Converted object</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Grip2DRenderer.DrawSubArea(System.Drawing.Graphics,System.Collections.ArrayList)">
            <summary>
            Draws sub areas in a area chart type
            </summary>
            <param name="g">Graphics</param>
            <param name="list">Point array</param>
        </member>
        <member name="P:FarPoint.Win.Chart.GripInfo.DragDirection">
            <summary>
            Gets or sets the drag direction. 
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.DragDirection">
            <summary>
            Drag direction
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.None">
            <summary>
            No dragging
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.Left">
            <summary>
            Left handle     
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.Right">
            <summary>
            Right handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.Top">
            <summary>
            Top handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.Bottom">
            <summary>
            Bottom handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.TopLeft">
            <summary>
            Top left handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.TopRight">
            <summary>
            Top right handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.BottomLeft">
            <summary>
            Bottom left handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.BottomRight">
            <summary>
            Bottom right handle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DragDirection.Move">
            <summary>
            Move handle
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.AxisInfo">
            <summary>
            Represents information of a selected axis.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.AxisInfo.AxisType">
            <summary>
            Indicates the axis type
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisInfo.AxisType.X">
            <summary>
            X-axis
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisInfo.AxisType.Y">
            <summary>
            Y-axis
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.AxisInfo.AxisType.Z">
            <summary>
            Z-axis
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisInfo.PlotArea">
            <summary>
            Gets or sets the plot area.
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisInfo.Type">
            <summary>
            Gets or sets the axis type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisInfo.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.AxisInfo.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.AxisInfo.AxisType,FarPoint.Win.Chart.Axis)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.AxisInfo"/> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="type">The axis type.</param>
            <param name="axis">The axis.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesInfo">
            <summary>
            This class represent infomation to identify a series
            used in selection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesInfo.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesInfo"/> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="seriesGroup">The series group.</param>
            <param name="series">The series.</param>
            <param name="pointIndex">Index of the point.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesInfo.#ctor(FarPoint.Win.Chart.SeriesHitTest)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesInfo"/> class.
            </summary>
            <param name="hitTest">The hit test.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.PlotArea">
            <summary>
            Gets the plot area.
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.SeriesGroup">
            <summary>
            Gets the series group.
            </summary>
            <value>The series group.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.PointIndex">
            <summary>
            Gets the index of the point. If -1 means all data points are selected.
            </summary>
            <value>The index of the point.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.SeriesIndex">
            <summary>
            Gets the index of the series in its parent collection
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.SeriesGroupIndex">
            <summary>
            Gets the index of series group, is -1 when series group is null
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesInfo.TargetObject">
            <summary>
            Gets the actual series which being processed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesInfo.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with the current <see cref="T:System.Object"/>.</param>
            <returns>
            true if the specified <see cref="T:System.Object"/> is equal to the current <see cref="T:System.Object"/>; otherwise, false.
            </returns>
            <exception cref="T:System.NullReferenceException">The <paramref name="obj"/> parameter is null.</exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesInfo.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>
            A hash code for the current <see cref="T:System.Object"/>.
            </returns>
        </member>
        <member name="P:FarPoint.Win.Chart.TreeSeriesInfor.ParentPointIndex">
            <summary>
            Index of child node of main point index
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeSeriesInfor.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesInfo"/> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="seriesGroup">The series group.</param>
            <param name="series">The series.</param>
            <param name="pointIndex">Index of the point.</param>
            <param name="parentPointIndex">Parent point index.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeSeriesInfor.#ctor(FarPoint.Win.Chart.TreeSeriesHitTest)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesInfo"/> class.
            </summary>
            <param name="hitTest">The hit test.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.GripHitTest">
            <summary>
            Represent hit test info returned by grip renderer
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.GripHitTest.#ctor(FarPoint.Win.Chart.DragDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.GripHitTest"/> class.
            </summary>
            <param name="direction">The direction.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.GripHitTest.#ctor(FarPoint.Win.Chart.SeriesHitTest)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.GripHitTest"/> class.
            </summary>
            <param name="seriesHitTest">The series hit test.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.GripHitTest.SeriesHit">
            <summary>
            Gets the series hit test according to clicked series handle. If SeriesHit is not null,
            the Direction will always be None.
            </summary>
            <value>The series hit test.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.GripHitTest.Direction">
            <summary>
            Gets the direction.The direction will be None if the series handle is visible (the SeriesHit
            is not null). And when the direction is not None, the SeriesHit will be null.
            </summary>
            <value>The direction.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.HighLowAreaSeries">
            <summary>
            Represents a high-low area series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.#ctor(FarPoint.Win.Chart.HighLowAreaSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.HighValues">
            <summary>
            Gets the collection of high values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.LowValues">
            <summary>
            Gets the collection of low values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.AreaBorders">
            <summary>
            Gets the collection of area borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.AreaFills">
            <summary>
            Gets the collection of area fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.AreaBorder">
            <summary>
            Gets or sets the area border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.AreaFill">
            <summary>
            Gets or sets the area fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.DropLinesLine">
            <summary>
            Gets or sets the line used to draw the drop lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or is greater than one.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.DropLinesVisible">
            <summary>
            Gets or sets whether drop lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.LabelContainsHighValue">
            <summary>
            Gets or sets whether the high value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowAreaSeries.LabelContainsLowValue">
            <summary>
            Gets or sets whether the low value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.highValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.lowValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.areaBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.areaFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowAreaSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.HighLowBarSeries">
            <summary>
            Represents a high-low bar series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.#ctor(FarPoint.Win.Chart.HighLowBarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.HighValues">
            <summary>
            Gets the collection of high values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.LowValues">
            <summary>
            Gets the collection of low values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BarBorders">
            <summary>
            Gets the collection of bar borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BarFills">
            <summary>
            Gets the collection of bar fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BottomBevels">
            <summary>
            Gets the collection of bottom bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.TopBevels">
            <summary>
            Gets the collection of top bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BarBorder">
            <summary>
            Gets or sets the bar border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BarFill">
            <summary>
            Gets or sets the bar fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BarShape">
            <summary>
            Gets or sets the shape of bars.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.BottomBevel">
            <summary>
            Gets or sets the bottom bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.TopBevel">
            <summary>
            Gets or sets the top bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point width
            (0 = no gap, 1 = gap and data poitn have same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.LabelContainsHighValue">
            <summary>
            Gets or sets whether the high value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowBarSeries.LabelContainsLowValue">
            <summary>
            Gets or sets whether the low value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.highValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.lowValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.barBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.barFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.bottomBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.topBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowBarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.HighLowCloseSeries">
            <summary>
            Represents a high-low-close series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.#ctor(FarPoint.Win.Chart.HighLowCloseSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.HighValues">
            <summary>
            Gets the collection of high values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.LowValues">
            <summary>
            Gets the collection of low values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.CloseValues">
            <summary>
            Gets the collection of close values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.Lines">
            <summary>
            Gets the collection of lines for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.Line">
            <summary>
            Gets or sets the line for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point wdith
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.LabelContainsHighValue">
            <summary>
            Gets or sets whether the high value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.LabelContainsLowValue">
            <summary>
            Gets or sets whether the low value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HighLowCloseSeries.LabelContainsCloseValue">
            <summary>
            Gets or sets whether the close value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.highValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.lowValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.closeValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.lines_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HighLowCloseSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.HistogramSeries">
            <summary>
            Represents a histogram series in a Y plot area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.HistogramSeries.isSettingDataSourceInternal">
            <summary>
            Indicate whether in internal datasource setting progress.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.HistogramSeries.CalCategoryName">
            <summary>
            The list of calculated category name
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.HistogramSeries.CalculatedValues">
            <summary>
            The caculated value collection
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.binOptionInternal">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.IgnorePrepairData">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.Count">
            <summary>
            Gets the number of categories.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.BinOption">
            <summary>
            Gets or sets the bin options for the histogram series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.YAxisId">
            <summary>
            Gets or sets the ID of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.Bar">
            <summary>
            Gets the bar object of the histogram series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have same width).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.Bar_Values_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event when the bar value is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.Bar_CategoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event when the bar category is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.CategoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event when the histogram category is changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.BinOption_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event of the BinOption
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.Series_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the SeriesList
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.#ctor(FarPoint.Win.Chart.HistogramSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.Series">
            <summary>
            Gets the collection of series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.FarPoint#Win#Chart#IMixSeries#Series">
            <summary>
            Gets the collection of the bar series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.SetChartWidth(System.Int32)">
            <summary>
            to set the width of chart, using to calculate the number of display data point
            </summary>
            <param name="width"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            Handle Changed event of list value
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event of the list series.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.PrepairData">
            <summary>
            Prepair data for chart
            1. This chart has some static value such as standard deviation, average value, underFlowValue, aboveFlowValue. These values only changed when we changed data of chart
            2. LayoutData contain categoryName and value for each bar. We have 2 type of CategoryName, based on use bin or category of data. Value for each bar depends on type of Category.
            These values changed when we changed data of chart, changed type of category, bin width, number of bin.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.ResetOverFlowValue">
            <summary>
            Resets the OverFlowValue property to the default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.ResetUnderFlowValue">
            <summary>
            Resets the UnderFlowValue property to the default value.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetStandardDeviation">
            <summary>
            Get Standard deviation of data range
            ref: http://www.excelfunctions.net/standard-deviation-in-excel.html
            This logic is copied from CalEngine, function StDEVAFunctionInfo
            Confuse: the formular here is sqrt of sum ((x * x - averageX * averageX)/(n-1.0))
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetOverflowBinValue">
            <summary>
            When isOverflowBin = true, we have a bin with value is under overflowbin
            </summary>
            <returns>
            OverFlow bin value
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetUnderflowBinValue">
            <summary>
            When isAboveflowBin = true, we have a bin with value is under overflowbin
            </summary>
            <returns>
            AboveFlow bin value
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetAverageData">
            <summary>
            Get Average value of data range
            </summary>
            <returns>
             Average value of data range
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetSumData">
            <summary>
            Return sum of data on value list
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetNumOfValue">
            <summary>
            Get number of value of data range
            </summary>
            <returns>
            Number of Value of chart data
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetDefaultBinSize">
            <summary>
            Get default bin width. This values is calculated follow Scott's formular
            binSize = 3.5 * StandarDeviation / (Number of data)^(1/3)
            binSize should be round depend on format of data and value of data
            In case data is decimal with digits is a
            binSize = ROUND(binSize, Min(2 - CEILING.MATH(LOG10(binSize)), a)
            In case data is decimal with no any digits
            binSize = ROUND(binSize, 2 - CEILING.MATH(LOG10(binSize)))
            </summary>
            <returns>
            Default width of bin
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.PrepairStaticData">
            <summary>
            Prepair static data of chart. It includes: standard deviation, aboveflowbinvalue, underflowbinvalue, average, number of data.
            These values is changed only when data of chart is changed
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.PrepairLayoutData">
            <summary>
            Prepair data of layout of chart. It include categoryName and data of bars
            These values is changed when any setting of chart is changed, include: data of chart, isCategory, binSize, numberOfBin, isUnderFlowBin, isBelowFlowBin
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.CalculateData">
            <summary>
            Calculate Data: CategoryName and Value for child serie
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.AssignDataSource">
            <summary>
            Assign data source for child series of HistogramSeries
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetSchema">
            <summary>
            This method is reserved and should not be used. 
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Reads the XML element.
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.ReadElement(System.Xml.XmlReader)">
            <summary>
            Read XML Element
            </summary>
            <param name="reader"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new HistogramSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramSeries.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="T:FarPoint.Win.Chart.BinOption">
            <summary>
            Represents bin options for the histogram series.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.BinOption.HistogramBinType">
            <summary>
            Bin Type
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BinOption.HistogramBinType.ByCategory">
            <summary>
            By Category
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BinOption.HistogramBinType.Automatic">
            <summary>
            Automatic
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BinOption.HistogramBinType.BinSize">
            <summary>
            BinSize
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.BinOption.HistogramBinType.BinCount">
            <summary>
            BinCount
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.BinType">
            <summary>
            Gets the axis option for the histogram series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.BinSize">
            <summary>
            Gets or sets the size of the bin data for the histogram series.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.BinCount">
            <summary>
            Gets or sets the number of bins in the histogram series.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.IsOverflowBin">
            <summary>
            Gets or sets whether the bin is an overflow bin.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.IsUnderflowBin">
            <summary>
            Gets or sets whether the bin is an underflow bin.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.UnderFlowValue">
            <summary>
            Gets or sets the underflow bin value.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.OverFlowValue">
            <summary>
            Gets or sets the overflow bin value.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.AutoOverFlow">
            <summary>
            Gets or sets whether automatic overflow is used.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BinOption.AutoUnderFlow">
            <summary>
            Gets or sets whether automatic underflow is used.
            </summary>
            <remarks>
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.#ctor">
            <summary>
            Create a new BinOption
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.#ctor(FarPoint.Win.Chart.Series)">
            <summary>
            Creates a new BinOption that is a deep copy of the specified series.
            </summary>
            <param name="series"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.#ctor(FarPoint.Win.Chart.BinOption)">
            <summary>
            Creates a new BinOption that is a deep copy of the specified BinOption.
            </summary>
            <param name="binOption"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.#ctor(FarPoint.Win.Chart.BinOption,FarPoint.Win.Chart.Series)">
            <summary>
            Create a new BinOption with setting about series
            </summary>
            <param name="binOption"></param>
            <param name="series"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.equalTo(FarPoint.Win.Chart.BinOption)">
            <summary>
            Check 2 binOptions has equal or not
            </summary>
            <param name="binOption"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.copyFrom(FarPoint.Win.Chart.BinOption,System.Boolean)">
            <summary>
            Copy data for binOption by another binOption
            </summary>
            <param name="binOption"></param>
            <param name="informChanged"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.BinOption.Changed">
            <summary>
            Occurs when the bin option is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new BinOption from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinOption.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.BinApperance">
            <summary>
            Store data to display a bin
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.StartBraket">
            <summary>
            Gets the start bracket. Ex: [ or (
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.EndBracket">
            <summary>
            Gets the end bracket. Ex: ] or )
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.MinValue">
            <summary>
            Gets or sets the bin start value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.MaxValue">
            <summary>
            Gets or sets the bin end value.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.CategoryName">
            <summary>
            Gets the category name.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BinApperance.UseBin">
            <summary>
            Gets or sets whether to use the bin or category.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.#ctor">
            <summary>
            Create a BinApperance
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.#ctor(System.Boolean,System.Boolean,System.Object,System.Object)">
            <summary>
            Create a BinApperance
            </summary>
            <param name="isEqualMin"></param>
            <param name="isEqualMax"></param>
            <param name="startVal"></param>
            <param name="endVal"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetAttributes">
            <summary>
            Returns a collection of custom attributes for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.AttributeCollection"></see> containing the attributes for this object.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetClassName">
            <summary>
            Returns the class name of this instance of a component.
            </summary>
            <returns>
            The class name of the object, or null if the class does not have a name.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetComponentName">
            <summary>
            Returns the name of this instance of a component.
            </summary>
            <returns>
            The name of the object, or null if the object does not have a name.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetConverter">
            <summary>
            Returns a type converter for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.TypeConverter"></see> that is the converter for this object, or null if there is no <see cref="T:System.ComponentModel.TypeConverter"></see> for this object.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetDefaultEvent">
            <summary>
            Returns the default event for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptor"></see> that represents the default event for this object, or null if this object does not have events.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetDefaultProperty">
            <summary>
            Returns the default property for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the default property for this object, or null if this object does not have properties.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetEditor(System.Type)">
            <summary>
            Returns an editor of the specified type for this instance of a component.
            </summary>
            <param name="editorBaseType">A <see cref="T:System.Type"></see> that represents the editor for this object</param>
            <returns>
            The <see cref="T:System.Object"></see> of the specified type that is the editor for this object, or null if the editor cannot be found.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetEvents(System.Attribute[])">
            <summary>
            Returns the events for this instance of a component using the specified attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter</param>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the filtered events for this component instance.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetEvents">
            <summary>
            Returns the events for this instance of a component.
            </summary>
            <returns>
            An <see cref="T:System.ComponentModel.EventDescriptorCollection"></see> that represents the events for this component instance.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetProperties(System.Attribute[])">
            <summary>
            Returns the properties for this instance of a component using the attribute array as a filter.
            </summary>
            <param name="attributes">An array of type <see cref="T:System.Attribute"></see> that is used as a filter</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the filtered properties for this component instance.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetProperties">
            <summary>
            Returns the properties for this instance of a component.
            </summary>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"></see> that represents the properties for this component instance.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetPropertyOwner(System.ComponentModel.PropertyDescriptor)">
            <summary>
            Returns an object that contains the property described by the specified property descriptor.
            </summary>
            <param name="pd">A <see cref="T:System.ComponentModel.PropertyDescriptor"></see> that represents the property whose owner is to be found</param>
            <returns>
            An <see cref="T:System.Object"></see> that represents the owner of the specified property.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new BinApperance from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BinApperance.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.HitTest">
            <summary>
            Represents information about the hit test.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.LabelAreaHitTest">
            <summary>
            Represents information about the hit test in the label area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaHitTest.#ctor(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.LabelAreaHitTest" /> class.
            </summary>
            <param name="labelArea">The label area.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaHitTest.LabelArea">
            <summary>
            Gets the label area.
            </summary>
            <value>The label area.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.LegendAreaHitTest">
            <summary>
            Represents information about the hit test for the legend area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendAreaHitTest.legendArea">
            <summary>
            The legend area
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaHitTest.#ctor(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.LegendAreaHitTest" /> class.
            </summary>
            <param name="legendArea">The legend area.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaHitTest.LegendArea">
            <summary>
            Gets the legend area.
            </summary>
            <value>The legend area.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.PlotAreaHitTest">
            <summary>
            Represents information about the hit test for the plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaHitTest.#ctor(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.PlotAreaHitTest" /> class.
            </summary>
            <param name="plotArea">The plot area.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaHitTest.PlotArea">
            <summary>
            Gets the plot area.
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesElementHitTest">
            <summary>
            Represents information about the hit test for the element series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesElementHitTest.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series,System.Int32,System.Int32)">
            <summary>
            Initialize a new instance of type SeriesElementHitTest.
            </summary>
            <param name="plotArea"></param>
            <param name="group"></param>
            <param name="series"></param>
            <param name="pointIndex"></param>
            <param name="elementIndex"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesElementHitTest.ElementIndex">
            <summary>
            Gets the index of the element.
            </summary>
            <value>The index of the point.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesHitTest">
            <summary>
            Represents information about the hit test for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesHitTest.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesHitTest" /> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="group">The group.</param>
            <param name="series">The series.</param>
            <param name="pointIndex">Index of the point.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesHitTest.PlotArea">
            <summary>
            Gets the plot area.
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesHitTest.Group">
            <summary>
            Gets the series group.
            </summary>
            <value>The series group.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesHitTest.Series">
            <summary>
            Gets the series.
            </summary>
            <value>The series.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesHitTest.PointIndex">
            <summary>
            Gets the index of the point.
            </summary>
            <value>The index of the point.</value>
        </member>
        <member name="T:FarPoint.Win.Chart.TreeSeriesHitTest">
            <summary>
            Represents information about the hit test for the series that have hierarchical data 
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeSeriesHitTest.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.Series,FarPoint.Win.Chart.Series,System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.SeriesHitTest" /> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="group">The group.</param>
            <param name="series">The series.</param>
            <param name="pointIndex">The point index</param>
            <param name="parentPointIndex">The parent point index</param>
        </member>
        <member name="T:FarPoint.Win.Chart.AxisHitTest">
            <summary>
            Represents information about the hit test for the axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisHitTest.PlotArea">
            <summary>
            Gets or sets the plot area.
            </summary>
            <value>The plot area.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisHitTest.Type">
            <summary>
            Gets or sets the type.
            </summary>
            <value>The type.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.AxisHitTest.Axis">
            <summary>
            Gets or sets the axis.
            </summary>
            <value>The axis.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.AxisHitTest.#ctor(FarPoint.Win.Chart.PlotArea,FarPoint.Win.Chart.AxisInfo.AxisType,FarPoint.Win.Chart.Axis)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.AxisHitTest"/> class.
            </summary>
            <param name="plotArea">The plot area.</param>
            <param name="type">The type.</param>
            <param name="axis">The axis.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.IndexAxis">
            <summary>
            Represents an indexed axis.
            </summary>
            <remarks>
            An axis can have a title, a ruler line, tick marks, tick mark labels,
            grid lines, and stripes. The direction of an axis can be reversed.
            The minimum, maximum, and units of an axis can be automatically
            generated or manually assigned.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AxisType">
            <summary>
            Gets or sets the type of the axis.
            </summary>
            <value>The type of the axis.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.#ctor(FarPoint.Win.Chart.IndexAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.Clone">
            <summary>
            Creates a deep copy of this axis.
            </summary>
            <returns>A deep copy of this axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleTextFont">
            <summary>
            Gets or sets the font of the axis title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelTextFont">
            <summary>
            Gets or sets the font of tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the axis title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleVisible">
            <summary>
            Gets or sets whether the axis title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MajorGridVisible">
            <summary>
            Gets or set whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the axis is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AutoMinimum">
            <summary>
            Gets or sets whether the ruler minimum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AutoMaximum">
            <summary>
            Gets or sets whether the ruler maximum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for minor tick marks and
            minor grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Minimum">
            <summary>
            Gets or sets the ruler minimum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Maximum">
            <summary>
            Gets or sets the ruler maximum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MajorUnit">
            <summary>
            Gets or sets the interval for major tick marks and major grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MinorUnit">
            <summary>
            Gets or sets the interval for minor tick marks and minor grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelUnit">
            <summary>
            Gets or sets the interval for tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelOffset">
            <summary>
            Gets or sets the distance the tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.RulerOffset">
            <summary>
            Gets or sets the distance the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MajorTickLength">
            <summary>
            Gets or sets the length of major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.MinorTickLength">
            <summary>
            Gets or sets the length of minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.TickBetween">
            <summary>
            Gets or sets the position of tick marks relative to data points.
            </summary>
            <remarks>
            If true, then tick marks are displayed between data points.
            If false, then tick marks are displayed at data points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Location">
            <summary>
            Gets or sets the location of the axis relative to the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.LocationCustomValue">
            <summary>
            Gets or sets the custom location of the axis relative to the plot area.
            </summary>
            <remarks>
            This value only has an effect if the Location property is set to AxisLocation.Value
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.IndexAxis.Stripes">
            <summary>
            Gets the collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.stripes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.IndexAxisType">
            <summary>
            Indicates the display type of an index axis.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.IndexAxisType.Automatic">
            <summary>
            The series points are mapped to the axis automatically depending on the category's data.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.IndexAxisType.Text">
            <summary>
            The series points are mapped to the axis using the point's index.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.IndexAxisType.Date">
            <summary>
            The series points are mapped to the axis using the point's category.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.IChartSupportDataSourceFormater">
            <summary>
            The interface for chart support data source with formater support.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSourceFormater.GetFormatter(System.Int32)">
            <summary>
            Get the formater by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:FarPoint.Win.Chart.IChartSupportDataSource">
            <summary>
            Indicates whether to check that a specified data type exists in the data source.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.CanConvertToDateTime">
            <summary>
            Determines whether all values in the data source can be converted safely to the date time.
            </summary>
            <param name="type">The destination type.</param>
            <returns>
            	<c>true</c> if all values in the data source can be converted safely to the date time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.ContainsDateTimeOnly">
            <summary>
            Determines whether all values in the data source are date time.
            </summary>
            <returns>
            	<c>true</c> if all values in the data source are date time; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.GetMinValue">
            <summary>
            Gets the minimum value from the data source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.GetMaxValue">
            <summary>
            Gets the maximum value from the data source.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.GetDoubleEnumerable">
            <summary>
            Iterates over the data source and returns double values.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IChartSupportDataSource.GetDoubleValue(System.Int32)">
            <summary>
            Gets the double value at the specified index.
            </summary>
            <param name="index">The specified index.</param>
            <returns>The double value of the data source at the specified index.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxisTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.IndexAxisTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that will be used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for the component, or null if there are no properties.
            </returns>
        </member>
        <member name="T:FarPoint.Win.Chart.LabelArea">
            <summary>
            Represents a label area in the chart.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Overlay">
            <summary>
            Gets whether the label area overlaps the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.ManualLayout">
            <summary>
            Gets or sets whether the layout of the label area is
            automatically generated.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.#ctor">
            <summary>
            Creates a new label area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.#ctor(System.Boolean)">
            <summary>
            Creates a new label area.
            </summary>
            <param name="overlay">A boolean value that specifies whether the label text overlaps the plot area</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.#ctor(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Creates a new label area that is a deep copy of the specified
            label area.
            </summary>
            <param name="labelArea">Label area to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.Clone">
            <summary>
            Creates a deep copy of this label area.
            </summary>
            <returns>A deep copy of this label area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Text">
            <summary>
            Gets or sets the text displayed in the label area.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextRotationAngle">
            <summary>
            Gets or sets the rotation angle for the text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextDataSource">
            <summary>
            Gets or sets the data source for the text.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextDataField">
            <summary>
            Gets or sets the field in the data source that stores the text.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextFont">
            <summary>
            Gets or sets the font of the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the font
            is automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.TextFill">
            <summary>
            Gets or sets the fill of the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the fill
            is automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Border">
            <summary>
            Gets or sets the border around the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the border
            is automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Fill">
            <summary>
            Gets or sets the fill of the background behind the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the fill
            is automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Location">
            <summary>
            Gets or sets the location of the label area in the control.
            </summary>
            <remarks>
            Location is measured in relative units ((0.0, 0.0) = upper left
            corner of control, (1.0, 1.0) = lower right corner of control).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value's x or y is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.AlignmentX">
            <summary>
            Gets or sets the horizontal alignment of the label area.
            </summary>
            <remarks>
            Alignment is measured in relative units (0.0 = left, 0.5 = center,
            1.0 = right).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.AlignmentY">
            <summary>
            Gets the vertical alignment of the label area.
            </summary>
            <remarks>
            Alignment is measured in relative units (0.0 = top, 0.5 = center,
            1.0 = bottom).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelArea.Padding">
            <summary>
            Gets or sets the amount of extra space around the text.
            </summary>
            <remarks>
            Padding is measured in points.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Padding on any edge is less than zero or greater than 1584.
            </exception>
        </member>
        <member name="E:FarPoint.Win.Chart.LabelArea.Changed">
            <summary>
            Occurs when the label area is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>		
        </member>
        <member name="T:FarPoint.Win.Chart.LabelAreaCollection">
            <summary>
            Represents a collection of label areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.#ctor">
            <summary>
            Creates a new collection of label areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.#ctor(FarPoint.Win.Chart.LabelAreaCollection)">
            <summary>
            Creates a new collection of label areas that is a deep copy
            of the specified collection of label areas.
            </summary>
            <param name="collection">Collection of label areas to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.Count">
            <summary>
            Gets the number of label areas in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#LabelArea}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the label area at the specified index.
            </summary>
            <param name="index">Index of label area.</param>
            <returns>Label area.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the label area at the specified index.
            </summary>
            <param name="index">Index of label area.</param>
            <returns>Label area.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.Add(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Adds a label area to the collection.
            </summary>
            <param name="item">Label area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a label area to the collection.
            </summary>
            <param name="item">Label area.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.AddRange(FarPoint.Win.Chart.LabelArea[])">
            <summary>
            Adds an array of label areas to the collection.
            </summary>
            <param name="items">Array of label areas.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.Insert(System.Int32,FarPoint.Win.Chart.LabelArea)">
            <summary>
            Inserts a label area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Label area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a label area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Label area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.InsertRange(System.Int32,FarPoint.Win.Chart.LabelArea[])">
            <summary>
            Inserts an array of label areas into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of label areas.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB)
            or some item[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.Clear">
            <summary>
            Removes all label areas from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.Remove(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Removes a label area from the collection.
            </summary>
            <param name="item">Label area.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a label area from the collection.
            </summary>
            <param name="item">Label area.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a label area from the collection at the specified index.
            </summary>
            <param name="index">Index of label area.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.Contains(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Determines whether the collection contains a specific label area.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>true if label area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific label area.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>true if label area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.IndexOf(FarPoint.Win.Chart.LabelArea)">
            <summary>
            Determines the index of the label area in the collection.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>Index of the label area if label area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the label area in the collection.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>Index of the label area if label area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.CopyTo(FarPoint.Win.Chart.LabelArea[],System.Int32)">
            <summary>
            Copies the label areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the label areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the label areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the label areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.LabelAreaCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LabelAreaCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.LegendPos">
            <summary>
            Specifies the legend position.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendPos.Top">
            <summary>
            Specifies the top position.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendPos.Left">
            <summary>
            Specifies the left position.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendPos.Right">
            <summary>
            Specifies the right position.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendPos.Bottom">
            <summary>
            Specifies the bottom position.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LegendPos.TopRight">
            <summary>
            Specifies the top-right position.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.LegendArea">
            <summary>
            Represents a legend area in the chart.
            </summary>
            <remarks>
            The legend area can contain legend items, a background, and borders.
            The legend area is positioned using a relative location (where
            (0,0) = left upper corner of chart and (1,1) = right lower corner
            of chart) and a relative alignment (where (0,0) = left upper corner
            of label area and (1,1) = right lower corner of label area).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.#ctor">
            <summary>
            Creates a new legend area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.#ctor(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Creates a new legend area that is a deep copy of the specified
            legend area.
            </summary>
            <param name="legendArea">Legend area to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.Clone">
            <summary>
            Creates a deep copy of this legend area.
            </summary>
            <returns>A deep copy of this legend area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.LegendAreaId">
            <summary>
            Gets or sets the ID of the legend area.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Overlay">
            <summary>
            Gets or sets whether the legend area overlaps the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Location">
            <summary>
            Gets or sets the location of the legend area in the control
            canvas space.
            </summary>
            <remarks>
            Location is measured in relative units ((0,0) = left upper
            corner of control, (1,1) = right lower corner of control).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value's x or y is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.AlignmentX">
            <summary>
            Gets or sets the horizontal alignment of the legend area.
            </summary>
            <remarks>
            Alignment is measured in relative units (0.0 = left, 0.5 = center,
            1.0 = right).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.AlignmentY">
            <summary>
            Gets or sets the vertical alignment of the legend area.
            </summary>
            <remarks>
            Alignment is measured in relative units (0.0 = top, 0.5 = center,
            1.0 = bottom).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Padding">
            <summary>
            Gets or sets the amount of extra space around the text.
            </summary>
            <remarks>
            Padding is measured in points.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Padding on any edge is less than zero or greater than 1584.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.TextFont">
            <summary>
            Gets or sets the font of the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the font
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.TextFill">
            <summary>
            Gets or sets the fill of the text.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the fill
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Border">
            <summary>
            Gets or sets the border around the legend area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Fill">
            <summary>
            Gets or sets the fill for the background of the legend area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.Vertical">
            <summary>
            Gets or sets whether the legend items are layed out vertically
            or horizontally.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.ManualLayout">
            <summary>
             Gets or sets whether the legend items are manually placed.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendArea.LegendPos">
            <summary>
             Gets or sets the legend items position.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.LegendArea.Changed">
            <summary>
            Occurs when the legend area is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.LegendAreaCollection">
            <summary>
            Represents a collection of legend areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.#ctor">
            <summary>
            Creates a new collection of legend areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.#ctor(FarPoint.Win.Chart.LegendAreaCollection)">
            <summary>
            Creares a new collection of legend areas that is a deep copy
            of the specified collection of legend areas.
            </summary>
            <param name="collection">Collection of legend areas to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.Count">
            <summary>
            Gets the number of legend areas in the collection.
            </summary>
            
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#LegendArea}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the legend area at the specified index.
            </summary>
            <param name="index">Index of legend area.</param>
            <returns>Legend area.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the legend area at the specified index.
            </summary>
            <param name="index">Index of legend area.</param>
            <returns>Legend area.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.Add(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Adds a legend area to the collection.
            </summary>
            <param name="item">Legend area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a legend area to the collection.
            </summary>
            <param name="item">Legend area.</param>
            <returns>Index at which item was inserted</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.AddRange(FarPoint.Win.Chart.LegendArea[])">
            <summary>
            Adds an array of legend areas to the collection.
            </summary>
            <param name="items">Array of legend areas.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.Insert(System.Int32,FarPoint.Win.Chart.LegendArea)">
            <summary>
            Inserts a legend area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Legend area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a legend area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Legend area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.InsertRange(System.Int32,FarPoint.Win.Chart.LegendArea[])">
            <summary>
            Inserts an array of legend areas into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of legend areas.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.Clear">
            <summary>
            Removes all legend areas from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.Remove(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Removes a legend area from the collection.
            </summary>
            <param name="item">Legend area.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a legend area from the collection.
            </summary>
            <param name="item">Legend area.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.RemoveAt(System.Int32)">
            <summary>
            Remove a legend area from the collection at the specified index.
            </summary>
            <param name="index">Index of legend aea.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.Contains(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Determines whether the collection contains a specific legend area.
            </summary>
            <param name="item">Legend area to locate in collection.</param>
            <returns>true if legend area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific legend area.
            </summary>
            <param name="item">Legend area to locate in collection.</param>
            <returns>true if legend area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.IndexOf(FarPoint.Win.Chart.LegendArea)">
            <summary>
            Determines the index of the legend area in the collection.
            </summary>
            <param name="item">Legend area to locate in collection.</param>
            <returns>Index of the legend area if legend area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the legend area in the collection.
            </summary>
            <param name="item">Legend area to locate in collection.</param>
            <returns>Index of the legend area if legend area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.CopyTo(FarPoint.Win.Chart.LegendArea[],System.Int32)">
            <summary>
            Copies the legend areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the legend areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the legend areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the legend areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.LegendAreaCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LegendAreaCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartDesigntimeLicense">
            <summary>
            Represents a designtime license.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartDesigntimeLicense.#ctor(System.Type)">
            <summary>
            Creates a new designtime license.
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartDesigntimeLicense.Dispose">
            <summary>
            Frees up resources.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartDesigntimeLicense.LicenseKey">
            <summary>
            Gets a license key.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartRuntimeLicense">
            <summary>
            Represents a FarPoint Chart runtime license.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartRuntimeLicense.#ctor(System.Type)">
            <summary>
            Creates a new runtime license of the specified type.
            </summary>
            <param name="type">Type</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartRuntimeLicense.Dispose">
            <summary>
            Frees up resources.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartRuntimeLicense.LicenseKey">
            <summary>
            Gets the license key.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartSoftwareSecureLicenseProvider">
            <summary>
            Represents the license provider for Software Secure.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartSoftwareSecureLicenseProvider.#ctor">
            <summary>
            Creates a new license provider for Software Secure.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartSoftwareSecureLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)">
            <summary>
            Gets the licence.
            </summary>
            <param name="context">License context</param>
            <param name="type">Type</param>
            <param name="instance">Instance</param>
            <param name="allowExceptions">Whether to allow exceptions</param>
        </member>
        <member name="T:FarPoint.Win.Chart.Light">
            <summary>
            Represents the base class for light sources.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.#ctor">
            <summary>
            Creates a new light.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.#ctor(FarPoint.Win.Chart.Light)">
            <summary>
            Creates a new light that is a copy of the specified light.
            </summary>
            <param name="light">Light to copy.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.Light.AmbientColor">
            <summary>
            Gets or sets the ambient color of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Light.DiffuseColor">
            <summary>
            Gets or sets the diffuse color of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Light.SpecularColor">
            <summary>
            Gets or sets the specular color of the light.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Light.Changed">
            <summary>
            Occurs when the light is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.GetSchema">
            <summary>
            This method is reserved and should not be used. When implementing the IXmlSerializable interface, you should return null (Nothing in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute"/> to the class.
            </summary>
            <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema"/> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)"/> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)"/> method.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader">The <see cref="T:System.Xml.XmlReader"/> stream from which the object is deserialized.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Light.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.		
            </summary>
            <param name="writer">The <see cref="T:System.Xml.XmlWriter"/> stream to which the object is serialized.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.DirectionalLight">
            <summary>
            Represents a directional light source.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.#ctor">
            <summary>
            Creates a new light.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.#ctor(FarPoint.Win.Chart.DirectionalLight)">
            <summary>
            Creates a new light that is a copy of the specified light.
            </summary>
            <param name="light">Light to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.Clone">
            <summary>
            Creates a copy of this light.
            </summary>
            <returns>A copy of this light.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DirectionalLight.DirectionX">
            <summary>
            Gets or sets the x coordinate of the direction of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DirectionalLight.DirectionY">
            <summary>
            Gets or sets the y coordinate of the direction of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DirectionalLight.DirectionZ">
            <summary>
            Gets or sets the z coordinate of the direction of the light.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.DirectionalLight.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.PositionalLight">
            <summary>
            Represents a positional light source.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.#ctor">
            <summary>
            Creates a new light.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.#ctor(FarPoint.Win.Chart.PositionalLight)">
            <summary>
            Creates a new light that is a copy of the specified light.
            </summary>
            <param name="light">Light to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.Clone">
            <summary>
            Creates a copy of this light.
            </summary>
            <returns>A copy of this light.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PositionalLight.PositionX">
            <summary>
            Gets or sets the x coordinate of the position of the light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PositionalLight.PositionY">
            <summary>
            Gets or sets the y coordinate of the position of the light. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PositionalLight.PositionZ">
            <summary>
            Gets or sets the x coordinate of the position of the light.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PositionalLight.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Writes the XML.
            </summary>
            <param name="writer">The writer.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.LightCollection">
            <summary>
            Represents a collection of lights.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.#ctor">
            <summary>
            Creates a new instance of the LightCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.#ctor(FarPoint.Win.Chart.LightCollection)">
            <summary>
            Creates a new light collection that is a deep copy of the
            specified light collection.
            </summary>
            <param name="collection">Light collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.Count">
            <summary>
            Gets the number of lights in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Light}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.Item(System.Int32)">
            <summary>
            Gets or sets the light at the specified index.
            </summary>
            <param name="index">Index of the light.</param>
            <returns>Light.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.LightCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the light at the specified index.
            </summary>
            <param name="index">Index of light.</param>
            <returns>Light.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.Add(FarPoint.Win.Chart.Light)">
            <summary>
            Adds a light to the collection.
            </summary>
            <param name="item">Light to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a light to the collection.
            </summary>
            <param name="item">Light to add.</param>
            <returns>Index at which item was inserted</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.AddRange(FarPoint.Win.Chart.Light[])">
            <summary>
            Adds an array of lights to the collection.
            </summary>
            <param name="items">Array of lights to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] so a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.Insert(System.Int32,FarPoint.Win.Chart.Light)">
            <summary>
            Inserts a light into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Light.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a light into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Light.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Light[])">
            <summary>
            Inserts an array of lights into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of lights.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.Clear">
            <summary>
            Removes all lights from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.Remove(FarPoint.Win.Chart.Light)">
            <summary>
            Removes the specified light from the collection.
            </summary>
            <param name="item">Light to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified light from the collection.
            </summary>
            <param name="item">Light to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the light at the specified index.
            </summary>
            <param name="index">Index of light.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.Contains(FarPoint.Win.Chart.Light)">
            <summary>
            Determines whether the collection contains a specific light.
            </summary>
            <param name="item">Light to locate in collection.</param>
            <returns>true if light is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific light.
            </summary>
            <param name="item">Light to locate in collection.</param>
            <returns>true if light is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.IndexOf(FarPoint.Win.Chart.Light)">
            <summary>
            Determines the index of the light in the collection.
            </summary>
            <param name="item">Light to locate in collection.</param>
            <returns>Index of the light if light is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the light in the collection.
            </summary>
            <param name="item">Light to locate in collection.</param>
            <returns>Index of the light if light is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.CopyTo(FarPoint.Win.Chart.Light[],System.Int32)">
            <summary>
            Copies the lights in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the lights copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the lights in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the lights copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.LightCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LightCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Line">
            <summary>
            Represents the Base class for lines.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.Line.IsColorSet">
            <summary>
            Internal use only.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.NoLine">
            <summary>
            Represents a line that is transparent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.NoLine.#ctor">
            <summary>
            Creates a line that is transparent.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SolidLine">
            <summary>
            Represents a line that uses a single color.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SolidLine.#ctor(System.Drawing.Color)">
            <summary>
            Creates a line with the specified color.
            </summary>
            <param name="color">Color of the line.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SolidLine.#ctor(System.Drawing.Color,System.Single)">
            <summary>
            Creates a line with the specified color and width.
            </summary>
            <param name="color">Color of the line.</param>
            <param name="width">Widht of the line.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            width is less than or equal to zero or width is greater than 3.
            </exception>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.SolidLine.Color">
            <summary>
            Gets the color of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SolidLine.Width">
            <summary>
            Gets the width of the line.
            </summary>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.DashType">
            <summary>
            Specifies the dash type of the line. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.Dash">
            <summary>
            [0] Dash line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.DashDot">
            <summary>
            [1] Dash and dot line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.Dot">
            <summary>
            [2] Dot line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.LgDash">
            <summary>
            [3] Long dash line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.LgDashDot">
            <summary>
            [4] Long dash and dot line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.LgDashDotDot">
            <summary>
            [5] Long dash and dot dot line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.Solid">
            <summary>
            [6] Solid line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DashType.RoundDot">
            <summary>
            [7] Round dot line
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ArrowType">
            <summary>
            The line arrow type with a start and end.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.NoArrow">
            <summary>
            [0] No arrow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.Arrow">
            <summary>
            [1] Standard arrow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.OpenArrow">
            <summary>
            [2] Open arrow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.StealthArrow">
            <summary>
            [3] Stealth arrow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.DiamondArrow">
            <summary>
            [4] Diamond arrow
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ArrowType.OvalArrow">
            <summary>
            [5] Oval arrow
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.CompoundType">
            <summary>
            Specifies the compound line type that is to be used for lines with text such as underlines. 
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CompoundType.Simple">
            <summary>
            [0] Simple compound line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CompoundType.Double">
            <summary>
            [1] Double compound line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CompoundType.ThickThin">
            <summary>
            [2] Thick then thin compound line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CompoundType.ThinThick">
            <summary>
            [3] Thin then thick compound line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CompoundType.Triple">
            <summary>
            [4] Triple compound line
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.CapType">
            <summary>
            Specifies the ending caps that should be used for this line. Examples of cap types are rounded, flat, etc.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CapType.Square">
            <summary>
            [0] Square cap
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CapType.Round">
            <summary>
            [1] Round cap
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.CapType.Flat">
            <summary>
            [2] Flat cap
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.JoinType">
            <summary>
            Specifies the style used when two lines connect with each other.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.JoinType.Round">
            <summary>
            [0] Round connecting type
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.JoinType.Bevel">
            <summary>
            [1] Bevel connecting type
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.JoinType.Miter">
            <summary>
            [2] Miter connecting type
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.EnhancedSolidLine">
            <summary>
            Represents a line that uses a single color.
            </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.EnhancedSolidLine.#ctor(System.Drawing.Color,System.Single,FarPoint.Win.Chart.CompoundType,FarPoint.Win.Chart.DashType,FarPoint.Win.Chart.CapType,FarPoint.Win.Chart.JoinType,FarPoint.Win.Chart.ArrowType,FarPoint.Win.Chart.ArrowType,System.Int32,System.Int32)">
            <summary>
            Creates a line with the specified color and width.
            </summary>
            <param name="color">Color of the line.</param>
            <param name="width">Width of the line.</param>
            <param name="compoundType"></param>
            <param name="dashType">Dash type of the line</param>
            <param name="capType">Cap type of the line</param>
            <param name="joinType">Join type of the line</param>
            <param name="beginArrowType">Arrow type at start of the line</param>
            <param name="endArrowType">Arrow size at start of the line</param>
            <param name="beginArrowSize">Arrow type at end of the line</param>
            <param name="endArrowSize">Arrow size at end of the line</param>
             <exception cref="T:System.ArgumentOutOfRangeException">
            width is less than or equal to zero or width is greater than 3.
            </exception>
            <remarks>Width is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.BeginArrowSize">
            <summary>
            Gets the arrow size at the start of the line. The BeginArrowSize property ranges from 0 to 8.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.EndArrowSize">
            <summary>
            Gets the arrow size at the end of the line. The EndArowSize property ranges from 0 to 8.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.DashType">
            <summary>
            Gets the dash type of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.BeginArrowType">
            <summary>
            Gets the arrow type at the start of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.EndArrowType">
            <summary>
            Gets the arrow type at the end of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.CompoundType">
            <summary>
            Gets the compound type of the line. 
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.CapType">
            <summary>
            Gets the cap type of the line.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhancedSolidLine.JoinType">
            <summary>
            Gets the join type of the line.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.LineSeries">
            <summary>
            Represents a line series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Line borders and line fills
            can be assigned for the series or for a point in the series
            with null (Nothing in VB) indicating unsigned.  Line depth
            is measured relative to the floor grid cell (with values in the
            range 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.#ctor(FarPoint.Win.Chart.LineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.LineBorders">
            <summary>
            Gets the collection of line borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.LineFills">
            <summary>
            Gets the collection of line fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.LineBorder">
            <summary>
            Gets or sets the line border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.LineFill">
            <summary>
            Gets or sets the line fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.DropLinesLine">
            <summary>
            Gets or sets the line used to draw the drop lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than 5.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.SmoothedLine">
            <summary>
            Gets or sets whether the line is smoothed (not jagged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.DropLinesVisible">
            <summary>
            Gets or sets whether drop lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.values_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.lineBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.lineFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new LineSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.HistogramLine">
            <summary>
            The histogram line
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.#ctor(FarPoint.Win.Chart.HistogramLine)">
            <summary>
            
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.LegendAreaId">
            <summary>
            do not support API
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.Visible">
            <summary>
            Gets the Visible setting.
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.CategoryNames">
            <summary>
            Gets category names.
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.Values">
            <summary>
            Gets values.
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.SeriesNameDataSource">
            <summary>
            Gets the data source for the series name.
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.LineBorders">
            <summary>
            Line borders
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.LineFills">
            <summary>
            Line fills
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointBorders">
            <summary>
            Point borders
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointFills">
            <summary>
            Point fills
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointFill">
            <summary>
            Point fill
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointBorder">
            <summary>
            Point border
            </summary>
            <remarks>
            This property is deprecated
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointMarkers">
            <summary>
            Point markers
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.SeriesNameDataField">
            <summary>
            Gets or sets the field in the data source that stores the series name.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.SmoothedLine">
            <summary>
            Get the SmoothedLine.
            </summary>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.ReadXml(System.Xml.XmlReader)">
            <summary>
            Read information from the XML reader.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.Clone">
            <summary>
            Clone a new object
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new HistogramLine from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.HistogramLine.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="P:FarPoint.Win.Chart.HistogramLine.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.LineSeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.#ctor(FarPoint.Win.Chart.LineSeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#LineSeries}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.Add(FarPoint.Win.Chart.LineSeries)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.AddRange(FarPoint.Win.Chart.LineSeries[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.LineSeries)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.LineSeries[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.Remove(FarPoint.Win.Chart.LineSeries)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#IEnumerable{FarPoint#Win#Chart#Series}#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.Contains(FarPoint.Win.Chart.LineSeries)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.IndexOf(FarPoint.Win.Chart.LineSeries)">
            <summary>
            Determines the index of the label area in the collection.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>Index of the label area if label area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the label area in the collection.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>Index of the label area if label area is found in the collection; otherwise -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the label area in the collection.
            </summary>
            <param name="item">Label area to locate in collection.</param>
            <returns>Index of the label area if label area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.CopyTo(FarPoint.Win.Chart.LineSeries[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.LineSeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineSeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Marker">
            <summary>
            Represents the Base class for markers.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.NoMarker">
            <summary>
            Represents a marker that is transparent.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.NoMarker.#ctor">
            <summary>
            Creates a marker that is transparent.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.BuiltinMarker">
            <summary>
            Represents a built-in marker.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BuiltinMarker.#ctor(FarPoint.Win.Chart.MarkerShape,System.Single)">
            <summary>
            Creates a marker with the specified shape and size.
            </summary>
            <param name="shape">Shape of the marker.</param>
            <param name="size">Size of the marker.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            size is less than or equal to zero or size is greater than 72.
            </exception>
            <remarks>size is measured in points.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.BuiltinMarker.Shape">
            <summary>
            Gets the shape of the marker.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BuiltinMarker.Size">
            <summary>
            Gets the width of the marker.
            </summary>
            <remarks>Size is measured in points.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.MarkerShape">
            <summary>
            Specifies the shape of a data point in a point series chart.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Square">
            <summary>
            Displays a square
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Diamond">
            <summary>
            Displays a diamond
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Triangle">
            <summary>
            Displays a triangle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Circle">
            <summary>
            Displays a circle
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Plus">
            <summary>
            Displays a plus
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.X">
            <summary>
            Displays an X
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Star">
            <summary>
            Displays a star
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Dot">
            <summary>
            Displays a dot
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MarkerShape.Dash">
            <summary>
            Displays a dash
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.OpenHighLowCloseSeries">
            <summary>
            Represents an open-high-low-close series in a Y plot area.
            </summary>
            <remarks>
            Each point contains four values: open, high, low, and close.
            Attributes for the up and down lines can be assigned for the series
            or for a point in the series with null (Nothing in VB) indicating
            unassigned. Bar width is measured relative to the floor grid cell
            (with values in the range 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.#ctor(FarPoint.Win.Chart.OpenHighLowCloseSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.OpenValues">
            <summary>
            Gets the collection of open values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.HighValues">
            <summary>
            Gets the collection of high values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.LowValues">
            <summary>
            Gets the collection of low values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.CloseValues">
            <summary>
            Gets the collection of close values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.UpLines">
            <summary>
            Gets the collection of up lines for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.DownLines">
            <summary>
            Gets the collection of down lines for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.UpLine">
            <summary>
            Gets or sets the up line for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the up line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.DownLine">
            <summary>
            Gets or sets the down line for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the down line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the date point width
            (0 = no gap, 1 = gap and data point have the same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.LabelContainsOpenValue">
            <summary>
            Gets or sets whether the open value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.LabelContainsHighValue">
            <summary>
            Gets or sets whether the high value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.LabelContainsLowValue">
            <summary>
            Gets or sets whether the low value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.OpenHighLowCloseSeries.LabelContainsCloseValue">
            <summary>
            Gets or sets whether the close value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.openValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.highValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.lowValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.closeValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.upLines_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.downLines_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.OpenHighLowCloseSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PaddingF">
            <summary>
            Represents padding or margin information.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.#ctor(System.Single)">
            <summary>
            Creates a new instance of the PaddingF class using the same
            padding size for all edges.
            </summary>
            <param name="all">Padding size for all edges</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Creates a new instance of the PaddingF class using a separate
            padding size for each edge.
            </summary>
            <param name="left">Padding size for left edge</param>
            <param name="top">Padding size for top edge</param>
            <param name="right">Padding size for right edge</param>
            <param name="bottom">Padding size for bottom edge</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PaddingF.Left">
            <summary>
            Gets or sets the padding size for the left edge.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PaddingF.Top">
            <summary>
            Gets or sets the padding size for the top edge.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PaddingF.Right">
            <summary>
            Gets or sets the padding size for the right edge.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PaddingF.Bottom">
            <summary>
            Gets or sets the padding size for the bottom edge.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equivalent to the current padding.
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.GetHashCode">
            <summary>
            Generates a hash code for the current Padding object.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.op_Equality(FarPoint.Win.Chart.PaddingF,FarPoint.Win.Chart.PaddingF)">
            <summary>
            Determines whether two specified Padding objects are equivalent.
            </summary>
            <param name="p1">Padding to test</param>
            <param name="p2">Padding to test</param>
            <returns>true if the two Padding objects are equal; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PaddingF.op_Inequality(FarPoint.Win.Chart.PaddingF,FarPoint.Win.Chart.PaddingF)">
            <summary>
            Determines whether two specified Padding objects are not equivalent.
            </summary>
            <param name="p1">Padding to test</param>
            <param name="p2">Padding to test</param>
            <returns>true if two Padding objects are different; otherwise, false.</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.ParetoSeries">
            <summary>
            Represents a histogram series in a Y plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ParetoSeries.ParetoLine">
            <summary>
            Gets the bar object of the histogram series.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ParetoSeries.Data">
            <summary>
            Structure data of ParetoSeries
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.#ctor(FarPoint.Win.Chart.ParetoSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.AssignDataSource">
            <summary>
            Assign data source for child series of HistogramSeries
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.CalculateData">
            <summary>
            Calculate Data: CategoryName and Value for child serie
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.Line_Values_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event when the line value has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.Line_CategoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            Handles the Changed event when the line category has changed.
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new ParetoSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ParetoSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ParetoSeries.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="T:FarPoint.Win.Chart.PiePlotArea">
            <summary>
            Represents a pie plot area in a chart model.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.#ctor(FarPoint.Win.Chart.PiePlotArea)">
            <summary>
            Create a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PiePlotArea.StartAngle">
            <summary>
            Gets or sets the angle at which the first pie slice is displayed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 360.
            </exception>
            <remarks>
            Start angle is measured in degrees counter clockwise from the x-axis.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PiePlotArea.SweepAngle">
            <summary>
            Gets or sets the total angle of all the pie slices.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or is greater than 360.
            </exception>
            <remarks>
            Sweep angle is measured in degrees.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PiePlotArea.HoleSize">
            <summary>
            Gets or sets the size of the hole in the middle of the pie.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than or equal to one.
            </exception>
            <remarks>
            Hole size is measured relative to the pie radius (0 = no hole,
            1 = full pie radius).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PiePlotArea.Clockwise">
            <summary>
            Gets or sets whether pie slices are layed out clockwise or
            counter clockwise.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PiePlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PieSeries">
            <summary>
            Represents a pie series in a pie plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.#ctor(FarPoint.Win.Chart.PieSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.PieBorders">
            <summary>
            Gets the collection of pie borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.PieFills">
            <summary>
            Gets the collection of pie fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.PieDetachments">
            <summary>
            Gets the collection of pie detachments for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.BottomBevels">
            <summary>
            Gets the collection of bottom bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.TopBevels">
            <summary>
            Gets the collection of top bevels for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.PieBorder">
            <summary>
            Gets or sets the pie border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that pie border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.PieFill">
            <summary>
            Gets or sets the pie fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that pie fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.BottomBevel">
            <summary>
            Gets or sets the bottom bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.TopBevel">
            <summary>
            Gets or sets the top bevel.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.LabelContainsCategoryName">
            <summary>
            Gets or sets whether the category name is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PieSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.categoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.pieBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.pieFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.pieDetachments_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.bottomBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.topBevels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PieSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PlotArea">
            <summary>
            Represents the base class for plot areas.
            </summary>
            <remarks>
            The plot area is positioned using a relative location (where
            (0,0) = left upper corner of chart and (1,1) = right lower corner
            of chart) and a relative size (where (0,0) = zero size and
            (1,1) = size of chart). The plot area has rotation and elevation
            specified in degrees.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.VaryColorMultiSeries">
            <summary>
            Gets or sets whether the VaryColor property of the plot area is
            automatically generated.
            </summary>    
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.ManualLayout">
            <summary>
            Gets or sets whether the layout of the plot area is
            automatically generated.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.#ctor(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the
            specified plot area.
            </summary>
            <param name="plotArea"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Series">
            <summary>
            Gets the series collection for the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Lights">
            <summary>
            Gets the collection of lights for the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.GlobalAmbientLight">
            <summary>
            Gets or sets the color of the global ambient light.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Location">
            <summary>
            Gets or sets the location of the plot area in control canvas space.
            </summary>
            <remarks>
            Location is measured in relative units ((0,0) = left upper
            corner of control, (1,1) = right lower corner of control).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value's x or y is less than zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Size">
            <summary>
            Gets or sets the size of the plot area in control canvas space.
            </summary>
            <remarks>
            Size is measured in relative units ((0,0) = no size, (1,1) = size
            of control).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value's width or height is less than or equal to zero or greater than one.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Depth">
            <summary>
            Gets or sets the depth of the plot area.
            </summary>
            <remarks>
            Depth is measured relative to width of plot area
            (0 = no depth, 1 = depth and width are equal).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than or equal to zero or greater than 20.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Elevation">
            <summary>
            Gets of sets the counterclockwise rotation around the
            horizontal axis.
            </summary>
            <remarks>
            Elevation is measured in degrees.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than -90 or greater than 90.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Rotation">
            <summary>
            Gets of sets the counterclockwise rotation around the
            vertical axis.
            </summary>
            <remarks>
            Rotation is measured in degrees.
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than -180 or greater than 180.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotArea.Projection">
            <summary>
            Gets or sets the projection from 3D model space to 2D control
            canvas space.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.series_Changing(System.Object,FarPoint.Win.Chart.SeriesCollectionChangingEvent)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.lights_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.PlotArea.Changed">
            <summary>
            Occurs when the plot area is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.OnChanged(System.EventArgs)">
            <summary>
            Causes the Changed event to occur.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.ValidateAddNewSeries(FarPoint.Win.Chart.Series)">
            <summary>
            
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new PlotArea from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotArea.OnDeserialization(System.Object)">
            <summary>
            On deserialization binary data.
            </summary>
            <param name="sender"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PlotAreaCollection">
            <summary>
            Represents a collection of plot areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.#ctor">
            <summary>
            Creates a new collection of plot areas.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.#ctor(FarPoint.Win.Chart.PlotAreaCollection)">
            <summary>
            Creates a new collection of plot areas that is a deep copy of
            the specified collection of plot areas.
            </summary>
            <param name="collection">Collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.Count">
            <summary>
            Gets the number of plot areas in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#PlotArea}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.Item(System.Int32)">
            <summary>
            Gets or sets the plot area at the specified index.
            </summary>
            <param name="index">Index of plot area.</param>
            <returns>Plot area.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the plot area at the specified index.
            </summary>
            <param name="index">Index of plot area.</param>
            <returns>Plot area.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.Add(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Adds a plot area to the collection.
            </summary>
            <param name="item">Plot area</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a plot area to the collection.
            </summary>
            <param name="item">Plot area</param>
            <returns>Index at which item was inserted</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.AddRange(FarPoint.Win.Chart.PlotArea[])">
            <summary>
            Adds an array of plot areas to the collection.
            </summary>
            <param name="items">Array of plot areas</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
            <remarks>The function fires a list changed event with the old index the index at
            which to start adding, and the new index is the index of the last added element. </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.Insert(System.Int32,FarPoint.Win.Chart.PlotArea)">
            <summary>
            Inserts a plot area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Plot area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a plot area into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Plot area.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.InsertRange(System.Int32,FarPoint.Win.Chart.PlotArea[])">
            <summary>
            Inserts an array of plot areas into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of plot areas.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing is VB).
            </exception>
            <remarks>The function fires a list changed event with the old index the index at
            which to start adding, and the new index is the index of the last added element. </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.Clear">
            <summary>
            Removes all plot areas from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.Remove(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Removes a plot area from the collection.
            </summary>
            <param name="item">Plot area.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a plot area from the collection.
            </summary>
            <param name="item">Plot area.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a plot area from the collection at the specified index.
            </summary>
            <param name="index">Index of plot area.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.Contains(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Determines whether the collection contains a specific plot area.
            </summary>
            <param name="item">Plot area to locate in collection.</param>
            <returns>true if plot area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific plot area.
            </summary>
            <param name="item">Plot area to locate in collection.</param>
            <returns>true if plot area is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.IndexOf(FarPoint.Win.Chart.PlotArea)">
            <summary>
            Determines the index of the plot area in the collection.
            </summary>
            <param name="item">Plot area to locate in collection.</param>
            <returns>Index of the plot area if plot area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the plot area in the collection.
            </summary>
            <param name="item">Plot area to locate in collection.</param>
            <returns>Index of the plot area if plot area is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.CopyTo(FarPoint.Win.Chart.PlotArea[],System.Int32)">
            <summary>
            Copies the plot areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the plot areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the plot areas in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the plot areas copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.PlotAreaCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.PlotAreaCollection.ListChanged">
            <summary>
            Occurs when this list is changed, such as when an item in the list is added, inserted, deleted, or changed, 
            or when the list is cleared.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PlotAreaCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PointSeries">
            <summary>
            Represents a point series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value. Point borders, point fills,
            and point markers can be assigned for the series or for a point
            in the series with null (Nothing in VB) indicating unassigned.
            Point depth is measured relative to the floor grid cell (with values
            in the range 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.#ctor(FarPoint.Win.Chart.PointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.DropLinesLine">
            <summary>
            Gets or sets the line used to draw the drop lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than 5.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.DropLinesVisible">
            <summary>
            Gets or sets whether the drop lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PointSeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.#ctor(FarPoint.Win.Chart.PointSeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#PointSeries}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index"></param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.Add(FarPoint.Win.Chart.PointSeries)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.AddRange(FarPoint.Win.Chart.PointSeries[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.PointSeries)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.PointSeries[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.Remove(FarPoint.Win.Chart.PointSeries)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#IEnumerable{FarPoint#Win#Chart#Series}#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.Contains(FarPoint.Win.Chart.PointSeries)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.IndexOf(FarPoint.Win.Chart.PointSeries)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#IList{FarPoint#Win#Chart#Series}#IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.CopyTo(FarPoint.Win.Chart.PointSeries[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.PointSeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PointSeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarAngleAxis">
            <summary>
            Represents a numeric axis.
            </summary>
            <remarks>
            An axis can have a ruler line, major/minor tick marks, tick mark labels,
            major/minor grid lines, and stripes.  The minimum, maximum, and major/minor
            units of an axis can be automatically generated or manually assigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.#ctor(FarPoint.Win.Chart.PolarAngleAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.Clone">
            <summary>
            Creates a deep copy of this axis.
            </summary>
            <returns>A deep copy of this axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleTextFont">
            <summary>
            Gets or sets the font used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelTextFont">
            <summary>
            Gets or sets the font used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleVisible">
            <summary>
            Gets or sets whether the axis title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MajorGridVisible">
            <summary>
            Gets or sets whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the ruler is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for minor tick marks and
            minor grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MajorUnit">
            <summary>
            Gets or sets the interval for major tick marks and major grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MinorUnit">
            <summary>
            Gets or sets the interval for minor tick marks and minor grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelUnit">
            <summary>
            Gets or sets the interval for tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelOffset">
            <summary>
            Gets or sets the distance that the tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.RulerOffset">
            <summary>
            Gets or sets the distance the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MajorTickLength">
            <summary>
            Gets or sets the length of major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater that 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.MinorTickLength">
            <summary>
            Gets or sets the length of minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater that 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAngleAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAngleAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarAreaSeries">
            <summary>
            Represents an area series in a polar plot area.
            </summary>
            <remarks>
            Each point in the series contains two values: x (angle) and y (radius).
            Area borders and area fills can be assigned for the series or
            for a point with null (Nothing in VB) indicating unassigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.#ctor(FarPoint.Win.Chart.PolarAreaSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.AreaBorders">
            <summary>
            Gets the collection of area borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.AreaFills">
            <summary>
            Gets the collection of area fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.AreaBorder">
            <summary>
            Gets or sets the area border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.AreaFill">
            <summary>
            Gets or sets the area fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.CloseContour">
            <summary>
            Gets or sets whether the last point is connected to the first point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value in displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarAreaSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.areaBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.areaFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarAreaSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarLineSeries">
             <summary>
             Represents a line series in a polar plot area.
             </summary>
             <remarks>
             Each point contains two values: x (angle) and y (radius).  Line
             borders and line area fills can be assigned for the series
             or for a point in the series with null (Nothing in VB) indicating
             unassigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.#ctor(FarPoint.Win.Chart.PolarLineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LineBorders">
            <summary>
            Gets the collection of line borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LineFills">
            <summary>
            Gets the collection of line fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LineBorder">
            <summary>
            Gets or sets the line border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LineFill">
            <summary>
            Gets or sets the line fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.CloseContour">
            <summary>
            Gets or sets whether the last point is connected to the first point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarLineSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.lineBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.lineFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarLineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarPlotArea">
            <summary>
            Represents a polar plot area in a chart model.
            </summary>
            <remarks>
            The plot area has an x-axis, a y-axis, and a back wall.  The x-axis
            represents angle values. The y-axis represents radius values.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.#ctor">
            <summary>
            Creates a new plot area
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.#ctor(FarPoint.Win.Chart.PolarPlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPlotArea.XAxis">
            <summary>
            Gets the x-axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPlotArea.YAxes">
            <summary>
            Gets the collection of y axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPlotArea.StartAngle">
            <summary>
            Gets or sets the angle at which the origin is displayed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.xAxis_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.yAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.backWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarPointSeries">
            <summary>
            Represents a point series in a polar plot area.
            </summary>
            <remarks>
            Each point contains two values: x (angle) and y (radius).  Point
            borders and point fills can be assigned for the series or
            for a point in the series with null (Nothing in VB) indicating
            unassigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.#ctor(FarPoint.Win.Chart.PolarPointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Depth is measured relative to the depth of the plot area
            (0 = no depth, 1 = full depth of plot area).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarPointSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarPointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarRadiusAxis">
            <summary>
            Represents a numeric axis.
            </summary>
            <remarks>
            An axis can have a ruler line, major/minor tick marks, major tick
            mark labels, major/minor grid lines, and stripes.  The direction
            of the axis can be reversed.  The minimum, maximum, and major/minor
            units can be automatically generated or manually assigned.  The scale
            can be linear or logarithmic.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.#ctor(FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.Clone">
            <summary>
            Creates a deep copy of this axis.
            </summary>
            <returns>A deep copy of this axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AxisId">
            <summary>
            Gets or sets the ID of the axis.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleTextFont">
            <summary>
            Gets or sets the font used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelTextFont">
            <summary>
            Gets or sets the font used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleVisible">
            <summary>
            Gets or sets whether the title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MajorGridVisible">
            <summary>
            Gets or sets whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the axis is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AutoMinimum">
            <summary>
            Gets or sets whether the ruler minimum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AutoMaximum">
            <summary>
            Gets or sets whether the ruler maximum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for minor tick marks and
            minor grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Minimum">
            <summary>
            Gets or sets the ruler minimum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Maximum">
            <summary>
            Gets or sets the ruler maximum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MajorUnit">
            <summary>
            Gets or sets the interval for major tick marks and major grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MinorUnit">
            <summary>
            Gets or sets the interval for minor tick marks and minor grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelUnit">
            <summary>
            Gets or sets the interval from tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.DisplayUnits">
            <summary>
            Gets or sets the units in which labels are displayed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Logarithmic">
            <summary>
            Gets or sets whether the axis uses a linear or logarithmic scale.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LogarithmicBase">
            <summary>
            Gets or sets the logarithmic base.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than 2 or greater than 1000.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelOffset">
            <summary>
            Gets or sets the distance that tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.RulerOffset">
            <summary>
            Gets or sets the distance the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MajorTickLength">
            <summary>
            Gets or sets the length of major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.MinorTickLength">
            <summary>
            Gets or sets the length of minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxis.Stripes">
            <summary>
            Gets the collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.stripes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarRadiusAxisCollection">
            <summary>
            Represents a collection of axes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.#ctor">
            <summary>
            Creates a new axis collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.#ctor(FarPoint.Win.Chart.PolarRadiusAxisCollection)">
            <summary>
            Creates a new axis collection that is a deep copy of the
            specified axis collection.
            </summary>
            <param name="collection">Axis collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.Count">
            <summary>
            Gets the number of axes in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#PolarRadiusAxis}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns>Axis at specified location.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns>Axis at specified location.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.Add(FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.AddRange(FarPoint.Win.Chart.PolarRadiusAxis[])">
            <summary>
            Adds an array of axes to the collection.
            </summary>
            <param name="items">Array of axes to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.Insert(System.Int32,FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.InsertRange(System.Int32,FarPoint.Win.Chart.PolarRadiusAxis[])">
            <summary>
            Inserts an array axes into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of axes.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.Clear">
            <summary>
            Removes all axes from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.Remove(FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.Contains(FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.IndexOf(FarPoint.Win.Chart.PolarRadiusAxis)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.CopyTo(FarPoint.Win.Chart.PolarRadiusAxis[],System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.PolarRadiusAxisCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarRadiusAxisCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.PolarSeries">
            <summary>
            Represents a Base class for series in a polar plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarSeries.#ctor(FarPoint.Win.Chart.PolarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="P:FarPoint.Win.Chart.PolarSeries.YAxisId">
            <summary>
            Gets or sets the ID of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.PolarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Projection">
            <summary>
            Represents a projection of a 3D space onto a 2D plane.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Projection.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:FarPoint.Win.Chart.Projection"/> class.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ObliqueProjection">
            <summary>
            Represents an oblique projection of a 3D space onto a 2D plane.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ObliqueProjection.#ctor">
            <summary>
            Creates a new instance of the ObliqueProjection class.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.OrthogonalProjection">
            <summary>
            Represents an orthogonal projection of a 3D space onto a 2D plane.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Chart.OrthogonalProjection.#ctor">
            <summary>
            Creates a new instance of the OrthogonalProjection class.
            </summary>        
        </member>
        <member name="T:FarPoint.Win.Chart.PerspectiveProjection">
            <summary>
            Represents a perspective projection of a 3D space onto a 2D plane.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Chart.PerspectiveProjection.#ctor(System.Single)">
            <summary>
            Creates a new instance of the PerspectiveProjection class.
            </summary>
            <param name="perspectiveAngle">Field of view angle.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            perspectiveAngle is less than or equal to zero
            or persepectiveAngle is greater than 100.
            </exception>        
        </member>
        <member name="P:FarPoint.Win.Chart.PerspectiveProjection.PerspectiveAngle">
            <summary>
            Gets the field of view angle.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarAreaSeries">
            <summary>
            Represents an area series in a radar plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Area borders and area fills
            can be assigned for the series or for a point in the series with null
            (Nothing in VB) indicating unassigned.  Depth of the area is measured
            relative to the depth of floor grid cell (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.#ctor(FarPoint.Win.Chart.RadarAreaSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.AreaBorders">
            <summary>
            Gets the collection of area borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.AreaFills">
            <summary>
            Gets the collection of area fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.AreaBorder">
            <summary>
            Gets or sets the area border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.AreaFill">
            <summary>
            Gets or sets the area fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the area fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.CloseContour">
            <summary>
            Gets or sets whether the last point is connected to the first point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarAreaSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value in displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.areaBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.areaFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarAreaSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarIndexAxis">
            <summary>
            Represents an indexed axis.
            </summary>
            <remarks>
            An axis can have a ruler line, major/minor tick marks, tick mark
            labels, major/minor grid lines, and stripes.  The direction of an
            axis can be reversed.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.#ctor(FarPoint.Win.Chart.RadarIndexAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.Clone">
            <summary>
            Creates a deep copy of this axis.
            </summary>
            <returns>A deep copy of this axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.Title">
            <summary>
            Gets or sets the axis title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleTextFont">
            <summary>
            Gets or sets the font used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelTextFont">
            <summary>
            Gets or sets the font used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleVisible">
            <summary>
            Gets or sets whether the axis title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MajorGridVisible">
            <summary>
            Gets or sets whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the ruler is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for minor tick marks and
            minor grid lines is automactically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MajorUnit">
            <summary>
            Gets or sets the interval for major tick marks and major grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MinorUnit">
            <summary>
            Gets or sets the interval for minor tick marks and minor grid
            lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelUnit">
            <summary>
            Gets or sets the inerval for tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelOffset">
            <summary>
            Gets or sets the distance that tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.RulerOffset">
            <summary>
            Gets or sets the distance the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MajorTickLength">
            <summary>
            Gets or sets the length of major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.MinorTickLength">
            <summary>
            Gets or sets the length of minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarIndexAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.labels_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarIndexAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarLineSeries">
            <summary>
            Represents a line series in a radar plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Line borders and line fills
            can be assigned for the series or for a point in the series with
            null (Nothing in VB) indicating unassigned.  Depth of the line
            is measured relative to the depth of the plot area (with a range of
            0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.#ctor(FarPoint.Win.Chart.RadarLineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.LineBorders">
            <summary>
            Gets the collection of line borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.LineFills">
            <summary>
            Gets the collection of line fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.LineBorder">
            <summary>
            Gets or sets the line border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.LineFill">
            <summary>
            Gets or sets the line fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than 5.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.CloseContour">
            <summary>
            Gets or sets whether the last point is connected to the first point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarLineSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.values_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.categoryNames_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.lineBorders_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.lineFills_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.pointBorders_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.pointFills_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarLineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarPlotArea">
            <summary>
            Represents a radar plot area in a chart model.
            </summary>
            <remarks>
            The plot area has an x-axis, a y-axis, and a back wall.  The x-axis
            represent categories (around the edge of the plot area).  The y-axis
            represent values (along a radius of the plot area).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.#ctor(FarPoint.Win.Chart.RadarPlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPlotArea.XAxis">
            <summary>
            Gets the x-axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPlotArea.YAxes">
            <summary>
            Gets the collection of y axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.xAxis_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.yAxes_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.backWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarPointSeries">
            <summary>
            Represents a point series in a radar plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Point borders, point fills,
            and point markers can be assigned for the series or for a point
            in the series with null (Nothing in VB) indicating unassigned.
            Depth of the point is measured relative to the depth of the plot
            area (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.#ctor(FarPoint.Win.Chart.RadarPointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than one.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarPointSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value in displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarPointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarSeries">
            <summary>
            Represents the Base class for a series in a radar plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.#ctor(FarPoint.Win.Chart.RadarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarSeries.YAxisId">
            <summary>
            Gets or sets the Id of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarSeries.LabelContainsCategoryName">
            <summary>
            Gets or sets whether the category name is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.categoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarValueAxis">
            <summary>
            Represents a numeric axis.
            </summary>
            <remarks>
            An axis can have a title, a ruler line, major/minor tick marks,
            tick mark labels, major/minor grid lines, and stripes.  The direction
            of the axis can be reversed.  The minimum, maximum, and major/minor
            units can be automatically generated or manually assigned.  The scale
            can be linear or logarithmic.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.#ctor(FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.Clone">
            <summary>
            Creates a deep copy of the specified axis.
            </summary>
            <returns>A deep copy of the specified axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AxisId">
            <summary>
            Gets or sets the ID of the axis.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleTextFont">
            <summary>
            Gets or sets the font used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelTextFont">
            <summary>
            Gets or sets the font used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark label.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleVisible">
            <summary>
            Gets or sets whether the title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MajorGridVisible">
            <summary>
            Gets or sets whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the ruler is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AutoMinimum">
            <summary>
            Gets or sets whether the ruler minimum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AutoMaximum">
            <summary>
            Gets or sets whether the ruler maximum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for the major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for the minor tick marks and
            minor grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for the tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Minimum">
            <summary>
            Gets or sets the ruler minimum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Maximum">
            <summary>
            Gets ot sets the ruler maximum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MajorUnit">
            <summary>
            Gets or sets the interval for the major tick marks and the major
            grid lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MinorUnit">
            <summary>
            Gets or sets the interval for the minor tick marks and the minor
            grid lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelUnit">
            <summary>
            Gets or sets the interval for the tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.DisplayUnits">
            <summary>
            Gets or sets the units in which labels are displayed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Logarithmic">
            <summary>
            Gets or sets whether the axis uses a linear or logarithmic scale.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LogarithmicBase">
            <summary>
            Gets or sets the logarithmic base.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than 2 or greater than 1000.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.RulerOffset">
            <summary>
            Gets or sets the distance that the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelOffset">
            <summary>
            Gets or sets the distance that tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MajorTickLength">
            <summary>
            Gets or sets the length of major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.MinorTickLength">
            <summary>
            Gets or sets the length of minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxis.Stripes">
            <summary>
            Gets or sets the collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.stripes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.RadarValueAxisCollection">
            <summary>
            Represents a collection of axes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.#ctor">
            <summary>
            Creates a new axis collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.#ctor(FarPoint.Win.Chart.RadarValueAxisCollection)">
            <summary>
            Creates a new axis collection that is a deep copy of the
            specified axis collection.
            </summary>
            <param name="collection">Axis collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.Count">
            <summary>
            Specifies the number of axes in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#RadarValueAxis}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns>Axis at specified index.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns>Axis at specified index.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.Add(FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.AddRange(FarPoint.Win.Chart.RadarValueAxis[])">
            <summary>
            Adds an array of axes to the collection.
            </summary>
            <param name="items">Array of axes to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.Insert(System.Int32,FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.InsertRange(System.Int32,FarPoint.Win.Chart.RadarValueAxis[])">
            <summary>
            Inserts an array of axes into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="items">Array of axes.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.Clear">
            <summary>
            Removes all axes from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.Remove(FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.Contains(FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.IndexOf(FarPoint.Win.Chart.RadarValueAxis)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.CopyTo(FarPoint.Win.Chart.RadarValueAxis[],System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.RadarValueAxisCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.RadarValueAxisCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Series">
            <summary>
            Represents a Base class for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.#ctor(FarPoint.Win.Chart.Series)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.SeriesName">
            <summary>
            Gets or sets the name of the series.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.SeriesNameDataSource">
            <summary>
            Gets or sets the data source for the series name.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.SeriesNameDataField">
            <summary>
            Gets or sets the field in the data source that stores the series name.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.Visible">
            <summary>
            Gets or sets whether the series is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LegendAreaId">
            <summary>
            Gets or sets the ID of the legend on which the series is displayed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelVisible">
            <summary>
            Gets or sets whether the data labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelTextFont">
            <summary>
            Gets or sets the font of the text of the data labels.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the font
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelTextFill">
            <summary>
            Gets or sets the fill of the text of the data labels.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the fill
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelBorder">
            <summary>
            Gets or sets the border around the data labels.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the border
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelFill">
            <summary>
            Gets or sets the fill of the background of the data labels.
            </summary>
            <remarks>
            A value of null (Nothing in VB) indicates that the fill
            will be automatically determined.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelSeparator">
            <summary>
            Gets or sets the text used to separate the contents of a label.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.ValidateLabelRotation(System.Int32)">
            <summary>
            for check validate for new chart
            </summary>
            <param name="rotation"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.ValidateLabelTextDirection(FarPoint.Win.Chart.TextDirection)">
            <summary>
            for new chart
            </summary>
            <param name="rotation"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelContainsSeriesName">
            <summary>
            Gets or sets whether the series name is displayed in the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Series.Changed">
            <summary>
            Occurs when the series is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.Series.Validating">
            <summary>
            Occurs when the series is changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.OnValidating(System.EventArgs)">
            <summary>
            Raises the Validating event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="P:FarPoint.Win.Chart.Series.LabelFormatter">
            <summary>
            Gets or sets the label formatter object for the series labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.ReadXmlElement(System.Xml.XmlReader)">
            <summary>
            Reads the child XML element.
            </summary>
            <param name="reader">The reader.</param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new Series from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Series.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartTreeNode">
            <summary>
            The tree data structure for used for the charts.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.ChildNodes">
            <summary>
            Get or Set the child nodes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.Parent">
            <summary>
            Get or Set the parent node.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.ChildNodeIndex">
            <summary>
            Get the child index of the node.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.Value">
            <summary>
            Get value of the node.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.TotalValue">
            <summary>
            Returns the total value of the tree node including child nodes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.PointIndex">
            <summary>
            Get the point index of the node.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ChartTreeNode.Category">
            <summary>
            Get or Set category of the node.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.ChartTreeNode.OnChanged">
            <summary>
            Changed event of a node.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartTreeNode.#ctor">
            <summary>
            Initialize a new instance of ChartTreeNode.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ChartTreeNode.ResetTotalValue(System.Boolean)">
            <summary>
            Recalcuate total value.
            </summary>
            <param name="ignoreNonPositiveNode"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.IMatrixData">
            <summary>
            An interface that represents the data source that contains lists of ISegmentListData.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IMatrixData.ColumnCount">
            <summary>
             Gets the data column count.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IMatrixData.RowCount">
            <summary>
             Gets the data row count.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.IMatrixData.GetValue(System.Int32,System.Int32)">
            <summary>
            Gets the value.
            </summary>
            <param name="row">The row index</param>
            <param name="column">The column index</param>
            <returns></returns>
        </member>
        <member name="T:FarPoint.Win.Chart.SortType">
            <summary>
            
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.SortType.None">
            <summary>
            No sorting.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.SortType.Ascending">
            <summary>
            Ascending sort
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.SortType.Descending">
            <summary>
            Descending sort
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.TreeData">
            <summary>
            
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TreeData.truncateEmptyNodes">
            The truncation mode just accept the first empty node in the decensendant nodes of a node
            When a not empty node exist, all the empty nodes are ignored
            e.g: the behavior of TreeMap behavior for this case of data
            a1	b		  1
            a1	b	 c	2
            a2	b		  3
        </member>
        <member name="P:FarPoint.Win.Chart.TreeData.TreeLevel">
            <summary>
            
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreeData.Category">
            <summary>
            The categories collection of the tree.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreeData.Value">
            <summary>
            The value collection of the tree.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreeData.TreeNode">
            <summary>
            The root tree node.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreeData.Points">
            <summary>
            Gets the list of points.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeData.#ctor(FarPoint.Win.Chart.StringCollectionCollection,FarPoint.Win.Chart.DoubleCollection,FarPoint.Win.Chart.SortType,System.Boolean,System.Boolean)">
            <summary>
            Construct the tree data
            In V10E, used for TreeMap and Sunburst chart
            </summary>
            <param name="category"></param>
            <param name="value"></param>
            <param name="sortType"></param>
            <param name="ignoreNonPositiveNode"></param>
            <param name="truncateEmptyNodes"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeData.#ctor(FarPoint.Win.Chart.StringCollectionCollection,FarPoint.Win.Chart.DoubleCollection,FarPoint.Win.Chart.SortType,System.Boolean)">
            <summary>
            Construct the tree data
            </summary>
            <param name="category"></param>
            <param name="value"></param>
            <param name="sortType"></param>
            <param name="ignoreNonPositiveNode"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeData.#ctor(FarPoint.Win.Chart.TreeData)">
            <summary>
            Initialize a new instance of the TreeData form another instance.
            </summary>
            <param name="treeData"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeData.Clone">
            <summary>
            Clone a tree.
            </summary>
            <returns></returns>
        </member>
        <member name="E:FarPoint.Win.Chart.TreeData.Changed">
            <summary>
            Changed event of the tree.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreeData.OnChanged(System.EventArgs)">
            <summary>
            Raise changed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.ICompositeSeries">
            <summary>
            Marker interface that indicates that the series contains a collection
            of subseries.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ICompositeSeries.Series">
            <summary>
            Gets the series collection.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.ChartExLayout">
            <summary>
            The new chart types
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.boxWhisker">
            <summary>
            Box and whisker series
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.clusteredColumn">
            <summary>
            Clusered column series
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.paretoLine">
            <summary>
            Pareto line series
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.sunburst">
            <summary>
            Sunburst series.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.treemap">
            <summary>
            TreeMap series
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.waterfall">
            <summary>
            Waterfall series
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ChartExLayout.funnel">
            <summary>
            Funnel series.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.IMixSeries">
            <summary>
            The interface for a series composed by the different types of series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IMixSeries.Series">
            <summary>
            Gets the collection of series.
            This interface is the same as ICompositeSeries. There are several reasons why two similar interfaces are needed.
            Reason:
            1. ICompositeSeries is used for certain older charts (ClusteredBarSeries, StackedPointSeries, StackedAreaSeries, and so on.). It contains a list of the same type of series, and these series use different source data.
            2. IMixSeries is used for some new charts (for example: ParetoSeries). It contains a list of different types of series.
            IMixSeries is needed for new charts since the original charts use ICompositeSeries and it contains logic for adding many series with different sources. Many of the new charts have a series that is based on only one data source.
            For example: With the following data
                 Ser1  Ser2
            Cat1  1     3
            Cat2  2     2
            Cat3  3     1
            ICompositeSeries returns the series that contains a list of 2 series (series1 with data[1, 2, 3] and series2 with data[3, 2, 1]
            IMixSeries returns 2 series:
              1st series is a series that contains a series with different types and data is [1, 2, 3]
              2nd series is a series that contains a series with different types and data is [3, 2, 1]
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.IChartSeriesExSupport">
            <summary>
            Interface for support new chart series.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.IChartSeriesEx">
            <summary>
            Interface for new chart series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IChartSeriesEx.Layout">
            <summary>
            Get the layout of the new chart.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IChartSeriesEx.CategoryNames">
            <summary>
            Get categories collection of the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IChartSeriesEx.Values">
            <summary>
            Get value collection of the series.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.IDataSource">
            <summary>
            Interface for a bindable type.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.IDataSource.DataSource">
            <summary>
            The bound data source.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesEnumerator`1">
            <summary>
            Internal wrapper class which implements an enumerator for Series
            objects from a supplied enumerator for T objects.
            </summary>
            <typeparam name="T">Type of objects in the supplied enumerator.</typeparam>
        </member>
        <member name="T:FarPoint.Win.Chart.EnhanceDoubleCollection">
            <summary>
            Represents a collection of double values.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.DoubleCollection">
            <summary>
            Represents a collection of double values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.#ctor">
            <summary>
            Creates a new collection of double values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.#ctor(FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Creates a new collection of double values that is a copy of
            the specified collection of double values.
            </summary>
            <param name="collection">Collection of copied values.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.DataSource">
            <summary>
            Gets or sets the data source for the double values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.DataField">
            <summary>
            Gets or sets the field in the data source that supplies the double values.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.Count">
            <summary>
            Gets the number of double values in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#Generic#ICollection{System#Double}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.Item(System.Int32)">
            <summary>
            Gets or sets the double value at the specified index.
            </summary>
            <param name="index">Index of the double value.</param>
            <returns>Double value.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the double value at the specified index.
            </summary>
            <param name="index">Index of double value.</param>
            <returns>Double value.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Add(System.Double)">
            <summary>
            Adds a double value to the collection.
            </summary>
            <param name="item">Double value</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a double value to the collection.
            </summary>
            <param name="item">Double value</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.AddRange(System.Double[])">
            <summary>
            Adds an array of double values to the collection.
            </summary>
            <param name="items">Array of double values</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Insert(System.Int32,System.Double)">
            <summary>
            Inserts a double value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Double value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a double value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Double value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.InsertRange(System.Int32,System.Double[])">
            <summary>
            Inserts an array of double values into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of double values.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Clear">
            <summary>
            Removes all double values from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Remove(System.Double)">
            <summary>
            Removes a double value from the collection.
            </summary>
            <param name="item">Double value.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a double value from the collection.
            </summary>
            <param name="item">Double value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a double value from the collection at the specified index.
            </summary>
            <param name="index">Index of double value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.Contains(System.Double)">
            <summary>
            Determines whether the collection contains a specific double value.
            </summary>
            <param name="item">Double value to locate in collection.</param>
            <returns>true if double value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific double value.
            </summary>
            <param name="item">Double value to locate in collection.</param>
            <returns>true if double value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.IndexOf(System.Double)">
            <summary>
            Determines the index of the double value in the collection.
            </summary>
            <param name="item">Double value to locate in collection.</param>
            <returns>Index of the double value if double value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the double value in the collection.
            </summary>
            <param name="item">Double value to locate in collection.</param>
            <returns>Index of the double value if double value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.CopyTo(System.Double[],System.Int32)">
            <summary>
            Copies the double values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the double values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the double values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the double values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.DoubleCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.EnhanceStringCollection">
            <summary>
            Represents a collection of string values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.EnhanceStringCollection.Item(System.Int32)">
            <summary>
            Gets or sets the string value at the specified index.
            </summary>
            <param name="index">Index of the string value.</param>
            <returns>String value.</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.IndexItemSource">
            <summary>
            Represents index item source will ge get.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.StringCollection">
            <summary>
            Represents a collection of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.#ctor">
            <summary>
            Creates a new collection of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.#ctor(FarPoint.Win.Chart.StringCollection)">
            <summary>
            Creates a new collection of string values that is a copy of
            the specified collection of string values.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.DataSource">
            <summary>
            Gets or sets the data source for the string values.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.DataField">
            <summary>
            Gets or sets the field in the data source that supplies the string values.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.Count">
            <summary>
            Gets the number of string values in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#Generic#ICollection{System#String}#IsReadOnly">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.Item(System.Int32)">
            <summary>
            Gets or sets the string value at the specified index.
            </summary>
            <param name="index">Index of the string value.</param>
            <returns>String value.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the string value at the specified index.
            </summary>
            <param name="index">Index of string value.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Add(System.String)">
            <summary>
            Adds a string value to the collection.
            </summary>
            <param name="item">String value</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a string value to the collection.
            </summary>
            <param name="item">String value.</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.AddRange(System.String[])">
            <summary>
            Adds an array of string values to the collection.
            </summary>
            <param name="items">Array of string values</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a string value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.InsertRange(System.Int32,System.String[])">
            <summary>
            Inserts an array of string values into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of string values.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Clear">
            <summary>
            Removes all string values from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Remove(System.String)">
            <summary>
            Removes a string value from the collection.
            </summary>
            <param name="item">String value.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a string value from the collection.
            </summary>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a string value from the collection at the specified index.
            </summary>
            <param name="index">Index of string value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.Contains(System.String)">
            <summary>
            Determines whether the collection contains a specific string value.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>true if string value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific string value.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>true if string value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.IndexOf(System.String)">
            <summary>
            Determines the index of the string value in the collection.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>Index of the string value if string value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the string value in the collection.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>Index of the string value if string value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the string values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the string values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the string values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the string values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.StringCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.DetachmentCollection">
            <summary>
            Represents a collection of Single values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.#ctor">
            <summary>
            Creates a new collection of Single values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.#ctor(FarPoint.Win.Chart.DetachmentCollection)">
            <summary>
            Creates a new collection of Single values that is a copy of
            the specified collection of Single values.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.Count">
            <summary>
            Gets the number of Single values in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#Generic#ICollection{System#Single}#IsReadOnly">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.Item(System.Int32)">
            <summary>
            Gets or sets the Single value at the specified index.
            </summary>
            <param name="index">Index of the Single value.</param>
            <returns>Single value.</returns>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 4.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the Single value at the specified index.
            </summary>
            <param name="index">Index of Single value.</param>
            <returns>Single value.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Add(System.Single)">
            <summary>
            Adds a Single value to the collection.
            </summary>
            <param name="item">Single value</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            item is less than zero or is greater than 4.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a Single value to the collection.
            </summary>
            <param name="item">Single value.</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.AddRange(System.Single[])">
            <summary>
            Adds an array of Single values to the collection.
            </summary>
            <param name="items">Array of Single values</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            some value in items is less than zero or is greater than 4.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Insert(System.Int32,System.Single)">
            <summary>
            Inserts a Single value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Single value.</param>
            <exception cref="T:System.ArgumentOutOfRangeException">
            item is less than zero or is greater than 4.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a Single value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Single value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.InsertRange(System.Int32,System.Single[])">
            <summary>
            Inserts an array of Single values into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of Single values.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            some value in items is less than zero or is greater than 4.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Clear">
            <summary>
            Removes all Single values from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Remove(System.Single)">
            <summary>
            Removes a Single value from the collection.
            </summary>
            <param name="item">Single value.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a Single value from the collection.
            </summary>
            <param name="item">Single value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a Single value from the collection at the specified index.
            </summary>
            <param name="index">Index of Single value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.Contains(System.Single)">
            <summary>
            Determines whether the collection contains a specific Single value.
            </summary>
            <param name="item">Single value to locate in collection.</param>
            <returns>true if Single value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific Single value.
            </summary>
            <param name="item">Single value to locate in collection.</param>
            <returns>true if Single value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.IndexOf(System.Single)">
            <summary>
            Determines the index of the Single value in the collection.
            </summary>
            <param name="item">Single value to locate in collection.</param>
            <returns>Index of the Single value if Single value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the Single value in the collection.
            </summary>
            <param name="item">Single value to locate in collection.</param>
            <returns>Index of the Single value if Single value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.CopyTo(System.Single[],System.Int32)">
            <summary>
            Copies the Single values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the Single values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the Single values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the Single values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.DetachmentCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DetachmentCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.LineCollection">
            <summary>
            Represents a collection of lines.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.#ctor">
            <summary>
            Creates a new collection of lines.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.#ctor(FarPoint.Win.Chart.LineCollection)">
            <summary>
            Creates a new collection of lines that is a copy of
            the specified collection of lines.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.Count">
            <summary>
            Gets the number of lines in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Line}#IsReadOnly">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.Item(System.Int32)">
            <summary>
            Gets or sets the line at the specified index.
            </summary>
            <param name="index">Index of the line.</param>
            <returns>Line.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.SetLine(System.Int32,FarPoint.Win.Chart.Line)">
            <summary>
            Gets or sets the line at the specified index.
            </summary>
            <param name="index">Index of line.</param>
            <param name="line">Line.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.LineCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the line at the specified index.
            </summary>
            <param name="index">Index of line.</param>
            <returns>Line.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Add(FarPoint.Win.Chart.Line)">
            <summary>
            Adds a line to the collection.
            </summary>
            <param name="item">Line</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a line to the collection.
            </summary>
            <param name="item">Line.</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.AddRange(FarPoint.Win.Chart.Line[])">
            <summary>
            Adds an array of lines to the collection.
            </summary>
            <param name="items">Array of lines</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Insert(System.Int32,FarPoint.Win.Chart.Line)">
            <summary>
            Inserts a line into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Line.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a line into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Line.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Line[])">
            <summary>
            Inserts an array of lines into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of lines.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Clear">
            <summary>
            Removes all lines from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Remove(FarPoint.Win.Chart.Line)">
            <summary>
            Removes a line from the collection.
            </summary>
            <param name="item">Line.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a line from the collection.
            </summary>
            <param name="item">Line.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a line from the collection at the specified index.
            </summary>
            <param name="index">Index of line.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.Contains(FarPoint.Win.Chart.Line)">
            <summary>
            Determines whether the collection contains a specific line.
            </summary>
            <param name="item">Line to locate in collection.</param>
            <returns>true if line is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific line.
            </summary>
            <param name="item">Line to locate in collection.</param>
            <returns>true if line is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.IndexOf(FarPoint.Win.Chart.Line)">
            <summary>
            Determines the index of the line in the collection.
            </summary>
            <param name="item">Line to locate in collection.</param>
            <returns>Index of the line if line is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the line in the collection.
            </summary>
            <param name="item">Line to locate in collection.</param>
            <returns>Index of the line if line is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.CopyTo(FarPoint.Win.Chart.Line[],System.Int32)">
            <summary>
            Copies the lines in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the lines copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the lines in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the lines copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.LineCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.LineCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.FillCollection">
            <summary>
            Represents a collection of fills.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.#ctor">
            <summary>
            Creates a new collection of fills.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.#ctor(FarPoint.Win.Chart.FillCollection)">
            <summary>
            Creates a new collection of fills that is a copy of
            the specified collection of fills.
            </summary>
            <param name="collection">Collecttion to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.Count">
            <summary>
            Gets the number of fills in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Fill}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.Item(System.Int32)">
            <summary>
            Gets or sets the fill at the specified index.
            </summary>
            <param name="index">Index of the fill.</param>
            <returns>Fill.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.SetFill(System.Int32,FarPoint.Win.Chart.Fill)">
            <summary>
            Gets or sets the fill at the specified index.
            </summary>
            <param name="index">Index of fill.</param>
            <param name="fill">Fill.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.FillCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the fill at the specified index.
            </summary>
            <param name="index">Index of fill.</param>
            <returns>Fill.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Add(FarPoint.Win.Chart.Fill)">
            <summary>
            Adds a fill to the collection.
            </summary>
            <param name="item">Fill</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a fill to the collection.
            </summary>
            <param name="item">Fill</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.AddRange(FarPoint.Win.Chart.Fill[])">
            <summary>
            Adds an array of fills to the collection.
            </summary>
            <param name="items">Array of fills</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Insert(System.Int32,FarPoint.Win.Chart.Fill)">
            <summary>
            Inserts a fill into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Fill.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a fill into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Fill.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Fill[])">
            <summary>
            Inserts an array of fills into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of fills.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Clear">
            <summary>
            Removes all fills from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Remove(FarPoint.Win.Chart.Fill)">
            <summary>
            Removes a fill from the collection.
            </summary>
            <param name="item">Fill.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a fill from the collection.
            </summary>
            <param name="item">Fill.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a fill from the collection at the specified index.
            </summary>
            <param name="index">Index of fill.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.Contains(FarPoint.Win.Chart.Fill)">
            <summary>
            Determines whether the collection contains a specific fill.
            </summary>
            <param name="item">Fill to locate in collection.</param>
            <returns>true if fill is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific fill.
            </summary>
            <param name="item">Fill to locate in collection.</param>
            <returns>true if fill is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.IndexOf(FarPoint.Win.Chart.Fill)">
            <summary>
            Determines the index of the fill in the collection.
            </summary>
            <param name="item">Fill to locate in collection.</param>
            <returns>Index of the fill if fill is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the fill in the collection.
            </summary>
            <param name="item">Fill to locate in collection.</param>
            <returns>Index of the fill if fill is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.CopyTo(FarPoint.Win.Chart.Fill[],System.Int32)">
            <summary>
            Copies the fills in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the fills copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the fills in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the fills copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.FillCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.FillCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.BevelCollection">
            <summary>
            Represents a collection of bevels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.#ctor">
            <summary>
            Creates a new collection of bevels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.#ctor(FarPoint.Win.Chart.BevelCollection)">
            <summary>
            Creates a new collection of bevels that is a copy of
            the specified collection of bevels.
            </summary>
            <param name="collection">Collecttion of copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.Count">
            <summary>
            Gets the number of bevels in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Bevel}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.Item(System.Int32)">
            <summary>
            Gets or sets the bevel at the specified index.
            </summary>
            <param name="index">Index of the bevel.</param>
            <returns>Bevel.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.SetBevel(System.Int32,FarPoint.Win.Chart.Bevel)">
            <summary>
            Sets the bevel at the specified index.
            </summary>
            <param name="index">Index of bevel.</param>
            <param name="bevel">Bevel.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the bevel at the specified index.
            </summary>
            <param name="index">Index of bevel.</param>
            <returns>Bevel.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Add(FarPoint.Win.Chart.Bevel)">
            <summary>
            Adds a bevel to the collection.
            </summary>
            <param name="item">Bevel</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a bevel to the collection.
            </summary>
            <param name="item">Bevel</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.AddRange(FarPoint.Win.Chart.Bevel[])">
            <summary>
            Adds an array of bevels to the collection.
            </summary>
            <param name="items">Array of bevels</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Insert(System.Int32,FarPoint.Win.Chart.Bevel)">
            <summary>
            Inserts a bevel into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Bevel.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a bevel into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Bevel.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Bevel[])">
            <summary>
            Inserts an array of bevels into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of bevels.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Clear">
            <summary>
            Removes all bevels from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Remove(FarPoint.Win.Chart.Bevel)">
            <summary>
            Removes a bevel from the collection.
            </summary>
            <param name="item">Bevel.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a bevel from the collection.
            </summary>
            <param name="item">Bevel.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a bevel from the collection at the specified index.
            </summary>
            <param name="index">Index of bevel.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.Contains(FarPoint.Win.Chart.Bevel)">
            <summary>
            Determines whether the collection contains a specific bevel.
            </summary>
            <param name="item">Bevel to locate in collection.</param>
            <returns>true if bevel is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific bevel.
            </summary>
            <param name="item">Bevel to locate in collection.</param>
            <returns>true if bevel is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.IndexOf(FarPoint.Win.Chart.Bevel)">
            <summary>
            Determines the index of the bevel in the collection.
            </summary>
            <param name="item">Bevel to locate in collection.</param>
            <returns>Index of the bevel if bevel is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the bevel in the collection.
            </summary>
            <param name="item">Bevel to locate in collection.</param>
            <returns>Index of the bevel if bevel is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.CopyTo(FarPoint.Win.Chart.Bevel[],System.Int32)">
            <summary>
            Copies the bevels in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the fills copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the bevels in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the bevels copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.BevelCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.BevelCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.MarkerCollection">
            <summary>
            Represents a collection of markers.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.#ctor">
            <summary>
            Creates a new collection of markers.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.#ctor(FarPoint.Win.Chart.MarkerCollection)">
            <summary>
            Creates a new collection of markers that is a copy of
            the specified collection of markers.
            </summary>
            <param name="collection">Collecttion of copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.Count">
            <summary>
            Gets the number of markers in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Marker}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.Item(System.Int32)">
            <summary>
            Gets or sets the marker at the specified index.
            </summary>
            <param name="index">Index of the marker.</param>
            <returns>Marker.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.SetMarker(System.Int32,FarPoint.Win.Chart.Marker)">
            <summary>
            Gets or sets the marker at the specified index.
            </summary>
            <param name="index">Index of marker.</param>
            <param name="marker">Marker.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the marker at the specified index.
            </summary>
            <param name="index">Index of marker.</param>
            <returns>Marker.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Add(FarPoint.Win.Chart.Marker)">
            <summary>
            Adds a marker to the collection.
            </summary>
            <param name="item">Marker</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a marker to the collection.
            </summary>
            <param name="item">Marker</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.AddRange(FarPoint.Win.Chart.Marker[])">
            <summary>
            Adds an array of markers to the collection.
            </summary>
            <param name="items">Array of markers</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Insert(System.Int32,FarPoint.Win.Chart.Marker)">
            <summary>
            Inserts a marker into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Marker.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a marker into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Marker.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Marker[])">
            <summary>
            Inserts an array of markers into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of markers.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Clear">
            <summary>
            Removes all markers from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Remove(FarPoint.Win.Chart.Marker)">
            <summary>
            Removes a marker from the collection.
            </summary>
            <param name="item">Marker.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a marker from the collection.
            </summary>
            <param name="item">Marker.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a marker from the collection at the specified index.
            </summary>
            <param name="index">Index of marker.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.Contains(FarPoint.Win.Chart.Marker)">
            <summary>
            Determines whether the collection contains a specific marker.
            </summary>
            <param name="item">Marker to locate in collection.</param>
            <returns>true if marker is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific marker.
            </summary>
            <param name="item">Marker to locate in collection.</param>
            <returns>true if marker is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.IndexOf(FarPoint.Win.Chart.Marker)">
            <summary>
            Determines the index of the marker in the collection.
            </summary>
            <param name="item">Marker to locate in collection.</param>
            <returns>Index of the marker if marker is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the marker in the collection.
            </summary>
            <param name="item">Marker to locate in collection.</param>
            <returns>Index of the marker if marker is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.CopyTo(FarPoint.Win.Chart.Marker[],System.Int32)">
            <summary>
            Copies the markers in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the markers copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the markers in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the markers copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.MarkerCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MarkerCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.DoubleCollectionTypeDescriptionProvider">
            <summary>
            Represents a DoubleCollectionTypeDescriptionProvider object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionTypeDescriptionProvider.#ctor">
            <summary>
            Initializes a new instance of the DoubleCollectionTypeDescriptionProvider class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionTypeDescriptionProvider.GetTypeDescriptor(System.Type,System.Object)">
            <summary>
            Gets a DoubleCollection type descriptor for the given type and object.
            </summary>
            <param name="objectType">The type of object for which to retrieve the type descriptor.</param>
            <param name="instance">An instance of the type. Can be null if no instance was passed to the System.ComponentModel.TypeDescriptor.</param>
            <returns>An System.ComponentModel.ICustomTypeDescriptor that can provide metadata for the type.</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.DoubleCollectionCustomTypeDescriptor">
            <summary>
            Represents a CustomTypeDescriptor object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCustomTypeDescriptor.#ctor(System.ComponentModel.ICustomTypeDescriptor,System.Object)">
            <summary>
            Initializes a new instance of the DoubleCollectionCustomTypeDescriptor class.
            </summary>
            <param name="parent">The parent custom type descriptor.</param>
            <param name="instance">DoubleCollection instance.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCustomTypeDescriptor.GetProperties">
            <summary>
            Returns a collection of property descriptors for the object represented by this type descriptor.
            </summary>
            <returns>A collection of property descriptors.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCustomTypeDescriptor.GetProperties(System.Attribute[])">
            <summary>
            Returns a collection of property descriptors for the object represented by this type descriptor.
            </summary>
            <param name="attributes">An array of attributes to use as a filter. This can be null.</param>
            <returns>A collection of property descriptors.</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor">
            <summary>
            Represents a DoubleCollectionPropertyDescriptor object.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.#ctor">
            <summary>
            Initializes a new instance of the DoubleCollectionPropertyDescriptor class.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.DesignTimeOnly">
            <summary>
            Gets whether this member should be set only at design time.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.CanResetValue(System.Object)">
            <summary>
             Returns whether resetting an object changes its value.
            </summary>
            <param name="component">The component to test for reset capability.</param>
            <returns>True if resetting the component changes its value; otherwise, false.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.ComponentType">
            <summary>
            Gets the type of the component this property is bound to.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.GetValue(System.Object)">
            <summary>
            Gets the current value of the property on a component.
            </summary>
            <param name="component">The component with the property for which to retrieve the value.</param>
            <returns>The value of a property for a given component.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.IsReadOnly">
            <summary>
            Gets whether this property is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.PropertyType">
            <summary>
            Gets the type of the property.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.ResetValue(System.Object)">
            <summary>
            Resets the value for this property of the component to the default value.
            </summary>
            <param name="component">The component with the property value that is to be reset to the default value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.SetValue(System.Object,System.Object)">
            <summary>
            Sets the value of the component to a different value.
            </summary>
            <param name="component">The component with the property value that is to be set.</param>
            <param name="value">The new value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionPropertyDescriptor.ShouldSerializeValue(System.Object)">
            <summary>
            Determines whether the value of this property needs to be persisted.
            </summary>
            <param name="component">The component with the property to be examined for persistence.</param>
            <returns>True if the property should be persisted; otherwise, false.</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.DoubleCollectionCollection">
            <summary>
            Represents a collection of collections of double values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.#ctor">
            <summary>
            Creates a new collection of collections.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.#ctor(FarPoint.Win.Chart.DoubleCollectionCollection)">
            <summary>
            Creates a new collection that is a copy of
            the specified collection.
            </summary>
            <param name="collection">Collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.Count">
            <summary>
            Gets the number of items in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#DoubleCollection}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>Item.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Index of item.</param>
            <returns>Item.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.Add(FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">Item</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">Item</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.AddRange(FarPoint.Win.Chart.DoubleCollection[])">
            <summary>
            Adds an array of items to the collection.
            </summary>
            <param name="items">Array of items</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.Insert(System.Int32,FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.InsertRange(System.Int32,FarPoint.Win.Chart.DoubleCollection[])">
            <summary>
            Inserts an array of items into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of items.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.Remove(FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">Item.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection at the specified index.
            </summary>
            <param name="index">Index of item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.Contains(FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Determines whether the collection contains a specific item.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific item.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.IndexOf(FarPoint.Win.Chart.DoubleCollection)">
            <summary>
            Determines the index of the item in the collection.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>Index of the item if item is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the item in the collection.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>Index of the item if item is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.CopyTo(FarPoint.Win.Chart.DoubleCollection[],System.Int32)">
            <summary>
            Copies the items in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the items copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the items in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the items copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.DoubleCollectionCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DoubleCollectionCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.StringCollectionItem">
            <summary>
            Represent a collection of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.#ctor">
            <summary>
            Creates a new collection of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.#ctor(FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Creates a new collection of string values that is a copy of
            the specified collection of string values.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Clone">
            <summary>
            Creates a new collection that is a copy of this collection.
            </summary>
            <returns>New collection that is a copy of this collection.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.Count">
            <summary>
            Gets the number of string values in the collecion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#Generic#ICollection{System#String}#IsReadOnly">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.Item(System.Int32)">
            <summary>
            Gets or sets the string value at the specified index.
            </summary>
            <param name="index">Index of the string value.</param>
            <returns>String value.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the string value at the specified index.
            </summary>
            <param name="index">Index of string value.</param>
            <returns>String value.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Add(System.String)">
            <summary>
            Adds a string value to the collection.
            </summary>
            <param name="item">String value</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a string value to the collection.
            </summary>
            <param name="item">String value.</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.AddRange(System.String[])">
            <summary>
            Adds an array of string values to the collection.
            </summary>
            <param name="items">Array of string values</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Insert(System.Int32,System.String)">
            <summary>
            Inserts a string value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a string value into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.InsertRange(System.Int32,System.String[])">
            <summary>
            Inserts an array of string values into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of string values.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Clear">
            <summary>
            Removes all string values from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Remove(System.String)">
            <summary>
            Removes a string value from the collection.
            </summary>
            <param name="item">String value.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes a string value from the collection.
            </summary>
            <param name="item">String value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.RemoveAt(System.Int32)">
            <summary>
            Removes a string value from the collection at the specified index.
            </summary>
            <param name="index">Index of string value.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.Contains(System.String)">
            <summary>
            Determines whether the collection contains a specific string value.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>true if string value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific string value.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>true if string value is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.IndexOf(System.String)">
            <summary>
            Determines the index of the string value in the collection.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>Index of the string value if string value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the string value in the collection.
            </summary>
            <param name="item">String value to locate in collection.</param>
            <returns>Index of the string value if string value is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the string values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the string values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the string values in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the string values copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.StringCollectionItem.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionItem.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="T:FarPoint.Win.Chart.StringCollectionCollection">
            <summary>
            Represents a collection of collections of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.#ctor">
            <summary>
            Creates a new collection of collections.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.#ctor(FarPoint.Win.Chart.StringCollectionCollection)">
            <summary>
            Creates a new collection that is a copy of
            the specified collection.
            </summary>
            <param name="collection">Collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.DataSource">
            <summary>
            Gets or sets the data source for the collection of collections of string values.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.Count">
            <summary>
            Gets the number of items in the collecion.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.MaxColumnCount">
            <summary>
            Gets max column count of the string collection collection
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#StringCollectionItem}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Index of the item.</param>
            <returns>Item.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the item at the specified index.
            </summary>
            <param name="index">Index of item.</param>
            <returns>Item.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.Add(FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">Item</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an item to the collection.
            </summary>
            <param name="item">Item</param>
            <returns>Index at which item was inserted</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.AddRange(FarPoint.Win.Chart.StringCollectionItem[])">
            <summary>
            Adds an array of items to the collection.
            </summary>
            <param name="items">Array of items</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.Insert(System.Int32,FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.InsertRange(System.Int32,FarPoint.Win.Chart.StringCollectionItem[])">
            <summary>
            Inserts an array of items into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of items.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.Clear">
            <summary>
            Removes all items from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.Remove(FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">Item.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes an item from the collection.
            </summary>
            <param name="item">Item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an item from the collection at the specified index.
            </summary>
            <param name="index">Index of item.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.Contains(FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Determines whether the collection contains a specific item.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific item.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>true if item is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.IndexOf(FarPoint.Win.Chart.StringCollectionItem)">
            <summary>
            Determines the index of the item in the collection.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>Index of the item if item is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the item in the collection.
            </summary>
            <param name="item">Item to locate in collection.</param>
            <returns>Index of the item if item is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.CopyTo(FarPoint.Win.Chart.StringCollectionItem[],System.Int32)">
            <summary>
            Copies the items in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the items copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the items in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the items copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.StringCollectionCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new StringCollectionCollection from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StringCollectionCollection.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesCollection">
            <summary>
            Represents a collection of series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.#ctor">
            <summary>
            Creates a new instance of the SeriesCollection class.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.#ctor(FarPoint.Win.Chart.SeriesCollection)">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series collection.
            </summary>
            <param name="collection">Series collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.#ctor(FarPoint.Win.Chart.Series[])">
            <summary>
            Creates a new series collection that is a deep copy of the
            specified series array.
            </summary>
            <param name="seriesArr">Series array to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.Count">
            <summary>
            Gets the number of series in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Series}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <returns>Series.</returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Add(FarPoint.Win.Chart.Series)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a series to the collection.
            </summary>
            <param name="item">Series to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.AddRange(FarPoint.Win.Chart.Series[])">
            <summary>
            Adds an array of series to the collection.
            </summary>
            <param name="items">Array of series to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>  
            <remarks>The function fires a list changed event with the old index the index at
            which to start adding. The new index is the index of the last added element. </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Insert(System.Int32,FarPoint.Win.Chart.Series)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="item">Series.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Series[])">
            <summary>
            Inserts an array of series into the collection at the specified index.
            </summary>
            <param name="index">Index of series.</param>
            <param name="items">Array of series.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
            <remarks>The function fires a list changed event with the old index the index at
            which to start adding. The new index is the index of the last added element. </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Clear">
            <summary>
            Removes all series from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Remove(FarPoint.Win.Chart.Series)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified series from the collection.
            </summary>
            <param name="item">Series to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the series at the specified index.
            </summary>
            <param name="index">Index of series.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Contains(FarPoint.Win.Chart.Series)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific series.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>true if series is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.IndexOf(FarPoint.Win.Chart.Series)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the series in the collection.
            </summary>
            <param name="item">Series to locate in collection.</param>
            <returns>Index of the series if series is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.CopyTo(FarPoint.Win.Chart.Series[],System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the series in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the series copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.SeriesCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="E:FarPoint.Win.Chart.SeriesCollection.ListChanged">
            <summary>
            Occurs when this list is changed, such as when an item in the list is added, inserted, deleted, or changed, 
            or when the list is cleared.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.OnListChanged(System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Raises the <see cref="E:ListChanged"/> event.
            </summary>
            <param name="e">The <see cref="T:System.ComponentModel.ListChangedEventArgs"/> instance that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SeriesCollection.Clone">
            <summary>
            Creates a new object that is a copy of the current instance.
            </summary>
            <returns>
            A new object that is a copy of this instance.
            </returns>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesCollectionChangingEvent">
            <summary>
             SeriesCollectionChanging is the base class for classes containing event data.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesCollectionChangingEventHandler">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.StackedAreaSeries">
            <summary>
            Represents a stacked group of area series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Area borders and area fills
            can be assigned to a series or a point with null (Nothing in VB)
            indicating unassigned.  Area depth is measured relative to the
            floor grid cell (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.#ctor(FarPoint.Win.Chart.StackedAreaSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.Series">
            <summary>
            Gets the collection area series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of area series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.Percent">
            <summary>
            Gets or sets whether the areas are stacked or 100% stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedAreaSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedAreaSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.StackedBarSeries">
            <summary>
            Represents a stacked group of bar series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Bar borders and bar fills
            can be assigned to a series or a point with null (Nothing in VB)
            indicating unassigned.  Bar width and bar depth are measured
            relative to the floor grid cell (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.#ctor(FarPoint.Win.Chart.StackedBarSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.Count">
            <summary>
            Gets the number of points in the group.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of bar series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to data point width
            (0 = no gap, 1 = gap can data point have same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.GapDepth">
            <summary>
            Gets or sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.Percent">
            <summary>
            Gets or sets whether bars are stacked or 100% stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedBarSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedBarSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.StackedLineSeries">
            <summary>
            Represents a stacked group of line series in a Y plot area.
            </summary>
            <remarks>
            Each point contains single value.  Line borders and line fills
            can be assigned to a series or a point with null (Nothing in VB)
            indicating unassigned.  Line depth is measured relative to the
            floor grid cell (with a range 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.#ctor(FarPoint.Win.Chart.StackedLineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.Series">
            <summary>
            Gets the collection of line series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of line series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.GapDepth">
            <summary>
            Gets of sets amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.Percent">
            <summary>
            Gets or sets whether the lines are stacked or 100% stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedLineSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedLineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.StackedPointSeries">
            <summary>
            Represents a stacked group of point series in a Y plot area.
            </summary>
            <remarks>
            Each point contains a single value.  Point borders, point fills,
            and point markers can be assigned to a series or a point with null
            (Nothing in VB) indicating unassigned.  Point depth is measured
            relative to the floor grid cell (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.#ctor(FarPoint.Win.Chart.StackedPointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="group">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.Series">
            <summary>
            Gets the collection of point series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.FarPoint#Win#Chart#ICompositeSeries#Series">
            <summary>
            Gets the collection of point series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.GapDepth">
            <summary>
            Gets of sets the amount of space between series.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or is greater than 5.
            </exception>
            <remarks>
            Gap depth is measured relative to the data point depth
            (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.Percent">
            <summary>
            Gets or sets whether the points are stacked or 100% stacked.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StackedPointSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.series_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StackedPointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Stripe">
            <summary>
            Represents an axis stripe.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.#ctor">
            <summary>
            Creates a new axis stripe.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.#ctor(System.Double,System.Double,FarPoint.Win.Chart.Fill)">
            <summary>
            Creates a new axis stripe with the specified range and fill.
            </summary>
            <param name="from">Start of range.</param>
            <param name="to">End of range.</param>
            <param name="fill">Fill of range.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.#ctor(FarPoint.Win.Chart.Stripe)">
            <summary>
            Creates a new axis stripe that is a deep copy of the specified axis stripe.
            </summary>
            <param name="stripe">Stripe to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.Clone">
            <summary>
            Creates a deep copy of this stripe.
            </summary>
            <returns>A deep copy of this stripe.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.Stripe.Fill">
            <summary>
            Gets or sets the fill of the stripe.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Stripe.From">
            <summary>
            Gets or sets the start value of the stripe.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Stripe.To">
            <summary>
            Gets or sets the end value of the stripe.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.Stripe.Changed">
            <summary>
            Occurs when the stripe is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Stripe.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.StripeCollection">
            <summary>
            Represents a collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.#ctor">
            <summary>
            Creates a new collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.#ctor(FarPoint.Win.Chart.StripeCollection)">
            <summary>
            Creates a new collection of stripes that is a deep copy of the
            specified collection of stripes.
            </summary>
            <param name="collection">Collection to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.Count">
            <summary>
            Gets the number of stripes in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#Stripe}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.Item(System.Int32)">
            <summary>
            Gets or sets the stripe at the specified index.
            </summary>
            <param name="index">Index of stripe.</param>
            <returns>Stripe at the specified index.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets or sets the stripe at the specified index.
            </summary>
            <param name="index">Index of stripe.</param>
            <returns>Stripe at the specified index.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.Add(FarPoint.Win.Chart.Stripe)">
            <summary>
            Adds a stripe to the collection.
            </summary>
            <param name="item">Stripe to add.</param>
            <returns>Index at which item was inserted</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds a stripe to the collection.
            </summary>
            <param name="item">Stripe to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.AddRange(FarPoint.Win.Chart.Stripe[])">
            <summary>
            Adds an array of stripes to the collection.
            </summary>
            <param name="items">Array of stripes to add.</param>
            <returns>Index at which item was inserted</returns>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.Insert(System.Int32,FarPoint.Win.Chart.Stripe)">
            <summary>
            Inserts a stripe into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Stripe.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts a stripe into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Stripe.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.InsertRange(System.Int32,FarPoint.Win.Chart.Stripe[])">
            <summary>
            Inserts an array of stripes into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of Stripes.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.Clear">
            <summary>
            Removes all stripes from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.Remove(FarPoint.Win.Chart.Stripe)">
            <summary>
            Removes the specified stripe from the collection.
            </summary>
            <param name="item">Stripe to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified stripe from the collection.
            </summary>
            <param name="item">Stripe to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the stripe at the specified index.
            </summary>
            <param name="index">Index of stripe.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.Contains(FarPoint.Win.Chart.Stripe)">
            <summary>
            Determines whether the collection contains a specific stripe.
            </summary>
            <param name="item">Stripe to locate in collection.</param>
            <returns>true if stripe is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific stripe.
            </summary>
            <param name="item">Stripe to locate in collection.</param>
            <returns>true if stripe is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.IndexOf(FarPoint.Win.Chart.Stripe)">
            <summary>
            Determines the index of the stripe in the collection.
            </summary>
            <param name="item">Stripe to locate in collection.</param>
            <returns>Index of the stripe if stripe is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the stripe in the collection.
            </summary>
            <param name="item">Stripe to locate in collection.</param>
            <returns>Index of the stripe if stripe is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.CopyTo(FarPoint.Win.Chart.Stripe[],System.Int32)">
            <summary>
            Copies the stripes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the stripes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the stripes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the stripes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.StripeCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.StripeCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.SunburstPlotArea">
            <summary>
            Plot area for sunburst chart.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstPlotArea.VaryColorMultiSeries">
            <summary>
            Gets or sets whether the VaryColor property of the plot area is automatically generated.
            </summary>    
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.#ctor(FarPoint.Win.Chart.SunburstPlotArea)">
            <summary>
            Create a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new SunburstPlotArea from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstPlotArea.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.SunburstSeries">
            <summary>
            Represents a Sunburst series in a sunburst plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.LabelVisible">
            <summary>
            Gets or sets whether the data labels are visible.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.#ctor(FarPoint.Win.Chart.SunburstSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.TreeData">
            <summary>
            Gets series tree data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Borders">
            <summary>
            Gets the collection of borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Fills">
            <summary>
            Gets the collection of fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Border">
            <summary>
            Gets or sets the border for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that line
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.Fill">
            <summary>
            Gets or sets the fill for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.LabelContainsCategoryName">
            <summary>
            Gets or sets whether the category name is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.SunburstSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.GetCateGoryNames(System.Int32)">
            <summary>
            Get category by index.
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.GetValue(System.Int32)">
            <summary>
            Get value by index
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.categoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.pieBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.pieFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new SunburstSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.SunburstSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.TextDirection">
            <summary>
            Specifies the direction of text.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.Horizontal">
            <summary>
            Displays the text in a right to left orientation
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.Vertical">
            <summary>
            Displays the text in a top to bottom orientation
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.VerticalRTL">
            <summary>
            Displays the text in a right to left, top to bottom orientation
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.Rotate90Degree">
            <summary>
            Rotates the text up 90 degrees from a horizontal line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.Rotate270Degree">
            <summary>
            Rotates the text 270 degrees from a horizontal line
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.Stacked">
            <summary>
            Displays the text stacked vertically
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.TextDirection.StackedRTL">
            <summary>
            Displays the text stacked vertically from right to left
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.TreemapPlotArea">
            <summary>
            Represents a Treemap plot area in a chart model.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapPlotArea.VaryColorMultiSeries">
            <summary>
            Gets or sets whether the VaryColor property of the plot area is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.#ctor(FarPoint.Win.Chart.TreemapPlotArea)">
            <summary>
            Create a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new TreemapPlotArea from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapPlotArea.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.TreemapLayoutCreator">
            <summary>
            Summary description for Treemap.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.LabelOption">
            <summary>
            Specifies the option used to display the label.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LabelOption.None">
            <summary>
            The label won't be displayed
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LabelOption.Overlapping">
            <summary>
            The label will be displayed overlapped
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.LabelOption.Banner">
            <summary>
            The label will be displayed in a separate banner
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.TreemapSeries">
            <summary>
            Represents a Treemap series in a Treemap plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.LabelOption">
            <summary>
            Gets or sets the lable option.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.LabelVisible">
            <summary>
            Gets or sets whether the data labels are visible.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.#ctor(FarPoint.Win.Chart.TreemapSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.TreeData">
            <summary>
            Gets series tree data.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Borders">
            <summary>
            Gets the collection of pie borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Fills">
            <summary>
            Gets the collection of pie fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Border">
            <summary>
            Gets or sets the pie border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that pie border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.Fill">
            <summary>
            Gets or sets the pie fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that pie fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.LabelContainsCategoryName">
            <summary>
            Gets or sets whether the category name is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.TreemapSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.GetCategoryNames(System.Int32)">
            <summary>
            Returns Category name of point.
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.GetValue(System.Int32)">
            <summary>
            Returns value of point
            </summary>
            <param name="pointIndex"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.Values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.CategoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.Borders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.Fills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Creates a new TreemapSeries from serialization.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.TreemapSeries.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"></see> with the data needed to serialize the target object.
            </summary>
            <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo"></see> to populate with data</param>
            <param name="context">Destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"></see>) for this serialization</param>
        </member>
        <member name="T:FarPoint.Win.Chart.Action">
            <summary>
            Abstract class used to implemented actions.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Action.PerformAction(System.Object)">
            <summary>
            Invoked when an action occurs.
            </summary>
            <param name="sender">Object on which the action occurred</param>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoAction">
            <summary>
            Represents the actions in the component for which the user can perform an undo or redo.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoAction.SaveUndoState">
            <summary>
            Saves undo state information.
            </summary>
            <returns>Boolean: true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoAction.Undo(System.Object)">
            <summary>
            Undoes the action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>Boolean: true if successful; false otherwise</returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoAction.PerformAction(System.Object)">
            <summary>
            Performs the undo action.
            </summary>
            <param name="sender">The sender.</param>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoAction.PerformUndoAction(System.Object)">
            <summary>
            Performs the undo action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoRedoEventArgs">
            <summary>
            Represents the event data for the undo and redo events handled by the undo manager.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoEventArgs.#ctor(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.UndoRedoEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.UndoRedoEventArgs.Action">
            <summary>
            Gets the undo action which has just completed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoRedoCancelEventArgs">
            <summary>
            Represents the event data for the undo and redo events handled by the undo manager.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoCancelEventArgs.#ctor(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.UndoRedoEventArgs"/> class.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.UndoRedoCancelEventArgs.Action">
            <summary>
            Gets the undo action which has just completed.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoRedoEventHandler">
            <summary>
            Represents a defined method that handles the undo and redo events from the undo manager.
            </summary>
            <param name="sender">UndoManager</param>
            <param name="e">Undo or redo event data</param>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoRedoCancelEventHandler">
            <summary>
            Represents a defined method that handles the undo and redo events from the undo manager.
            </summary>
            <param name="sender">UndoManager</param>
            <param name="e">Undo or redo event data</param>
        </member>
        <member name="T:FarPoint.Win.Chart.UndoRedoManager">
            <summary>
            Represents the manager of the undo actions for the FpChart component.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.UndoRedoManager.undoList">
            <summary>
            Specifies the undo stack (last element is on top).
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.UndoRedoManager.redoList">
            <summary>
            Specifies the redo stack (last element is on top).
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.UndoRedoManager.maxLength">
            <summary>
            Specifies the maximum number of UndoAction objects to keep on the undo or redo stacks.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.UndoRedoManager.chart">
            <summary>
            Fpchart control which can be used to fire events when
            executing actions.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.UndoRedoManager.actionPending">
            <summary>
            Specifies whether an action is in progress (to prevent recursion).
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.#ctor(FarPoint.Win.Chart.FpChart,System.Int32)">
            <summary>
            Creates a new undo action manager.
            </summary>
            <param name="chart">The FpChart control.</param>
            <param name="maxLength">Length of the maximum number of actions allowed to be undo.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Undo">
            <summary>
            Undoes the last action done with PerformUndoAction and adds it to the redo list.
            </summary>
            <returns>Boolean: true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Undo(System.Int32)">
            <summary>
            Undoes the specified number of actions and adds them to the redo list.
            </summary>
            <param name="count">Number of actions to undo, or -1 to undo all actions</param>
            <returns>Boolean: true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Undo(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Undoes all actions in the undo stack up to and including the specified action and adds it to the redo list.
            </summary>
            <param name="action">UndoAction to undo</param>
            <returns>Boolean: true if successful; false otherwise</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.UndoRedoManager.CanUndo">
            <summary>
            Gets whether Undo manager can undo an action, which depends on
            undo list is empty or not.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Redo">
            <summary>
            Redoes the last action undone with Undo and adds it to the undo list.
            </summary>
            <returns>Boolean: true if successful; false otherwise</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Redo(System.Int32)">
            <summary>
            Redoes the specified number of actions and adds them to the undo list.
            </summary>
            <param name="count">Number of actions to redo, or -1 to redo all pending actions</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Redo(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Redoes all actions in the redo stack up to and including the specified action and adds it to the undo list.
            </summary>
            <param name="action">The action.</param>
            <returns>True if successful</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.UndoRedoManager.CanRedo">
            <summary>
            Gets whether Redo manager can redo an action, which depends on redo 
            list is empty or not.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.PerformUndoAction(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Performs the specified action (it can then be undone with Undo).
            </summary>
            <param name="action">UndoAction</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.PopUndo">
            <summary>
            Pops the top action from the undo stack.
            </summary>
            <returns>UndoAction</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.PushUndo(FarPoint.Win.Chart.UndoAction,System.Boolean)">
            <summary>
            Pushes the specified action onto the undo stack.
            </summary>
            <param name="action">Undo action</param>
            <param name="clearRedo">True to clear the redo stack (action is being performed), false otherwise (action is being undone)</param>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.PushRedo(FarPoint.Win.Chart.UndoAction)">
            <summary>
            Pushes the specified action onto the redo stack.
            </summary>
            <param name="action">UndoAction</param>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.PopRedo">
            <summary>
            Pops the top action from the redo stack.
            </summary>
            <returns>UndoAction</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.UndoRedoManager.Clear">
            <summary>
            Clears out current Undo and Redo stacks
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.ActionComplete">
            <summary>
            Occurs when the undo or redo action is complete.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.UndoComplete">
            <summary>
            Occurs when the undo action is complete.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.RedoComplete">
            <summary>
            Occurs when the redo action is complete.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.ActionPerforming">
            <summary>
            Occurs when the undo or redo action is performing, users
            can cancel this action. Actions are cancelled are not added
            to the undo list.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.UndoPerforming">
            <summary>
            Occurs when the undo action is performing, user can cancel this undo action.
            Cancelled undo action are not added to redo list and are not removed
            from undo list.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.UndoRedoManager.RedoPerforming">
            <summary>
            Occurs when the redo action is performing,  user can cancel this redo action.
            Cancelled redo action are not added to undo list and are not removed
            from redo list.
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.MoveResizeUndoAction">
            <summary>
            Represents an undo action for moving or resizing an object.
            Object could be a label, legend or plot area.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.oldLoc">
            <summary>
            A variable to store old location.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.newLoc">
            <summary>
            A variable to store new location.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.oldSize">
            <summary>
            A variable to store old size.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.newSize">
            <summary>
            A variable to store new size.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.obj">
            <summary>
            The object to be resizedor moved.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.oldManualLayout">
            <summary>
            The object to be store plot area manual layout state.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.oldChartTitleOverLay">
            <summary>
            The object to be store chart title Overlay state.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.MoveResizeUndoAction.oldVaryColorExcelPolicy">
            <summary>
            The object store vary color state.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.MoveResizeUndoAction.#ctor(System.Object,System.Drawing.SizeF,System.Drawing.PointF)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.MoveResizeUndoAction"/> class.
            </summary>
            <param name="obj">The object.</param>
            <param name="newSize">The new size.</param>
            <param name="newLoc">The new location.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.MoveResizeUndoAction.SaveUndoState">
            <summary>
            Saves undo state information.
            </summary>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.MoveResizeUndoAction.Undo(System.Object)">
            <summary>
            Undoes the action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.MoveResizeUndoAction.PerformUndoAction(System.Object)">
            <summary>
            Performs the undo action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.DeleteUndoAction">
            <summary>
            Represents an undo action for deleting an object.
            Object could be a label, legend, plot area or seriesInfo
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DeleteUndoAction.model">
            <summary>
            Reference to the chart model from which the object is deleted.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DeleteUndoAction.obj">
            <summary>
            The object to be deleted.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.DeleteUndoAction.idx">
            <summary>
            The index of the object in its collection. It is used to restore the object to correct 
            index in its collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.DeleteUndoAction.#ctor(FarPoint.Win.Chart.ChartModel,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.DeleteUndoAction"/> class.
            </summary>
            <param name="model">The chart model.</param>
            <param name="selectedObject">The selected object to be deleted.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.DeleteUndoAction.ObjectDeleted">
            <summary>
            Gets the object which is deleted.
            </summary>
            <value>The object deleted.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.DeleteUndoAction.Index">
            <summary>
            Gets the index of the object in its collection. It is used to restore the object to correct 
            index in its collection.
            </summary>
            <value>The index.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.DeleteUndoAction.SaveUndoState">
            <summary>
            Saves undo state information.
            </summary>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.DeleteUndoAction.PerformUndoAction(System.Object)">
            <summary>
            Performs the undo action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.DeleteUndoAction.Undo(System.Object)">
            <summary>
            Undoes the action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.ClipboardPasteUndoAction">
            <summary>
            Represents an undo action for pasting an object from clipboard.
            Object could be a label area, legend area, plot area or series info.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ClipboardPasteUndoAction.model">
            <summary>
            The chart model to which the object is pasted to.
            </summary>
        </member>
        <member name="F:FarPoint.Win.Chart.ClipboardPasteUndoAction.obj">
            <summary>
            The object to paste.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardPasteUndoAction.#ctor(FarPoint.Win.Chart.ChartModel,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.ClipboardPasteUndoAction"/> class.
            </summary>
            <param name="model">The chart model.</param>
            <param name="pastingObject">The object to paste.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ClipboardPasteUndoAction.PastingObject">
            <summary>
            Gets the object to paste. The object could be a label area, 
            legend area, plot area or series info.
            </summary>
            <value>The pasting object.</value>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardPasteUndoAction.SaveUndoState">
            <summary>
            Saves undo state information.
            </summary>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardPasteUndoAction.Undo(System.Object)">
            <summary>
            Undoes the action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardPasteUndoAction.PerformUndoAction(System.Object)">
            <summary>
            Performs the undo action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="T:FarPoint.Win.Chart.ClipboardCutUndoAction">
            <summary>
            Represents an undo action for cutting an object to clipboard.
            Object could be a label area, legend area, plot area or series info.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardCutUndoAction.#ctor(FarPoint.Win.Chart.ChartModel,System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:FarPoint.Win.Chart.ClipboardCutUndoAction"/> class.
            </summary>
            <param name="model">The chart model.</param>
            <param name="selectedObject">The selected object to be cut.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ClipboardCutUndoAction.Undo(System.Object)">
            <summary>
            Undoes the action.
            </summary>
            <param name="sender">The sender.</param>
            <returns>
            Boolean: true if successful; false otherwise
            </returns>
            <remarks>If sender is a FpChart object, it will be used to fire events during the operation.</remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.Util.DeserializeXmlFormatter(System.Xml.XmlReader,System.String)">
            <summary>
            Deserialize ILabelFormatter from xml.
            </summary>
            <param name="reader">xml reader</param>
            <param name="formatterType">Concrete type of formatter</param>
            <returns> deserialized object</returns>
        </member>
        <member name="T:FarPoint.Win.Chart.Util.Spline">
            <summary>
            Represents a cubic spline of the form...
                Si(x) = ai + bi * (x - xi) + ci * (x - xi) ^ 2 + di * (x - xi) ^ 3
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesLabelCreatorFactory.MultiValueDimensionType">
            <summary>
            Series can contains multi-dimension data point values, not only restricted by AxisType
            </summary>
        </member>
        <member name="T:FarPoint.Win.Chart.SeriesLabelCreatorFactory.SeriesLabelFormatterHelper">
            <summary>
            Keeps formatting info for series label
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:FarPoint.Win.Chart.SpreadWinLineF.Intersection(FarPoint.Win.Chart.SpreadWinLineF)" -->
        <member name="T:FarPoint.Win.Chart.ValueAxis">
            <summary>
            Represents a numeric axis.
            </summary>
            <remarks>
            An axis can have a title, a ruler line, major/minor tick marks, tick
            mark labels, major/minor grid lines, and stripes.  The direction of
            the axis can be reversed.  The minimum, maximum, major/minor tick,
            label units can be automatically generated or manually assigned.
            The scale can be linear or logrithmic.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.#ctor">
            <summary>
            Creates a new axis.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.#ctor(FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Creates a new axis that is a deep copy of the specified axis.
            </summary>
            <param name="axis">Axis to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.Clone">
            <summary>
            Creates a deep copy of the specified axis.
            </summary>
            <returns>A deep copy of the specified axis.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AxisId">
            <summary>
            Gets or sets an ID for the axis.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Title">
            <summary>
            Gets or sets the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleDataSource">
            <summary>
            Gets or sets the data source for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleDataField">
            <summary>
            Gets or sets the field in the data source that stores the title.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleRotationAngle">
            <summary>
            Gets or sets the rotation angle for the title.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleTextDirection">
            <summary>
            Gets or sets the text orientation for the title.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.bindingList_ListChanged(System.Object,System.ComponentModel.ListChangedEventArgs)">
            <summary>
            Handles the ListChanged event of the BindingList.
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">A ListChangedEventArgs that contains the event data.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleTextFont">
            <summary>
            Gets or sets the font used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelTextFont">
            <summary>
            Gets or sets the font used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label font
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleTextFill">
            <summary>
            Gets or sets the fill used to draw the title.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the title fill effet
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelTextFill">
            <summary>
            Gets or sets the fill used to draw the tick mark labels.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the label fill
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.RulerLine">
            <summary>
            Gets or sets the line used to draw the ruler.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the ruler line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MajorGridLine">
            <summary>
            Gets or sets the line used to draw the major grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MinorGridLine">
            <summary>
            Gets or sets the line used to draw the minor grid lines.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the grid line
            is unset.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleVisible">
            <summary>
            Gets or sets whether the title is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelVisible">
            <summary>
            Gets or sets whether the tick mark labels are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.RulerVisible">
            <summary>
            Gets or sets whether the ruler is visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MajorGridVisible">
            <summary>
            Gets or sets whether the major grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MinorGridVisible">
            <summary>
            Gets or sets whether the minor grid lines are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MajorTickVisible">
            <summary>
            Gets or sets whether the major tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MinorTickVisible">
            <summary>
            Gets or sets whether the minor tick marks are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Reverse">
            <summary>
            Gets or sets whether the direction of the ruler is inverted.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AutoMinimum">
            <summary>
            Gets or sets whether the ruler minimum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AutoMaximum">
            <summary>
            Gets or sets whether the ruler maximum is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AutoMajorUnit">
            <summary>
            Gets or sets whether the interval for major tick marks and
            major grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AutoMinorUnit">
            <summary>
            Gets or sets whether the interval for minor tick marks and
            minor grid lines is automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.AutoLabelUnit">
            <summary>
            Gets or sets whether the interval for tick mark labels is
            automatically generated.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Minimum">
            <summary>
            Gets or sets the ruler minimum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Maximum">
            <summary>
            Gets or sets the ruler maximum.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MajorUnit">
            <summary>
            Gets or sets the interval for the major tick marks and major
            grid lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MinorUnit">
            <summary>
            Gets or sets the interval for the minor tick marks and minor
            grid lines.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelUnit">
            <summary>
            Gets or sets the interval for tick mark labels.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.DisplayUnits">
            <summary>
            Gets or sets the units in which labels are displayed.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Logarithmic">
            <summary>
            Gets or sets whether the axis uses a linear or logarithmic scale.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LogarithmicBase">
            <summary>
            Gets or sets the logarithmic base.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than 2 or greater than 1000.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.TitleOffset">
            <summary>
            Gets or sets the distance the title is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelOffset">
            <summary>
            Gets or sets the distance the tick mark labels are offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.RulerOffset">
            <summary>
            Gets or sets the distance the ruler is offset.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 1584.
            </exception>
            <remarks>
            Offset is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MajorTickLength">
            <summary>
            Gets or sets the length of the major tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.MinorTickLength">
            <summary>
            Gets or sets the length of the minor tick marks.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Length is measured in points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelNumberFormat">
            <summary>
            Gets or sets the number format for labels.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
            <remarks>This property is deprecated</remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelRotationAngle">
            <summary>
            Gets or sets the rotation angle for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LabelTextDirection">
            <summary>
            Gets or sets the text orientation for the label.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Location">
            <summary>
            Gets or sets the location of the axis relative to the plot area.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.LocationCustomValue">
            <summary>
            Gets or sets the custom location of the axis relative to the plot area.
            </summary>
            <remarks>
            This value only has an effect if the Location property is set to AxisLocation.Value
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Position">
            <summary>
            Gets or sets the axis position.
            </summary>
            <value>The position.</value>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxis.Stripes">
            <summary>
            Gets the collection of stripes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.stripes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxis.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisTypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
            <summary>
            Returns whether this object supports properties, using the specified context.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <returns>
            true if <see cref="M:System.ComponentModel.TypeConverter.GetProperties(System.Object)"/> should be called to find the properties of this object; otherwise, false.
            </returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisTypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
            <summary>
            Gets a collection of properties for the type of object specified by the value parameter.
            </summary>
            <param name="context">An <see cref="T:System.ComponentModel.ITypeDescriptorContext"/> that provides a format context.</param>
            <param name="value">An <see cref="T:System.Object"/> that specifies the type of object to get the properties for.</param>
            <param name="attributes">An array of type <see cref="T:System.Attribute"/> that will be used as a filter.</param>
            <returns>
            A <see cref="T:System.ComponentModel.PropertyDescriptorCollection"/> with the properties that are exposed for the component, or null if there are no properties.
            </returns>
        </member>
        <member name="T:FarPoint.Win.Chart.ValueAxisCollection">
            <summary>
            Represents a collection of axes.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.#ctor">
            <summary>
            Creates a new axis collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.#ctor(FarPoint.Win.Chart.ValueAxisCollection)">
            <summary>
            Creates a new axis collection that is a deep copy of the
            specified axis collection.
            </summary>
            <param name="collection"></param>
            <exception cref="T:System.ArgumentNullException">
            collection is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.Count">
            <summary>
            Gets the number of axes in the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#IsFixedSize">
            <summary>
            Gets whether the collection has a fixed size.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#Generic#ICollection{FarPoint#Win#Chart#ValueAxis}#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#IsReadOnly">
            <summary>
            Gets whether the collection is read-only.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#ICollection#IsSynchronized">
            <summary>
            Gets whether access to the collection is
            synchronized.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#ICollection#SyncRoot">
            <summary>
            Gets an object that can be used to synchronize access to
            the collection.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#Item(System.Int32)">
            <summary>
            Gets the axis at the specified index.
            </summary>
            <param name="index">Index of axis.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.Add(FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#Add(System.Object)">
            <summary>
            Adds an axis to the collection.
            </summary>
            <param name="item">Axis to add.</param>
            <returns>Index at which item was inserted.</returns>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.AddRange(FarPoint.Win.Chart.ValueAxis[])">
            <summary>
            Adds an array of axes to the collection.
            </summary>
            <param name="items">Array of axes to add.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.Insert(System.Int32,FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
            <summary>
            Inserts an axis into the collection at the specified index.
            </summary>
            <param name="index">Index at which item should be inserted.</param>
            <param name="item">Axis.</param>
            <exception cref="T:System.ArgumentNullException">
            item is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.InsertRange(System.Int32,FarPoint.Win.Chart.ValueAxis[])">
            <summary>
            Inserts an array of axes into the collection at the specified index.
            </summary>
            <param name="index">Index at which items should be inserted.</param>
            <param name="items">Array of axes.</param>
            <exception cref="T:System.ArgumentNullException">
            items is a null reference (Nothing in VB)
            or some items[i] is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.Clear">
            <summary>
            Removes all axes from the collection.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.Remove(FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
            <returns>true if item was successfully removed from the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#Remove(System.Object)">
            <summary>
            Removes the specified axis from the collection.
            </summary>
            <param name="item">Axis to remove.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the axis at the specified index from the collection.
            </summary>
            <param name="index">Index of axis.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Gets an enumerator that iterates through the collection.
            </summary>
            <returns>Enumerator that iterates through the collection.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.Contains(FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#Contains(System.Object)">
            <summary>
            Determines whether the collection contains a specific axis.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>true if axis is found in the collection; otherwise, false.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.IndexOf(FarPoint.Win.Chart.ValueAxis)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#IList#IndexOf(System.Object)">
            <summary>
            Determines the index of the axis in the collection.
            </summary>
            <param name="item">Axis to locate in collection.</param>
            <returns>Index of the axis if axis is found in the collection; otherwise, -1.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.CopyTo(FarPoint.Win.Chart.ValueAxis[],System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>
            Copies the axes in the collection to an array,
            starting at the specified array index.
            </summary>
            <param name="array">One-dimension array that is the destination of the axes copied from the collection.</param>
            <param name="arrayIndex">Zero-based index in array at which copying begins.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.ValueAxisCollection.Changed">
            <summary>
            Occurs when the collection is changed.
            </summary>
        </member>
        <member name="E:FarPoint.Win.Chart.ValueAxisCollection.ItemAdding">
            <summary>
            Occurs when the collection is adding new item.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="E:FarPoint.Win.Chart.ValueAxisCollection.ValueAxisPropertyChanging">
            <summary>
            Occurs when the series is changing.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.OnValueAxisPropertyChanging(System.EventArgs)">
            <summary>
            Raises the Validating event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.item_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.ValueAxisCollection.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.Wall">
            <summary>
            Represents a chart wall.  A wall can be assigned a border, a fill, 
            and a width.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.#ctor">
            <summary>
            Creates a new wall.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.#ctor(FarPoint.Win.Chart.Wall)">
            <summary>
            Creates a new wall that is a deep copy of the specified wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            wall is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.#ctor(System.Boolean)">
            <summary>
            Creates a new wall with the specified visibility.
            </summary>
            <param name="visible">Indicates if wall is visible.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.Clone">
            <summary>
            Creates a deep copy of this wall.
            </summary>
            <returns>A deep copy of this wall.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.Wall.Border">
            <summary>
            Gets the border of the wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Wall.Fill">
            <summary>
            Gets the fill of the wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Wall.Visible">
            <summary>
            Gets the visibility of the wall.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.Wall.Width">
            <summary>
            Gets the width of the wall.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or greater than 72.
            </exception>
            <remarks>
            Width is measured in points.
            </remarks>
        </member>
        <member name="E:FarPoint.Win.Chart.Wall.Changed">
            <summary>
            Occurs when the wall is changed.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.OnChanged(System.EventArgs)">
            <summary>
            Raises the Changed event.
            </summary>
            <param name="e">An EventArgs that contains the event data.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.Wall.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.WaterfallSeries">
            <summary>
            Represents a waterfall series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.barBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.barFills_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.#ctor(FarPoint.Win.Chart.WaterfallSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.LabelVisible">
            <summary>
            Gets or sets whether the data labels are visible.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.SetTotals(System.String)">
            <summary>
            Sets the list of total points.
            </summary>
            <param name="totals">List index of total, split by comma (,)</param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.GetTotals">
            <summary>
            Get total list.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.IsTotal(System.Int32)">
            <summary>
            Gets whether the index point is a total.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.SetTotal(System.Int32,System.Boolean)">
            <summary>
            Sets whether a point is total.
            </summary>
            <param name="index">Point index</param>
            <param name="isTotal">Whether a point is total</param>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Border">
            <summary>
            Gets or sets the bar border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.TotalBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.IncreaseBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.DecreaseBorder">
            <summary>
            
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Fill">
            <summary>
            Gets or sets the bar fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the bar fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.TotalFill">
            <summary>
            Gets or Sets Fill of the total.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.IncreaseFill">
            <summary>
            Gets or Sets Fill for increase point.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.DecreaseFill">
            <summary>
            Gets or Sets Fill for decrease points.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Borders">
            <summary>
             Gets the collection of bar borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.Fills">
            <summary>
            Gets or sets the collection of bar fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.ShowConnectorLine">
            <summary>
            Gets or sets whether there is a visible connector line between the series points.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.GapWidth">
            <summary>
            Gets or sets the amount of space between categories.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero or greater than 5.
            </exception>
            <remarks>
            Gap width is measured relative to the data point width
            (0 = no gap, 1 = gap and data point have same width).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.WaterfallSeries.LabelContainsValue">
            <summary>
            Gets or sets whether the value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.categoryNames_Changed(System.Object,System.EventArgs)">
            <summary>
            Category names changed 
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.WaterfallSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYBubbleSeries">
            <summary>
            Represents a bubble series in a Y plot area.
            </summary>
            <remarks>
            Each point contains two values: value and size.  Bubble borders and
            bubble fills can be assigned for the series or for a point in
            the series with null (Nothing in VB) indicating unassigned.  Bubble
            size is measured relative to plot area width (with a range 0 to 1).
            Bubble depth is measured relative to floor grid (with a range of
            0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.#ctor(FarPoint.Win.Chart.XYBubbleSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
            <remarks>
            If no x values are supplied then the indices of the data points will
            be used for the x values.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.SizeValues">
            <summary>
            Gets the collection of size values for the series.
            </summary>
            <remarks>
            If no size values are supplied then a size of 1 will be used for
            all data points.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.NegativeBorders">
            <summary>
            Gets the collection of negative borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.PositiveBorders">
            <summary>
            Gets the collection of positve borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.NegativeFills">
            <summary>
            Gets the collection of negative fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.PositiveFills">
            <summary>
            Gets the collection of positive fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.NegativeBorder">
            <summary>
            Gets or sets the negative border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the negative border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.PositiveBorder">
            <summary>
            Gets or sets the positive border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the positive border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.NegativeFill">
            <summary>
            Gets or sets the negative fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the negative fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.PositiveFill">
            <summary>
            Gets or sets the positive fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the positive fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.BubbleSize">
            <summary>
            Gets or sets the size of the largest bubble.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than or equal to zero or is greater than one.
            </exception>
            <remarks>
            Size is measured relative to plot area width (0 = no width,
            1 = width of plot area).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than 5.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.NegativeVisible">
            <summary>
            Gets or sets whether bubbles with negative size are visible.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.SizeRepresentsArea">
            <summary>
            Gets or sets whether data point size values represent area of
            bubble or width of bubble.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYBubbleSeries.LabelContainsSizeValue">
            <summary>
            Gets or sets whether the size value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.sizeValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.negativeBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.positiveBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.negativeFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.positiveFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYBubbleSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYLineSeries">
            <summary>
            Represents a line series in an XY plot area.
            </summary>
            <remarks>
            Each point contains two values: x and y.  Line borders and line fills
            can be assigned for the series or for a point in the series with
            null (Nothing in VB) indicating unassigned.  Depth of the line
            is measured relative to the floor grid cell (with a range of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.#ctor(FarPoint.Win.Chart.XYLineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
            <remarks>
            If no x values are supplied then the indices of the data points will
            be used for the x values.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LineBorders">
            <summary>
            Gets the collection of line borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LineFills">
            <summary>
            Gets the collection of line fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LineBorder">
            <summary>
            Gets or sets the line border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LineFill">
            <summary>
            Gets or setes the line fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than 5.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.SmoothedLine">
            <summary>
            Gets or sets whether the line is smoothed (not jagged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYLineSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.lineBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.lineFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYLineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYPlotArea">
            <summary>
            Represents an XY plot area in a chart model.
            </summary>
            <remarks>
            The plot area has an x-axis, a y-axis, a z-axis, and up to six walls.
            The x-axis and y-axis represent values.  The z-axis represents series.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.#ctor(FarPoint.Win.Chart.XYPlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.XAxes">
            <summary>
            Gets the collection of x axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.YAxes">
            <summary>
            Gets the colleciton of y axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.ZAxis">
            <summary>
            Gets the z-axis.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.SideWall">
            <summary>
            Gets or sets the left wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.BottomWall">
            <summary>
            Gets or sets the bottom wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.xAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.yAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.zAxis_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.sideWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.bottomWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.backWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYPointSeries">
            <summary>
            Represents a point series in an XY plot area.
            </summary>
            <remarks>
            Each point contains two values: x and y.  Point borders and point
            fills can be assigned for the series or for a point in the
            series with null (Nothing in VB) indicating unassigned.  Size of
            the point (width and height) is measured in model units.  Depth of
            the point is measured relative to the floor grid cell (with a range
            of 0 to 1).
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.#ctor(FarPoint.Win.Chart.XYPointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
            <remarks>
            If no x values are supplied then the indices of the data points will
            be used for the x values.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.GapDepth">
             <summary>
             Gets or sets the amount of space between series.
             </summary>
             <exception cref="T:System.ArgumentOutOfRangeException">
             value is less than zero or is greater than one.
             </exception>
             <remarks>
             Gap depth is measured relative to the data point depth
             (0 = no gap, 1 = gap and data point have the same depth).
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYPointSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYPointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYSeries">
            <summary>
            Represents a Base class for series in an XY plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYSeries.#ctor(FarPoint.Win.Chart.XYSeries)">
            <summary>
            Creates a new series that is a deep copy for the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="P:FarPoint.Win.Chart.XYSeries.XAxisId">
            <summary>
            Gets or sets the ID of the x-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYSeries.YAxisId">
            <summary>
            Gets or sets the ID of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYZLineSeries">
            <summary>
            Represents a line series in an XYZ plot area.
            </summary>
            <remarks>
            Each point contains three values: x, y, and z.  Line borders and
            line fills can be assigned for the series or for a point
            in the series with null (Nothing in VB) indicating unassigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.#ctor(FarPoint.Win.Chart.XYZLineSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.ZValues">
            <summary>
            Gets the collection of z values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.LineBorders">
            <summary>
            Gets the collection of line borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.LineBorder">
            <summary>
            Gets or sets the line border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.SmoothedLine">
            <summary>
            Gets or sets whether the line is smoothed (not jagged).
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZLineSeries.LabelContainsZValue">
            <summary>
            Gets or sets whether the z value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.xValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.yValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.zValues_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.lineBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.pointBorders_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.pointFills_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZLineSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYZPlotArea">
            <summary>
            Represents an XYZ plot area in a chart model.
            </summary>
            <remarks>
            The plot area has an x-axis, a y-axis, a z-axis, and up to six walls.
            The x-axis, y-axis, and z-axis represent values.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.#ctor(FarPoint.Win.Chart.XYZPlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.XAxes">
            <summary>
            Gets the collection of x axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.YAxes">
            <summary>
            Gets the collection of y axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.ZAxes">
            <summary>
            Gets the collection of z axies.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.SideWall">
            <summary>
            Gets or sets the left wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.BottomWall">
            <summary>
            Gets or sets the bottom wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPlotArea.Depth">
            <summary>
            Gets or sets the depth of the plot area.
            </summary>
            <remarks>
            Depth is measured relative to width of plot area
            (0 = no depth, 1 = depth and width are equal).
            </remarks>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Value is less than or equal to zero or greater than 20.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.xAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.yAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.zAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.sideWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.bottomWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.backWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYZPointSeries">
            <summary>
            Represents a point series in an XYZ plot area.
            </summary>
            <remarks>
            Each point contains three values: x, y, and z.  Point borders and
            point fills can be assgined for the series or for a point
            in the series with null (Nothing in VB) indicating unassigned.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.#ctor(FarPoint.Win.Chart.XYZPointSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.XValues">
            <summary>
            Gets the collection of x values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.YValues">
            <summary>
            Gets the collection of y values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.ZValues">
            <summary>
            Gets the collection of z values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointBorders">
            <summary>
            Gets the collection of point borders for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointFills">
            <summary>
            Gets the collection of point fills for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointMarkers">
            <summary>
            Gets the collection of point markers for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointBorder">
            <summary>
            Gets or sets the point border for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point border
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointFill">
            <summary>
            Gets or sets the point fill for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point fill
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.PointMarker">
            <summary>
            Gets or sets the point marker for the series.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the point marker
            is unset for the series.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.VaryColors">
            <summary>
            Gets or sets whether each data point is displayed with a different color.
            </summary>
            <remarks>
            If false then all data points are displayed with the same color.
            If true then each data point is displayed with a different color.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.LabelContainsXValue">
            <summary>
            Gets or sets whether the x value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.LabelContainsYValue">
            <summary>
            Gets or sets whether the y value is displayed in the labels.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZPointSeries.LabelContainsZValue">
            <summary>
            Gets or sets whether the z value is displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.xValues_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.yValues_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.zValues_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.pointBorders_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.pointFills_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.pointMarkers_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZPointSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYZSeries">
            <summary>
            Represents the Base class for a series in an XYZ plot area.
            </summary>
            
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSeries.#ctor(FarPoint.Win.Chart.XYZSeries)">
            <summary>
            Creates a new series that is a deep copy for the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSeries.XAxisId">
            <summary>
            Gets or sets the ID of the x-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSeries.YAxisId">
            <summary>
            Gets or sets the ID of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSeries.ZAxisId">
            <summary>
            Gets or sets the ID of the z-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.XYZSurfaceSeries">
            <summary>
            Represents a surface series in an XYZ plot area.
            </summary>
            <remarks>
            Each point contains a single value.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.#ctor(FarPoint.Win.Chart.XYZSurfaceSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.Clone">
            <summary>
            Creates a deep copy of this series.
            </summary>
            <returns>A deep copy of this series.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.Count">
            <summary>
            Gets the number of points in the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.CountX">
            <summary>
            Gets the number of points along the x-axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.CountZ">
            <summary>
            Gets the number of points along the z-axis.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.Values">
            <summary>
            Gets the collection of values for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.SurfaceLine">
            <summary>
            Gets or sets the line for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the line
            is unset for the surface.
            </remarks>
        </member>
        <member name="P:FarPoint.Win.Chart.XYZSurfaceSeries.SurfaceFill">
            <summary>
            Gets or sets the fill for the surface.
            </summary>
            <remarks>
            Value of null (Nothing in VB) indicates that the fill
            is unset for the surface.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.values_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.XYZSurfaceSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.YPlotArea">
            <summary>
            Represents a Y plot area in a chart model.
            </summary>
            <remarks>
            The plot area has an x-axis, a y-axis, a z-axis, and up to six walls.
            The x-axis represents categories.  The y-axis represents values.
            The z-axis represents series.  The y-axis can be oriented vertically
            or horizontally.
            </remarks>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.#ctor">
            <summary>
            Creates a new plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.#ctor(FarPoint.Win.Chart.YPlotArea)">
            <summary>
            Creates a new plot area that is a deep copy of the specified
            plot area.
            </summary>
            <param name="plotArea">Plot area to copy.</param>
            <exception cref="T:System.ArgumentNullException">
            plotArea is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.Clone">
            <summary>
            Creates a deep copy of this plot area.
            </summary>
            <returns>A deep copy of this plot area.</returns>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.XAxis">
            <summary>
            Gets the x-axis.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.YAxes">
            <summary>
            Gets the collection of y axes.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.ZAxis">
            <summary>
            Gets the z-axis.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.SideWall">
            <summary>
            Gets or sets the left wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.BottomWall">
            <summary>
            Gets or sets the bottom wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.BackWall">
            <summary>
            Gets or sets the back wall.
            </summary>
            <exception cref="T:System.ArgumentNullException">
            value is a null reference (Nothing in VB).
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YPlotArea.Vertical">
            <summary>
            Gets of sets whether the plot is vertical or horizontal.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.xAxis_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.yAxes_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.zAxis_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.sideWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.backWall_Changed(System.Object,System.EventArgs)">
            <summary>
            
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YPlotArea.OnChanged(System.EventArgs)">
            <summary>
            
            </summary>
            <param name="e"></param>
        </member>
        <member name="T:FarPoint.Win.Chart.YSeries">
            <summary>
            Represents a Base class for a series in a Y plot area.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.ScanCategoryNamesValues(System.Boolean[],System.Int32,System.Collections.Generic.List{FarPoint.Win.Chart.MappedDataPoint}@)">
            <summary>
            
            </summary>
            <param name="exists"></param>
            <param name="min"></param>
            <returns>The first index which contains data.</returns>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.#ctor">
            <summary>
            Creates a new series.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.#ctor(FarPoint.Win.Chart.YSeries)">
            <summary>
            Creates a new series that is a deep copy of the specified series.
            </summary>
            <param name="series">Series to copy.</param>
        </member>
        <member name="P:FarPoint.Win.Chart.YSeries.CategoryNames">
            <summary>
            Gets the collection of category names for the series.
            </summary>
        </member>
        <member name="P:FarPoint.Win.Chart.YSeries.YAxisId">
            <summary>
            Gets or sets the ID of the y-axis on which the series is plotted.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            value is less than zero.
            </exception>
        </member>
        <member name="P:FarPoint.Win.Chart.YSeries.LabelContainsCategoryName">
            <summary>
            Gets or sets whether the category name in displayed in the labels.
            </summary>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.categoryNames_Changed(System.Object,System.EventArgs)">
             <summary>
            
             </summary>
             <param name="sender"></param>
             <param name="e"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.GetSchema">
            <summary>
            This method is reserved and should not be used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.ReadXml(System.Xml.XmlReader)">
            <summary>
            Generates an object from its XML representation.
            </summary>
            <param name="reader"></param>
        </member>
        <member name="M:FarPoint.Win.Chart.YSeries.WriteXml(System.Xml.XmlWriter)">
            <summary>
            Converts an object into its XML representation.
            </summary>
            <param name="writer"></param>
        </member>
        <member name="T:Win32.WinConst.WindowPosFlags">
            <summary>
            Specifies the window position, flags for WINDOWPOS
            structure.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_DRAWFRAME">
            <summary>
            Draws a frame (defined in the window's class description) around the window.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Sends a WM_NCCALCSIZE message to the window, even if the window's size is not being changed. 
            If this flag is not specified, WM_NCCALCSIZE is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, 
            the window is activated and moved to the top of either the topmost or non-topmost group (depending on the setting of the hwndInsertAfter member).
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, 
            the valid contents of the client area are saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores the x and y parameters).
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            Does not change the owner window's position in the Z order.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. 
            This applies to the client area, the nonclient area (including the title bar and scroll bars), 
            and any part of the parent window uncovered as a result of the window being moved. 
            When this flag is set, the application must explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOREPOSITION">
            <summary>
            Same as the SWP_NOOWNERZORDER flag.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hwndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Win32.WinConst.WindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="T:Win32.WinConst.DeviceContextValues">
            <summary>Values to pass to the GetDCEx method.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.Window">
            <summary>DCX_WINDOW: Returns a DC that corresponds to the window rectangle rather
            than the client rectangle.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.Cache">
            <summary>DCX_CACHE: Returns a DC from the cache, rather than the OWNDC or CLASSDC
            window. Essentially overrides CS_OWNDC and CS_CLASSDC.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.NoResetAttrs">
            <summary>DCX_NORESETATTRS: Does not reset the attributes of this DC to the
            default attributes when this DC is released.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.ClipChildren">
            <summary>DCX_CLIPCHILDREN: Excludes the visible regions of all child windows
            below the window identified by hWnd.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.ClipSiblings">
            <summary>DCX_CLIPSIBLINGS: Excludes the visible regions of all sibling windows
            above the window identified by hWnd.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.ParentClip">
            <summary>DCX_PARENTCLIP: Uses the visible region of the parent window. The
            parent's WS_CLIPCHILDREN and CS_PARENTDC style bits are ignored. The origin is
            set to the upper-left corner of the window identified by hWnd.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.ExcludeRgn">
            <summary>DCX_EXCLUDERGN: The clipping region identified by hrgnClip is excluded
            from the visible region of the returned DC.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.IntersectRgn">
            <summary>DCX_INTERSECTRGN: The clipping region identified by hrgnClip is
            intersected with the visible region of the returned DC.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.ExcludeUpdate">
            <summary>DCX_EXCLUDEUPDATE: Unknown...Undocumented</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.IntersectUpdate">
            <summary>DCX_INTERSECTUPDATE: Unknown...Undocumented</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.LockWindowUpdate">
            <summary>DCX_LOCKWINDOWUPDATE: Allows drawing even if there is a LockWindowUpdate
            call in effect that would otherwise exclude this window. Used for drawing during
            tracking.</summary>
        </member>
        <member name="F:Win32.WinConst.DeviceContextValues.Validate">
            <summary>DCX_VALIDATE When specified with DCX_INTERSECTUPDATE, causes the DC to
            be completely validated. Using this function with both DCX_INTERSECTUPDATE and
            DCX_VALIDATE is identical to using the BeginPaint function.</summary>
        </member>
        <member name="T:Win32.WinConst.TrackMouseEventFlags">
            <summary>
            Flags for TRACKMOUSEEVENT structure
            </summary>
        </member>
        <member name="F:Win32.WinConst.TrackMouseEventFlags.TME_HOVER">
            <summary>
            
            </summary>
        </member>
        <member name="F:Win32.WinConst.TrackMouseEventFlags.TME_LEAVE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Win32.WinConst.TrackMouseEventFlags.TME_NONCLIENT">
            <summary>
            
            </summary>
        </member>
        <member name="T:Win32.WinConst.ReDrawWindowFlags">
            <summary>
             RedrawWindow() flags
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_ERASE">
            <summary>
            Causes the window to receive a WM_ERASEBKGND message when the window is repainted. The RDW_INVALIDATE flag must also be specified;
            otherwise, RDW_ERASE has no effect.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_FRAME">
            <summary>
            Causes any part of the nonclient area of the window that intersects the update region to receive a WM_NCPAINT message. 
            The RDW_INVALIDATE flag must also be specified; otherwise, RDW_FRAME has no effect. 
            The WM_NCPAINT message is typically not sent during the execution of RedrawWindow unless either RDW_UPDATENOW or RDW_ERASENOW is specified.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_INTERNALPAINT">
            <summary>
            Causes a WM_PAINT message to be posted to the window regardless of whether any portion of the window is invalid.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_INVALIDATE">
            <summary>
            Invalidates lprcUpdate or hrgnUpdate (only one may be non-NULL). If both are NULL, the entire window is invalidated.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_NOERASE">
            <summary>
            Suppresses any pending WM_ERASEBKGND messages.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_NOFRAME">
            <summary>
            Suppresses any pending WM_NCPAINT messages. This flag must be used with RDW_VALIDATE and is typically used with RDW_NOCHILDREN. 
            RDW_NOFRAME should be used with care, as it could cause parts of a window to be painted improperly.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_NOINTERNALPAINT">
            <summary>
            Suppresses any pending internal WM_PAINT messages. 
            This flag does not affect WM_PAINT messages resulting from a non-NULL update area.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_VALIDATE">
            <summary>
            Validates lprcUpdate or hrgnUpdate (only one may be non-NULL). 
            If both are NULL, the entire window is validated. This flag does not affect internal WM_PAINT messages
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_ERASENOW">
            <summary>
            Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT and WM_ERASEBKGND messages,
            if necessary, before the function returns. WM_PAINT messages are received at the ordinary time.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_UPDATENOW">
            <summary>
            Causes the affected windows (as specified by the RDW_ALLCHILDREN and RDW_NOCHILDREN flags) to receive WM_NCPAINT, 
            WM_ERASEBKGND, and WM_PAINT messages, if necessary, before the function returns.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_ALLCHILDREN">
            <summary>
            Includes child windows, if any, in the repainting operation.
            </summary>
        </member>
        <member name="F:Win32.WinConst.ReDrawWindowFlags.RDW_NOCHILDREN">
            <summary>
            Excludes child windows, if any, from the repainting operation.
            </summary>
        </member>
        <member name="F:Win32.WinStructs.NCCALCSIZE_PARAMS.rectModified">
            <summary>
            Contains the new coordinates of a window that has been moved or resized, that is, it is the proposed new window coordinates.
            </summary>
        </member>
        <member name="F:Win32.WinStructs.NCCALCSIZE_PARAMS.rectBeforeMove">
            <summary>
            Contains the coordinates of the window before it was moved or resized.
            </summary>
        </member>
        <member name="F:Win32.WinStructs.NCCALCSIZE_PARAMS.rectClientBeforeMove">
            <summary>
            Contains the coordinates of the window's client area before the window was moved or resized.
            </summary>
        </member>
        <member name="F:Win32.WinStructs.NCCALCSIZE_PARAMS.lpPos">
            <summary>
            Pointer to a WINDOWPOS structure that contains the size and position values specified in the operation that moved or resized the window.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.LicenseDialog.components">
            <summary>
            Required designer variable.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog.Dispose(System.Boolean)">
            <summary>
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
        </member>
        <member name="M:GrapeCity.Common.LicenseDialog.InitializeComponent">
            <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.GcNetFxLicenseProvider`1.VerifyDesignTimeEnvironment">
            <summary>
              Verify the environment to get whether the component is in design-time. 
            </summary>
            <returns>
              <c>true</c> if it is in design-time; otherwise <c>false</c>.
            </returns>
            <remarks>
              In DesignTime, because of IDE bugs, some component are not created with DesigntimeLicenseContext. 
              For example, when drag a control from Win Forms DataSource tool window, or use a web control in a ASP.NET Template.
              This may cause the control do run-time license validation and found that there is no license.
              To resolve this problem, we will check the environment and decide whether to do design-time license validation again.
            </remarks>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseResource">
            <summary>
              Contains the resource for <see cref="!:PowerToolsLicenseProvider"/>.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.ErrorIcon">
            <summary>
              Gets the Error icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.InfoIcon">
            <summary>
              Gets the Info icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.WarningIcon">
            <summary>
              Gets the Warning icon for license dialog.
            </summary>
        </member>
        <member name="P:GrapeCity.Common.Resources.LicenseResource.GrapeCityIcon">
            <summary>
              Gets the GrapeCity icon for license dialog.
            </summary>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String)">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetString(System.String,System.Object[])">
            <summary>
              Gets the localized string.
            </summary>
            <param name="name">
              The name of the string. It could be a const value in <see cref="T:GrapeCity.Common.Resources.LicenseResource"/>.
            </param>
            <param name="args">
              The data used in the string.
            </param>
            <returns>
              The localized string.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyFileVersion(System.Reflection.Assembly)">
            <summary>
              Get the file version description of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose file version description should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the file version description of the specified assembly.
            </returns>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.GetAssemblyName(System.Reflection.Assembly)">
            <summary>
              Get the name of the specified assembly.
            </summary>
            <param name="assembly">
              The <see cref="T:System.Reflection.Assembly"/> whose name should be get.
            </param>
            <returns>
              A <see cref="T:System.String"/> indicates the name of the specified assembly.
            </returns>
            <remarks>
              Please use this method to get assembly name. It is because that the Assembly.GetName method need FileIO permission.
            </remarks>
        </member>
        <member name="M:GrapeCity.Common.Resources.LicenseResource.FormatSerialKey(System.String)">
            <summary>
              Format the product key as "xxxx-xxxx-xxxx-xxxx-xxxx-xxxx".
            </summary>
            <param name="productKey">
              A <see cref="T:System.String"/> indicates the original product key which is a sequence of 24 digits.
            </param>
            <returns>
              A readable text indicates the product key.
            </returns>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogKind">
            <summary>
              Represents the kind of license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Info">
            <summary>
              Info dialog. It is shown for a trial license.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Warning">
            <summary>
              Warning dialog. It is shown for a trial license which is expired.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogKind.Error">
            <summary>
              Error dialog. It is shown for an invalid license or other errors.
            </summary>
        </member>
        <member name="T:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget">
            <summary>
              Represents the target web site for the link in license dialog.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.None">
            <summary>
              None target.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebFAQ">
            <summary>
              Goto web site http://www.grapecity.com/japan/support/faq/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebActivation">
            <summary>
              Goto web site http://www.grapecity.com/japan/activation/.
            </summary>
        </member>
        <member name="F:GrapeCity.Common.Resources.LicenseDialogWebLinkTarget.GotoWebShop">
            <summary>
              Goto web site http://shop.grapecity.com/.
            </summary>
        </member>
    </members>
</doc>
